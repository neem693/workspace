<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="style.css">
<meta charset="UTF-8">
<meta name="viewport"
	content="width=device-width,initial-scale = 1.0" />
<title>study css</title>
<script src="../js/jquery-3.1.1.min.js"></script>
<script src="css.js"></script>
</head>
<body>
	<h1 id="index_subject">목차</h1>
	<div id="list"></div>
	<h1 id="bookmark_subject">부록</h1>
	<div id="bookmark_list"></div>
	<p class="subject_fix" id="subject_line"></p>

	<div id="b">
		<p id="width">current width:</p>
		<p>
			실렉터 { 속성; 값; } <br> 형식은 이렇다.
		</p>

		<p>
			실렉터1, 실렉터 2{ 속성: 값; } <br> 콤마를 사용해서 나열하면, 두개의 실렉터에
			같은 선언을 기술하는 것이다.
		</p>

		<h1 class="subject">실렉터의 종류</h1>
		<h2>타입 실렉터</h2>
		<p>타입 실렉터는 HTML 태그명으로 스타일시트 집합을 작성한다.</p>

		<h2>유니버셜 실렉터</h2>
		<p>유니버설 실렉터에는 속성 실렉터, ID 실렉터, class 실렉터가 있다.</p>
		<h3>속성을 실렉터로 사용(속성 실렉터)</h3>
		<p>태그의 지정한 속성명이 있는 경우에만 스타일을 지정하는 방법으로 같은 태그 중 지정한 속성이
			있는 태그에 스타일을 지정할 때 사용한다. 실렉터는 태그명[속성명]과 같이 기술한다. 예를 들어
			&lt;p&gt;태그에만 스타일 적용할 경우, 실렉터는 p[id]와 같은 형태로 작성하고 &lt;p
			id = "p1"&gt; 와 같은 형태에 스타일이 적용된다. p태그에 id속성이 있는 경우에만 적용할
			스타일을 선언하는 것이다.</p>
		<h3>클래스 속성값</h3>
		<p>css에서는 클래스로 된 태그의 영역의 디자인을 정의할 때는 .area{} 라는 형태로
			하며, html하에서는 이를 p class = "area"라고 정의한다.</p>
		<h3>id 속성 값(value)을 실렉터로 사용(ID실렉터)</h3>
		<p>태그의 id속성의 값을 실렉터로 사용하는 방법으로, 1개의 태그에만 스타일을 지정할 때
			사용한다. 다음의 &lt;div&gt;태그의 id 속성값이 display인 경우 &gt;div id =
			"display"에 적용할 스타일을 선언한 것이다. 해당 스타일을 css에서는
			div#display{}라고 입력한다.</p>
		<p>ddd</p>
		<h2>1개의 태그에 스타일을 2개 이상 중첩하면 1개만 적용된다.</h2>
		<p>어떤 태그에 스타일이 2개 이상 설정된 경우, 우선순위는 스타일 설정 기술한 순차적 순서로
			결정된다.</p>

		<table>
			<tr>
				<td>&lt;div id = "displayArea" class = "area"&gt;</td>
				<td>div#idsplay{ color:red; }<br> .area{
					color:blue;}
				</td>
			</tr>
		</table>
		<p>이런 경우 먼저 div태그에 먼저 나온 id="display"스타일이 적용되고, class
			="area"속성은 적용되지 않는다. 따라서 1개의 태그에 스타일을2개 이상 중첩하면 안된다.</p>
		<h1 class="subject">css의 주요 속성과 값</h1>
		<p>
			다음은 css에서 제공하는 스타일 시트의 선언에 사용되는 속성과 값을 표시하는 사이트이다. 스타일을
			정의할 때 제시된 스타일시트 속성에 대한 값을 참고해서 작성한다. <br> <a
				href="http://www.w3.org/TR/CSS21/" target="_blank">www.w3.org/TR/CSS21/</a>
			<br> <a href="study_csstable.html" target="_blank">테이블
				보기</a>
		</p>
		<h1 class="subject">색상과 배경 지정</h1>
		<h2>글자색(Foreground Color)</h2>
		<table>
			<tr>
				<td>예를 들면 다음과 같다. p{color : blue;}<br> p{color
					: rbg(0,0,255);}<br> p{color : #0000FF;}<br>
					p{color : rgb(0%,0%,100%);}<br></td>
			</tr>
		</table>

		<h2>1.배경</h2>

		<p>태그의 배경으로 색상 또는 이미지를 지정하는데 사용된다. 배경의 상속되지 않으며, 루트
			엘리먼트의 배경은 'background-position'에 의해 위치가 고정된 상태에서 루트 엘리먼트에
			배경을 지정하는 것으로써 캔버스의 배경과 전체 캔버스를 커버할 수 있다. html 웹 페이지에 배경을
			지정할 때는 html 태그보다는 body 태그에 배경을 지정하는 것을 권장한다. 웹 브라우저는
			HTML과 XHTML의 html 태그로부터 배경 속성의 계산된 값을 사용하는 것보다는 body 태그에서
			처리하는 것을 사용하기 때문이다.</p>

		<table>
			<tr>
				<td>예를 들면 다음과 같다.<br>body{<br>
					background-color: #CAE2F7;<br>}<br>
					p{background-color : blue;}<br> p{background-color
					: #0000FF;}
			</tr>
		</table>

		<h2>2.background-image 속성</h2>

		<p>이 속성은 태그의 배경 이미지를 지정하는데 사용된다. 배경 이미지가 지정되었을 경우에도
			배경색을 지정할 수 있다. 배경 이미지의 경로는 상대 경로, 절대 경로로 지정할 수 있다.</p>

		<table>
			<tr>
				<td>body { background-image : url("pirctrue2.jpg")}<br>
					태그에 배경 이미지를 상대 경로로 지정한 것<br> body{
					background-image :
					url("http://주소/studyhtml5/images/picture2.jpg")}<br>태그에
					배경 이미지를 절대 경로로 지정<br> p{background-image :none}<br>
					배경이미지가 없으면 'none'로 지정.
				</td>
			</tr>
		</table>
		<h2>3.background-repeat 속성</h2>
		<p>이 속성은 배경 이미지가 있는 경우, 이것을 반복해서 화면에 표시할지 여부를 결정하는 데
			사용한다.</p>
		<table>
			<tr>
				<td>body{<br> background-image:
					url("../images/picture2.jpg");<br>
					background-repeat;<br> 배경이미지 수평, 수직으로 모두 반복함.
					repeat-x(수평으로만 반복) repaet-y(수직으로만 반복) no-reapeat(반복 안함)
					inherit(부모로부터 상속)
				</td>
			</tr>
		</table>
		<h2>4.background-attachment 속성</h2>
		<p>이 속성은 배경 이미지가 있을 때 화면의 스크롤이 이동하더라도 이미지를 고정적으로 보여줄
			것인지의 여부를 지정한다.스크롤을 이동하더라도 배경이미지를 고정적이니 위치에 보여주는 fixed로 지정
			- 스크롤을 이동해도 이미지의 위치는 항상 고정</p>
		<table>
			<tr>
				<td>body{<br>background-image:
					url("../images/picture2.jpg");<br>
					background-repeat: no-repeat; <br> 배경이미지 고정을 안한다는
					것<br> background-attachment: fixed;<br> 배경
					이미지 위치 고정<br> }
				</td>
			</tr>
		</table>

		<h2>5.background-position속성</h2>
		<p>이 속성은 배경 이미지가 있을 경우 이미지의 초기 위치를 지정한다.</p>
		<table>
			<tr>
				<td>body{<br>background-image:
					url("../images/picture2.jpg");<br>
					background-repeat: no-repeat; <br> 배경이미지 고정을 안한다는
					것<br> background-attachment: fixed;<br> 배경
					이미지 위치 고정<br> background-position: 100% 100%;<br>
					배경 이미지의 시작 위치를 오른쪽 하단으로 지정<br>top center(50% 0%)<br>center(50%
					50%)<br>bottom(50% 100%)<br>}
				</td>
			</tr>
		</table>
		<h2>6.background속성</h2>
		<p>이 속성은 background-color ,background-image,
			background-repeat, background-attachment,
			background-position</p>
		<table>
			<tr>
				<td>body{<br>background:
					url("../images/picture2.jpg") red center no-repeat
					fixed;<br> 배경 이미지 지정, 배경색 빨강, 이미지의 시작 위치 center,
					이미지 반복 안함. 이미지 위치 고정의 속성을 한 번에 기술<br>}
				</td>
			</tr>
		</table>
		<a href="#background-size" class="center">background-size
			속성에 대한 부분(해당 부분은 css3부분에 따로 있다.)</a>
		<h1 class="subject">폰트 지정</h1>
		<h2>1. font-family 속성</h2>
		<p>이 속성은 엘리먼트에 설정할 폰트의 종류를 지정하는데, 지정하는 값은 'Gill',
			'Helve tica', 'serif', 'sans-serif', 'cursive',
			'fantasy', 'monospace' 중에서 선택할 수 있으며, font-family이름의 우선순위
			리스트로 지정할 수도 있다.</p>
		<table>
			<tr>
				<td>body{font-family: gill;}<br>
					p{font-family: Gill, Helvetica, sans-serif;}<br>
					font- family 우선순위 리스트 를 이렇게 열거하여 만든다.
				</td>
			</tr>
		</table>
		<h2>2. font-style 속성</h2>
		<p>이 속성은 포트 스타일을 normal, italic, oblique 중에서 하나를 선택하는데
			'oblique'는 'italic'과 형태가 거의 유사하다.</p>
		<table>
			<tr>
				<td>h1{font-style: italic;}<br>body{font-style:
					normal;}
				</td>
			</tr>
		</table>

		<h2>3. font-variant 속성</h2>
		<p>이 속성의 small-caps 속성 값을 사용하면 소문자는 모두 대문자로 표시한다.</p>
		<table>
			<tr>
				<td>h1{font-variant: small-caps;}<br>h1엘리먼트의
					내용으로 소문자가 있는 경우 대문자로 변환됨.
				</td>
			</tr>
		</table>

		<h2>4. font-weight 속성</h2>
		<p>이 속성은 폰트의 굵기를 선택한다. 100~900 사이의 값을 지정해서 폰트의 굵기를
			지정하는데, 숫자가 클수록 굵어진다. 속성 값으로 'normal'을 지정하면 400이고, 'bold'는
			700이다.</p>
		<table>
			<tr>
				<td>body{font-weight: normal;}<br>normal은
					400정도의 값<br>p{font-weight: 700;}<br>700은
					bold정도의 굵기
				</td>
			</tr>
		</table>
		<h2>5. font-size 속성</h2>
		<p>이 속성은 폰트의 크기를 지정하는 속성이다.</p>
		<ul>
			<li>absolute-size : 절대적인 크기로 다음 값들 중 하나를 지정한다.</li>
		</ul>

		<ul>
			<li>xx-small : 폰트 사이즈 1</li>
			<li>x-small : 폰트 사이즈 1.5</li>
			<li>small : 폰트 사이즈 2</li>
			<li>medium : 폰트 사이즈 3</li>
			<li>large : 폰트 사이즈 4</li>
			<li>x-large : 폰트 사이즈 5</li>
			<li>xx-large : 폰트 사이즈 6</li>
		</ul>
		<table>
			<tr>
				<td>body{font-size: larger;}<br>h1[font-size:150%]<br>p{font-size:
					14px;}<br>
				</td>
			</tr>
		</table>
		<h2>6.font속성</h2>
		<p>이 속성을 사용하면 font-style, font-variant, font-weight,
			foint-size, line - height, font-family 속성을 한번에 간결하게 표시한다.</p>
		<table>
			<tr>
				<td>p{font: ltalic bold 16px Gill;}<br>//font-style:
					italic; font-weight: bold; font-size: 16px;
					font-family:Gill;이라는 것 <br>.s2{font:80%
					sans-serif;}<br>//font-size: 80%; font-family;
					sans-serif;
				</td>
			</tr>
		</table>

		<h1 class="subject">텍스트(Text)지정</h1>
		<h2>1.text-indent 속성</h2>
		<p>이 속성은 문단에서 첫 번째 줄의 들여쓰기를 지정한다.</p>
		<p>다음은 '2em' 정도 문단 들여쓰기를 하는 예이다. 여기서 em은 전각 대문자 M의 크기를
			사각형으로 취급했을 때 크기로 1em은 16px과 같은 크기이다.</p>

		<table>
			<tr>
				<td>p{text-indent: 2em;}<br>//2em 정도 문단 첫줄
					들여쓰기
				</td>
			</tr>
		</table>

		<h2>2.text-align 속성</h2>
		<p>이 속성은 문단의 내용을 왼쪽 오른쪽 등으로 맞춤시킨다. 이 속성의 값으로는
			'left(왼쪽맞춤), right(오른쪽 맞춤), center(가운데 맞춤), justify(양쪽
			맞춤)'중 하나가 온다.</p>

		<table>
			<tr>
				<td>p{text-align: center;}<br>//가운데 맞춤
				</td>
			</tr>
		</table>

		<table>
			<tr>
				<td>p<br>{text-indent: 2em;//2em 정도 문단 첫줄 들여쓰기<br>text-align:
					justify;//양쪽 맞춤 <br>}
				</td>
			</tr>
		</table>

		<h2>3.text-decoration 속성</h2>
		<p>이 속성은 텍스트에 장식(데코레이션)을 지정한다. 속성 값은 'none(없음)' ,
			'underline(밑줄)', 'overline(윗줄)', 'line-through(취소선)' 중
			하나의 값이 올 수 있다.</p>

		<table>
			<tr>
				<td>body{<br>background: #FFFF00;<br>}<br>
					p{<br> text-indent:2em; //2em 정도 문단 첫줄 들여쓰기<br>
					text-align: justify; //양쪽 맞춤<br>
					text-decoration:underline; //문단에 밑줄 지정 <br>}<br>
					blockquote{<br> text-decoration:
					line-through;//문단에 취소선 지정<br> color:blue; //글자색은
					파랑<br> }
				</td>
			</tr>
		</table>

		<h2>4. letter-spacing 속성</h2>
		<p>이 속성은 글자 간격을 지정한다. 다음은 'letter-spacing'속성을 사용하는
			예이다.</p>


		<table>
			<tr>
				<td>p{<br> text-decoration: line-through;
					//문단에 취소선 지정<br> color: blue; //글자색은 파랑<br>
					letter-spacing: 0.1 em //글자 간격은 0.1em <br>}<br>
					h3{<br> letter-spacing: 1cm;//글자 간격 1cm<br> }
				</td>
			</tr>
		</table>

		<h2>5. word-spacing 속성</h2>
		<p>이 속성은 단어 간격을 지정한다.
		<table>
			<tr>
				<td>p{<br> text-indent: 2em; //2em 정도 문단 첫줄
					들여쓰기<br> text-align: justify; //양쪽 맞춤<br>
					text-decoration: underline //문단에 밑줄 지정 <br>}<br>
					word-spacing: 2cm;//단어 간격 2cm<br> }
				</td>
			</tr>
		</table>

		<h2>6. text-transform 속성</h2>
		<p>이 속성은 영문자의 첫 글자를 대문자로 변환하거나 영문자의 대소문자의 변경을 지정한다. 속성
			값은 'capitalize(첫 글자만 대문자로)', 'uppercase(대문자로),
			'lowercase(소문자로)' , 'none(지정안함)'중 하나의 값이 올 수 있다.</p>
		<table>
			<tr>
				<td>.upper{ text-transform: uppercase;} //대문자로 지정<br>
					.lower{text-transform: lowercase;} //대문자로 지정<br>
					.cap{text-transform: capitalize;}//첫 글자만 대문자로
				</td>
			</tr>
		</table>

		<h2>7. white-space 속성</h2>

		<p>이 속성은 태그 내의 여백을 처리하는 방법으르 정의한다. 속성의 값이 'normal'일 경우
			줄바꿈이 필요한 경우 자동으로 줄 바꿈이 되며, 'pre'일 경우 엔터와 같은 줄 바꿈 기호가 있는
			경우에만 줄 바꿈 된다. 'nowrap'일 경우 br태그를 만나기 전까지 절대 줄 바꿈 되지
			않으며,'pre-wrap'일 경우 줄 바꿈이 필요한 경우 자동으로 줄 바꿈 되고, 줄 바꿈 기호가 있는
			경우에도 줄 바꿈 된다. 'pre-line'일 경우 줄 바꿈이 필요한 경우 자동으로 줄 바꿈 되고, 줄
			바꿈 기호가 있는 경우에도 줄 바꿈 된다.</p>
		<p>white-space 속성을 사용한 예는 다음과 같다.</p>
		<table>
			<tr>
				<td>.normal{ white-space: normal;}<br>
					.pre{white-space: pre;}
				</td>
			</tr>
		</table>

		<table>
			<tbody>
				<tr>
					<th style="width: 14%">Value</th>
					<th>Description</th>
					<th>Play it</th>
				</tr>
				<tr>
					<td>normal</td>
					<td>Sequences of whitespace will collapse into a
						single whitespace. Text will wrap when necessary. This
						is default</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_white-space">Play
							it »</a></td>
				</tr>
				<tr>
					<td>nowrap</td>
					<td>Sequences of whitespace will collapse into a
						single whitespace. Text will never wrap to the next
						line. The text continues on the same line until a
						&lt;br&gt; tag is encountered</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_white-space&amp;preval=nowrap">Play
							it »</a></td>
				</tr>
				<tr>
					<td>pre</td>
					<td>Whitespace is preserved by the browser. Text
						will only wrap on line breaks. Acts like the
						&lt;pre&gt; tag in HTML</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_white-space&amp;preval=pre">Play
							it »</a></td>
				</tr>
				<tr>
					<td>pre-line</td>
					<td>Sequences of whitespace will collapse into a
						single whitespace. Text will wrap when necessary, and
						on line breaks</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_white-space&amp;preval=pre-line">Play
							it »</a></td>
				</tr>
				<tr>
					<td>pre-wrap</td>
					<td>Whitespace is preserved by the browser. Text
						will wrap when necessary, and on line breaks</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_white-space&amp;preval=pre-wrap">Play
							it »</a></td>
				</tr>
				<tr>
					<td>initial</td>
					<td>Sets this property to its default value. <a
						href="https://www.w3schools.com/cssref/css_initial.asp">Read
							about <em>initial</em>
					</a></td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_white-space&amp;preval=initial">Play
							it »</a></td>
				</tr>
				<tr>
					<td>inherit</td>
					<td>Inherits this property from its parent
						element. <a
						href="https://www.w3schools.com/cssref/css_inherit.asp">Read
							about <em>inherit</em>
					</a>
					</td>
					<td></td>
				</tr>
			</tbody>
		</table>

		<h1 class="subject">텍스트 자동 개행(word-break-property)</h1>
		<span id="word-break"></span>
		<h2>Definition and Usage</h2>
		<p>
			The word-break property specifies line breaking rules for
			non-CJK scripts. <br> <br> Tip: CJK scripts are
			Chinese, Japanese and Korean ("CJK") scripts.
		</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 25%">Default value:</th>
					<td>normal</td>
				</tr>
				<tr>
					<th>Inherited:</th>
					<td>yes</td>
				</tr>
				<tr>
					<th>Animatable:</th>
					<td>no. <a href="css_animatable.asp">Read
							about <em>animatable</em>
					</a></td>
				</tr>
				<tr>
					<th>Version:</th>
					<td>CSS3</td>
				</tr>
				<tr>
					<th>JavaScript syntax:</th>
					<td><i>object</i>.style.wordBreak="break-all" <a
						target="_blank"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss3_js_word-break">Try
							it</a></td>
				</tr>
			</tbody>
		</table>
		<h2>Browser Support</h2>
		<p>The numbers in the table specify the first browser
			version that fully supports the property.</p>
		<table class="browserref notranslate">
			<tbody>
				<tr style="height: 80px;">
					<th
						style="width: 25%; font-size: 16px; text-align: left;">Property</th>
					<th style="width: 15%;" class="bsChrome" title="Chrome"></th>
					<th style="width: 15%;" class="bsEdge"
						title="Internet Explorer / Edge"></th>
					<th style="width: 15%;" class="bsFirefox"
						title="Firefox"></th>
					<th style="width: 15%;" class="bsSafari" title="Safari"></th>
					<th style="width: 15%;" class="bsOpera" title="Opera"></th>
				</tr>
				<tr>
					<td style="text-align: left;">word-break</td>
					<td>4.0</td>
					<td>5.5</td>
					<td>15.0</td>
					<td>3.1</td>
					<td>15.0</td>
				</tr>
			</tbody>
		</table>
		<h2>CSS Syntax</h2>
		<pre class="code">word-break: normal|break-all|keep-all|initial|inherit;</pre>
		<h2>Property Values</h2>
		<table>
			<tbody>
				<tr>
					<th style="width: 15%">Value</th>
					<th>Description</th>
				</tr>
				<tr>
					<td>normal</td>
					<td>Default value. Break words according to their
						usual rules</td>
				</tr>
				<tr>
					<td>break-all</td>
					<td>Lines may break between any two letters</td>
				</tr>
				<tr>
					<td>keep-all&nbsp;</td>
					<td>Breaks are prohibited between pairs of letters</td>
				</tr>
				<tr>
					<td>initial</td>
					<td>Sets this property to its default value. <a
						href="https://www.w3schools.com/cssref/css_initial.asp">Read
							about <em>initial</em>
					</a></td>
				</tr>
				<tr>
					<td>inherit</td>
					<td>Inherits this property from its parent
						element. <a
						href="https://www.w3schools.com/cssref/css_inherit.asp">Read
							about <em>inherit</em>
					</a>
					</td>
				</tr>
			</tbody>
		</table>
		<h1 class="subject">CSS line-height Property (줄 높이)</h1>
		<h2>Example</h2>
		<pre class='code'>
div.a {
    line-height: normal;
}

div.b {
    line-height: 1.6;
}

div.c {
    line-height: 80%;
}

div.d {
    line-height: 200%;
}</pre>
		<h2>Definition and Usage</h2>
		<p>
			The line-height property specifies the line height. <br>
			<br> Note: Negative values are not allowed.
		</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 25%">Default value:</th>
					<td>normal</td>
				</tr>
				<tr>
					<th>Inherited:</th>
					<td>yes</td>
				</tr>
				<tr>
					<th>Animatable:</th>
					<td>yes. <a
						href="https://www.w3schools.com/cssref/css_animatable.asp">Read
							about <em>animatable</em>
					</a> <a target="_blank" class="w3-btn btnsmall"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_anim_line-height">Try
							it</a>
					</td>
				</tr>
				<tr>
					<th>Version:</th>
					<td>CSS1</td>
				</tr>
				<tr>
					<th>JavaScript syntax:</th>
					<td><i>object</i>.style.lineHeight="30px" <a
						target="_blank" class="w3-btn btnsmall"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_js_line-height">Try
							it</a></td>
				</tr>
			</tbody>
		</table>
		<h2>Browser Support</h2>
		<p>The numbers in the table specify the first browser
			version that fully supports the property.</p>
		<table>
			<tbody>
				<tr>
					<th
						style="width: 20%; font-size: 16px; text-align: left;">Property</th>
					<th style="width: 16%;" class="bsChrome" title="Chrome"></th>
					<th style="width: 16%;" class="bsEdge"
						title="Internet Explorer / Edge"></th>
					<th style="width: 16%;" class="bsFirefox"
						title="Firefox"></th>
					<th style="width: 16%;" class="bsSafari" title="Safari"></th>
					<th style="width: 16%;" class="bsOpera" title="Opera"></th>
				</tr>
				<tr>
					<td style="text-align: left;">line-height</td>
					<td>1.0</td>
					<td>4.0</td>
					<td>1.0</td>
					<td>1.0</td>
					<td>7.0</td>
				</tr>
			</tbody>
		</table>
		<h2>CSS Syntax</h2>
		<pre class="code">
		line-height: normal|number|length|initial|inherit;</pre>
		<h2>Property Values</h2>
		<table>
			<tbody>
				<tr>
					<th style="width: 14%">Value</th>
					<th>Description</th>
					<th>Play it</th>
				</tr>
				<tr>
					<td>normal</td>
					<td>A normal line height. This is default</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_line-height">Play
							it »</a></td>
				</tr>
				<tr>
					<td><i>number</i></td>
					<td>A number that will be multiplied with the
						current font-size to set the line height</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_line-height&amp;preval=3">Play
							it »</a></td>
				</tr>
				<tr>
					<td><i>length</i></td>
					<td>A fixed line height in px, pt, cm, etc.</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_line-height&amp;preval=25px">Play
							it »</a></td>
				</tr>
				<tr>
					<td><i>%</i></td>
					<td>A line height in percent of the current font
						size</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_line-height&amp;preval=150%25">Play
							it »</a></td>
				</tr>
				<tr>
					<td>initial</td>
					<td>Sets this property to its default value. <a
						href="https://www.w3schools.com/cssref/css_initial.asp">Read
							about <em>initial</em>
					</a></td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_line-height&amp;preval=initial">Play
							it »</a></td>
				</tr>
				<tr>
					<td>inherit</td>
					<td>Inherits this property from its parent
						element. <a
						href="https://www.w3schools.com/cssref/css_inherit.asp">Read
							about <em>inherit</em>
					</a>
					</td>
					<td></td>
				</tr>
			</tbody>
		</table>
		<h2>More Examples</h2>
		<pre class='code'>
div.a {
    line-height: 10px;
}

div.b {
    line-height: 30px;
}

div.c {
    line-height: 0.5cm;
}

div.d {
    line-height: 1cm;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p65.html"
			class="center">프렉티스 65</a>
			<pre class = "code">
div.a {
    line-height: 0.5;
}

div.b {
    line-height: 1.6;
}

div.c {
    line-height: 2;
}</pre>
<a href = "/studyhtml5/ch04/practice/css_p66.html" class = 'center'>프렉티스 66</a>
		<h1 class="subject">테이블(table) 지정</h1>
		<h2>1. 테이블의 개요</h2>
		<p>테이블 관련 작업은 CSS에서 테이블을 위한 레이아웃을 정의하는 것이다. CSS테이블에서는
			특별한 테이블 레이아웃을 실행시킬 수 있는데, 경우에 따라서 html문서에서 테이블 관련
			태그(td,tr) 등을 사용하지 않고도 css에서 테이블과 관련된 구조의 태그들을 원하는 형태로 배치할
			수 있다.</p>

		<table>
			<tr>
				<td>hcell{<br> display: table-row; // 테이블의
					tr태그의 역할 <br> }<br> vcell{<br> display:
					table-cell;//테이블의 td태그 역할<br> }<br>

				</td>
			</tr>
		</table>
		<p>이렇게 하면 hcell을 태그로 vcell을 tr로 사용할 수 있다.</p>

		<p>또한 비주얼한 포맷팅도 정의할 수 있다. 행과 열에 속해있는 셀들은 행 그룹(row
			group)과 열 그룹(column group)으로 구성되어 있다. 행, 열, 행 그룹, 열 그룹
			그리고 셀들은 테두리로 둘러싸여 있으며, 데이터를 맞춤할 수 있다.</p>

		<table>
			<tr>
				<td>table{border-collapse: collapse; } // 테두리의 형태가
					합쳐진 형태 모델 <br> //tr 엘리먼트에서 id 속성 값이 r1인 엘리먼트에<br>
					//테두리 속성으로 두께가 1px,, 테두리 스타일이 싱글라인, 테두리색 파랑 지정<br>
					tr#r1{ border: 1px solid blue; }<br> //tr 엘리먼트에 id
					속성 값이 r2인 엘리먼트에<br> //테두리 속성으로 두꼐가 2px, 테두리 스타일이
					싱글라인, 테두리색 검정 지정<br> tr#r2{border:2px solid
					black;} //tr 엘리먼트에서 id 속성 값이 r3인 엘리먼트에 <br> //테두리
					속성으로 두꼐가 3px, 테두리 스타일이 싱글라인, 테두리색 검정 지정<br> tr#r3
					{ border: 3px solid black; }<br> }<br> <br>
					<br> //이렇게 입력만 하면은 tr과 td를 id로 입력하여 조지면 된다.

				</td>
			</tr>
		</table>
		<h2>2.css 테이블 모델</h2>
		<p>CSS 테이블 모델은 HTMl 4 테이블 모델을 기반으로 한다. 테이블 모델은
			테이블(table),캡션(caption), 행(row), 행 그룹(row group),
			열(column), 열 그룹(column group),그리고 셀(cell)로 이루어져 있다.</p>
		<p>
			CSS모델은 이런 각각의 컴포넌트들 엘리먼트로 포함시키기 위한 문서 언어(XML 애플리케이션 등)을
			필요로 하지 않는다. 단지 이들을 'display'속성을 사용해서 처리하면 된다.<br>다음은
			테이블 관련 엘리먼트들과 그에 대응되는 'display'속성 값을 표시한 것이다. 단, display
			속성을 사용해서 table-column과 table-column-group를 표시 할 수 없다.
		</p>
		<table>
			<tr>
				<th>display 속성 값</th>
				<th>태그명</th>
				<th>설명</th>
			<tr>
				<td>table</td>
				<td>[table]</td>
				<td>블랙 레벨 테이블(block-level table) 기술</td>
			</tr>
			<tr>
				<td>inline-table</td>
				<td>[table]</td>
				<td>인라인 레벨 테이블(inline-level table) 기술</td>
			</tr>
			<tr>
				<td>table-row</td>
				<td>[tr]</td>
				<td>행 기술</td>
			</tr>
			<tr>
				<td>table-row-group</td>
				<td>[tbody]</td>
				<td>하나 이상의 행들의 그룹 기술</td>
			</tr>
			<tr>
				<td>table-header-group</td>
				<td>[thead]</td>
				<td>table-row-group과 비슷, 캡션 다음에 기술</td>
			</tr>
			<tr>
				<td>table-footer-group</td>
				<td>[tfoot]</td>
				<td>table-row-group과 비슷, 모든 행을 표시 후에 기술</td>
			</tr>
			<tr>
				<td>table-column</td>
				<td>[col]</td>
				<td>열 기술</td>
			</tr>
			<tr>
				<td>table-column-group</td>
				<td>[colgroup]</td>
				<td>하나 이상의 열들의 그룹 기술</td>
			</tr>
			<tr>
				<td>table-caption</td>
				<td>[caption]</td>
				<td>테이블의 캡션을 기술</td>
			</tr>

		</table>
		<p>html을 위한 스타일시트의 이들 값의 기술은 다음과 같다.</p>
		<table>
			<tr>
				<td>table { display: table}<br> tr {display:
					table-row}<br> thead{display:table-header-group}<br>
					tbody{display:table-row-group}<br>
					tfoot{display:table-footer-group}<br> col{display:
					table-column}<br> colgroup{display:
					table-column-group}<br> td,th {display:
					table-cell}<br> caption{display: table-caption}
				</td>
			</tr>
		</table>

		<h2>3.테이블의 내용 배치</h2>
		<p>테이블의 태그들을 내용과 테두리를 가진 시각의 박스로 생성되며, 각 셀들은
			패팅(padding)을 가지며 마진(margin)들은 갖지 않는다.</p>
		<h3>table-layout 속성</h3>
		<p>이 속성은 테이블의 셀을 배치하는데 사용하는것으로 'fixed', 'auto' 중 하나의
			값을 사용한다. 값이 양이 오버 되었을 때, 테이블 크기가 저절로 커지는 현상이 있다. 이 현상을 막기
			위해서는 table-layout을 fixed로 설정해놔야 한다.</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 14%">Value</th>
					<th>Description</th>
					<th>Play it</th>
				</tr>
				<tr>
					<td>auto</td>
					<td>Automatic table layout algorithm (this is
						default):
						<ul>
							<li>The column width is set by the widest
								unbreakable content in the cells</li>
							<li>Can be slow, since it needs to read through
								all the content in the table, before determining the
								final layout</li>
						</ul>
					</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_table-layout">Play
							it »</a></td>
				</tr>
				<tr>
					<td>fixed</td>
					<td>Fixed table layout algorithm:
						<ul>
							<li>The horizontal layout only depends on the
								table's width and the width of the columns, not the
								contents of the cells</li>
							<li>Allows a browser to lay out the table faster
								than the automatic table layout</li>
							<li>The browser can begin to display the table
								once the first row has been received</li>
						</ul>
					</td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_table-layout&amp;preval=fixed">Play
							it »</a></td>
				</tr>
				<tr>
					<td>initial</td>
					<td>Sets this property to its default value. <a
						href="https://www.w3schools.com/cssref/css_initial.asp">Read
							about <em>initial</em>
					</a></td>
					<td><a target="_blank" class="w3-btn btnplayit"
						href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_table-layout&amp;preval=initial">Play
							it »</a></td>
				</tr>
				<tr>
					<td>inherit</td>
					<td>Inherits this property from its parent
						element. <a
						href="https://www.w3schools.com/cssref/css_inherit.asp">Read
							about <em>inherit</em>
					</a>
					</td>
					<td></td>
				</tr>
			</tbody>
		</table>
		<h4 class="bookmark">테이블에 width 먹이기(table-layout)</h4>
		<pre class="code">
table {
		width: 100%;
	}</pre>
		<p>
			아무리 위와 같이 width를 정해진 창에 맞게 먹인다고 해도, 테이블 안의 td,th 가로값에
			텍스트가 알맞게 개행되지 않기 때문에 아무런 변화가 없는 경우가 많다.(이 문제는
			CJK(중국,일본,한국)가 아닌 언어권에서만 존재한다.) 이 문제는 <a
				href="#word-break"><span class="code">word-break</span></a>를
			통해서만 해결될 수 있다. 그러나 이 문제는 대략적으로 언어(대부분 영어)를 파괴시켜 의미를 병신같이
			전달될 수 있는 부작용을 낳는다. 따라서 그냥 width를 강제화 해버리는 table-layout을
			사용하기도 한다. 참고:(The table-layout property sets the table
			layout algorithm to be used for a table.)
		</p>
		<pre class="code">
table {
		width: 100%;
		table-layout: fixed;
	}
		</pre>
		<p>그러나 이를 할 경우 table에 대한 모든 width 비율이 강제화 되서 텍스트가 밖으러
			빠져 나온다는 단점이 있다. 이래나 저래나 부작용이 있는 건 똑같으니 overflow-x 먹인 div로
			table을 씌워서 정상적으로 표기하는 것도 하나의 방법이라고 할 수 있다.</p>
		<h2>테이블의 높이(height)와 너비(width)</h2>
		<p>
			테이블의 세로 높이는 'table'또는 'inline-table'의 'height'속성에 의해서
			지정되고, 너비는 'width'속성 값에 의해서 결정된다.<br>'vertical-align'속성
			- 테이블의 각각의 셀의 수직 맞춤을 결정. 각 셀의 내용을 'baseline', 'top',
			'middle', 'bottom'값을 사용해서 배치할 수 있다.
		</p>

		<p>
			이 부분은 <a href="/studyhtml5/ch04/practice/css_p4.html">css_p4</a>에
			실습으로 진행한다.
		</p>

		<p>수평 맞춤(horizaontal alignment) - text-align 속성을 사용한다.
			이것도 css_p4실습 진행</p>

		<h1 class="subject">테두리(border)지정</h1>
		<p>css에서는 테두리를 설정하는 데 2가지가 모델을 제공한다. 하나는 각각의 셀로 구성된
			"separated" 보더 모델이고 다른 하나는 셀들이 연속되어 한 덩어리로 합쳐진 듯한 모양을 갖는
			"collaspsing" 보더 모델이다.</p>
		<p>"seperated" 보더 모델의 테두리 타입은 다음과 같은 형태를 갖는다.</p>

		<h2>1.border-collapse 속성</h2>
		<p>이 속성은 테이블의 테두리 모델을 선택하는 것으로, 이 속성의 값이 'seperate'이면
			"separated" 모더 모델을, 'collapse'이면 "collapsing" 보더 모델이
			선택된다.</p>
		<p>속성이 몇가지가 더 있다. separated일 경우 cell border: insert
			pt;라고 하는 셀의 테두리 두께를 말하는 것이며, border-spacing은 셀 테두리를 감싸는
			박스 테두리 두께, border: outest pt 라는 마지막 큰 박스의 테두리를 말한다. p4 실습</p>
		<table id="separated">

			<tr>
				<td class="fontsize">html</td>
				<td class="fontsize">xml</td>
			</tr>
			<tr>
				<td class="fontsize">java</td>
				<td class="fontsize">jsp</td>
			</tr>
		</table>


		<h2>2.empty-cells 속성</h2>
		<p>이 속성은 빈 셀을 화면에 표시할지 여부를 결정하는 속성으로 "show", "hide"중
			하나의 값을 갖는다. 기본값은 show. p4 실습</p>

		<h2>3.collapsing 보더 모델</h2>
		<p>이 모델에서는 셀, 행, 행 그룹, 열, 열 그룹에 테두리르 지정하는 것이 가능하며, 모든
			셀의 모든 경계면들은 테두리 속성들에 의해 기술된다. 또한 이 테두리들에 다양한 너비(width),
			스타일(style), 색상(color) 등을 설정할 수 있다.</p>
		<p>collapsing 보더 모델에서 테이블, 행, 셀에 테두리를 설정하는 예제는 다음과 같다.
			p4 실습</p>


		<p>여러가지 테이블 내역</p>
		<div id="s">

			<ol>
				<li>none: 테두리 없음</li>
				<li>hidden: 테두리를 숨기는 것으로 non과 같이 효과를 준다.</li>
				<li>dotted: 점들이 이어져 있는 모양의 선</li>
				<li>dashed: 짧은 라인들이 이어져 있는 모양의 선</li>
				<li>solid: 실선</li>
				<li>double: 이중실선, 단 이중실선을 지정하려면 테두리의 두계가 3px 이상이
					되어야 제대로 적용된다.</li>
				<li>groove: 캔버스의 안쪽을 조각하듯이 그려지는 선</li>
				<li>ridge: "groove"의 반대 효과를 주는 것으로 선이 약간 입체적으로 앞으로
					튀어나와 보이는선(파이어폭스에서만 그 효과를 볼 수 있다)</li>
				<li>inset: "separated"보더 모델에서는 테두리에 입체감을 주기위해
					'ridge'를 하단에 지정한 것과 같으며, 'collapsing'보더 모델에서는 'ridge'와
					같다.(파폭에서만)</li>
				<li>outset: "separated" 보더 모델에서는 테두리에 입체감을 주기 위해
					'ridge'를 상단에 지정한 것과 같으며, "collapsing" 보더 모델에서는
					'groove'와 같다.(파폭에서만)</li>
			</ol>
			<p>실습 css_p5</p>
		</div>

		<h1 class="bookmark">박스 모델 지정</h1>
		<img
			alt="각각의 박스들은 내용(contents)영역과 선택적이니 영역인 패팅(padding),테두리(border) 마진(margin)영역으로 둘러 싸여있다."
			src="../images/margin.png">
		<p>각가의 박스들은 contnet영역과 선택적인 영역인 padding, border,
			margin영역으로 둘러 싸여있다.</p>
		<p>이들 4영역의 각각의 경계면을 "edge(엣지)"라고 부르며, 박스가 가지고 있는 각 4개의
			"edge"에 대한 설명은 다음과 같다.</p>
		<ul>
			<li>콘텐트 경계면(content edge또는 inner edge)<br>콘텐츠
				경계면은 박스의 width(가로 너비)와 height(세로 높이)에 의 해 만들어지게 되는 사각형으로
				둘러싸이는 부분이다.
			</li>
			<li>패딩 경계면(padding edge)<br>패딩의 내용과 테두리 사이의
				간격으로 테두리의 안쪽 여백이라 할 수 있다. 만일 패딩의 width(가로 너비)값이 0이면 콘텐츠
				경계면과 같다.
			</li>
			<li>보더 경계면(border edge)<br>패딩과 마진의 경계로 박스의 테두리로
				둘러싸인 부분이다. 만일 보더의 width(가로 너비) 값이 0이면 페딩 에지와 같다.
			</li>
			<li>마진 경계면(margin edge or outer edge)<br>인전합
				박스와의 간격으로 테두리의 바깥쪽 여백이라 할 수 있다. 만일 마진의 width(가로 너비)값이
				0이면 보더 에지와 같다.
			</li>

		</ul>
		<p>css_p6.htm에서 실습</p>

		<h3>중요!! 테이블 패딩(padding)</h3>
		<p>css에서 td에서 padding을 입력하면, 해당하는 테이블 박스의 padding이
			적용되어, 정렬을 시도하거나, 테두리에 붙지않게 할 수 있다.</p>
		<table>
			<tr>
				<td>td,th{<br>padding: 15px;<br>}
				</td>
			</tr>
		</table>



		<h2 class="bookmark">마진 관련 속성</h2>
		<h3>margin-top, margin-right,
			margin-bottom,margin-left 속성</h3>
		<p>
			margin: 2px 2px 2px 2px;<br> top right bottom left
			속성
		<p>
			margin: 1em; <br> top right bottom left가 모두 1em의 마진을
			가짐
		</p>
		<p>
			margin: 2em 4em; <br> top과 bottom의 마진 값 2em, right와
			left의 마진 값 4em
		</p>
		<p>
			margin: 3em 2em 4em; <br> top은 3em bottom은 4em
			right와 left는 2em
		</p>
		<h3>padding속성또한 margin 속성과 같다.</h3>
		<h3>border속성</h3>
		<p>
			border-width:thin; 테두리 두께가 모두 thin이다.<br>
			border-width: thin thick; 테두리 두께는 thin,right와 left의 테두리의
			두게는 thick<br> border-width: thin 10px thick; top의
			테두리 두께는 thin, right와 left의 테두리의 두께는 10px, bottom의 테두리 두께는
			thick<br> border-width: thin thick thick thin; top의
			테두리 두께는 thin,right의 테두리 두께는 thick, botoom의 테두리 두께는
			thick,left의 테두리 두께는 thin
		</p>

		<h3>border-color 속성</h3>
		<p>
			border-color: red; top,right,bottom,left 테두리의 색상이 모두
			red이다.<br> border-color: red yellow; top bottom은
			red, right left의 테두리 색상 yellow<br> border-color: red
			yellow green; top의 테두리 색상 red, right와 left의 테두리의 색상
			yellow, bottom의 테두리의 색상 green<br> border-color: red
			yellow green blue; top의 테두리 색상 red, right의 테두리 색상 yellow,
			bottom 테두리 색상 green left의 색상 blue
		</p>
		<h3>border-style속성</h3>
		<p>
			border: solid; top,right, bottom, left테두리의 스타일이 모두
			solid이다.<br> border-style: solid dotted; top과
			bottom의 테두리 스타일 solid, right left는 dotted<br>
			border-style: solid dotted dashed; top의 테두리 스타일 solid,
			right left는 dotted, bottom 테두리 스타일 dashed<br>
			border-style: solid dotted dashed double
		</p>
		<p>
		<h1 class="subject">가시성(visibility)와
			위치(positioning)지정</h1>
		<p>CSS에서는 태그를 화면에 표시할지의 여부와 표시한다면 어떻게 표시할지, 어떻게 배치할지
			등에 대해서도 고려해야한다.</p>
		<h2>1. display 속성</h2>
		<p>이 속성은 css에서 태그를 화면에 표시할지 여부와 표시한다면 어떻게 표시할지를 지정하는
			속성이다.</p>
		<table>
			<tr>
				<th>속성 값</th>
				<th>설명</th>
			</tr>
			<tr>
				<td>blcok</td>
				<td>다른 태그들과 가로로 나란히 배치되는 태그를 단독으로 배치되는 블록 박스 태그로
					표현한다. 이렇게 표현되면 가로 너비를 전부 차지해서 1행에 단독으로 배치된다.</td>
			</tr>
			<tr>
				<td>inline-block</td>
				<td>다른 태그들과 가로로 나란히 배치될 수 있는 블록 박스로 표현한다. 이렇게 표현되면
					가로 너비 자신의 콘텐츠 내용만큼만 차지해서 다른 태그를 나란히 배치할 수 있다.</td>
			</tr>
			<tr>
				<td>inline</td>
				<td>다른 태그들과 가로로 나란히 배치될 수 있는 인라인 태그로 표현한다. 이렇게 표현되면
					가로 너비 자신의 콘텐츠 내용만큼만 차지해서 다른 태그를 나란히 배치할 수 있다.</td>
			</tr>
			<tr>
				<td>list-item</td>
				<td>다른 태그들과 가로로 나란히 배치될 수 있는 인라인 태그로 표현한다. 이렇게 표현되면
					가로 너비 자신의 콘텐츠 내용만큼만 차지해서 다른 태그를 나란히 배치할 수 있다.</td>
			</tr>
			<tr>
				<td>none</td>
				<td>해당 태그를 표시하지 않으며, 이 태그의 하위 태그도 화면에 표시되지 않는다.</td>
			</tr>
			<tr>
				<td>run-in</td>
				<td>태그의 내용에 따라 blcok또는 inline-block로 표현한다.</td>
			</tr>

		</table>
		<p>스타일 시트의 display속성을 사용하는 예제- css_p7.html</p>

		<h2>2. visibility 속성</h2>
		<p>이 속성은 태그를 화면에 표시할지의 여부를 결정한다.</p>
		<table>
			<tr>
				<th>속성 값</th>
				<th>설명</th>
			</tr>
			<tr>
				<td>visible</td>
				<td>기본 값으로 해당 태그가 화면에 보이도록 지정한다.</td>
			</tr>
			<tr>
				<td>hidden</td>
				<td>해당 태그를 투명하게 해서 숨겨지게 지정한다. 화면에는 보이지 안으나, 자신의 영역은
					그대로 가지므로 태그의 배치에 영향을 미친다. 이 태그의 하위 태그의 visibility속성 값을
					'visible'로 지정하면 하위 태그는 화면에 표시된다.</td>
			</tr>
			<tr>
				<td>collapse</td>
				<td>태그를 겹쳐지도록 지정하는 것으로 테이블의 행과 열상에서(행,행 그룹, 열, 열
					그룹)만 가능하며, 다른 태그에 지정하면 'hidden'과 같은 역할을 한다.</td>
			</tr>


		</table>
		<p>스타일 시트의 display속성을 사용하는 예제- css_p8.html</p>

		<h2>3. position 속성</h2>
		<table>
			<tr>
				<th>속성 값</th>
				<th>설명</th>
			</tr>
			<tr>
				<td>static</td>
				<td>기본 값으로 태그를 일반적인 흐름에 따라 배치하며
					'top','right','bottom','left'속성들은 사용할 수 없다.</td>
			</tr>
			<tr>
				<td>relative</td>
				<td>태그들을 일반적인 흐름에 따라 배치한후, 그 위치를 기준으로 상대적으로 떨어진 위치에
					배치한다.</td>
			</tr>
			<tr>
				<td>absolute</td>
				<td>태그의 배치에서 절대적인 위치를 지정한다. 이 속성 값을 사용해서 절대적으로 배치되면
					다른 태그들과는 관계없이 독립적으로 배치된다.</td>
			</tr>
			<tr>
				<td>fixed</td>
				<td>태그의 위치를 웹 브라우저상의 고정적인 위치에 배치한다. 스크롤해도 이동하지 않으며,
					항상 고정된 위치에 표시된다.</td>
			</tr>


		</table>

		<p>실습은 css_c8에서 진행함</p>
		<a href="/studyhtml5/ch04/practice/css_p8.html"
			class="center">프렉티스8</a>

		<h2>4. z-index 속성</h2>
		<p>이 속성은 태그들이 겹쳐졌을 때, 어떤 태그가 앞에 표시되고 뒤에 표시되는지의 태그간의
			순서를 결정한다.</p>
		<p>이 속성은 기본적으로 자동으로 순서가 결정되지만 정수 값을 추가해서 순서를 바꿀 수 있다.
			즉, 속성 값을 정수로 기술하면 큰 값을 가진 태그가 앞에 표시되며 이 정수 값은 0부터 지정할 수
			있다.</p>

		<p>css에서img 태그를 z-index: 2; 으로 입력하여 정의함.</p>
		<h2>5. float속성과 clear 속성</h2>
		<p>float속성은 태그를 유동적(float)으로 배치하고 clear속성은 float속성을
			해체한다. 유동적으로 배치한다는 것은 화면의 가로 너비에 따라 배치되는 태그의 수가 달라져서, 결국은
			화면의 크기에 따라 태그들이 유동적으로 배치되어 보인다.</p>
		<p>float속서은 태그들을 왼쪽에서 오른쪽으로 배치하거나(left), 오른쪽에서 왼쪽으로
			배치(right)할 때 사용한다. 이때 left,right는 float방향 값이다.</p>
		<p>배치되는 태그는 한 행의 너비가 모두 차게 되면 자연스럽게 줄 바꿈 되어 다음 행에
			배치된다. 예를 들어 1,2,3,4번순으로 태그가 배치된다고 가정할때, float:left; 와
			float:right;를 사용할 때 태그가 배치되는 순서는 다음과 같다.</p>
		<table>
			<tr>
				<td>float:left</td>
				<td>float:right</td>
			</tr>
			<tr>
				<td>1-&gt;2-&gt;3-<br>--------<br>-&gt;4
				</td>
				<td>-3&lt;-2&lt;-1<br>--------<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&lt;-
				</td>
			</tr>
		</table>

		<p>css_p9에서 실습 진행한다.</p>
		<h2>Clear 속성</h2>
		<p>clear 속성은 float 속성을 해제할 때 사용한다. float 속성을 지정한 태그
			다음에 나오는 모든 태그들은 float속성을 지정하지 않아도 이 태그의 영향을 받게 된다. 따라서
			float속성의 영향을 받지 않는 태그는 clear:float 해제방향; 을 기술해서 표현해야 한다.
			float속성이 float:left;와 같이 설정된 경우 해제할 때는 같은 방향인 clear:left로
			해야한다. 만일 clear:right;로 기술하면 해제 되지 않는다. 방향을 기숧는 것이 어려운 경우,
			모든 방향을 해제하는 clear: both;를 사용하면 된다. clear: both; 는 모든
			float를 해제해 준다.</p>


		<h1 class="subject">미디어 쿼리</h1>
		<h2>1. 미디어 쿼리의 개요</h2>
		<p>
			미디어 쿼리는 미디어 및 화면의 크기에 따라 다른 스타일시트가 적용되도록 지원한다. 지금까지 작성한
			스타일시트들을 모두 미디어의 타입이나 화면의 크기를 고려하지 않고 작성한 것이다.<br>미디어의
			타입이나 화면의 크기를 고려한 스타일시트가 왜 필요한 것일까? 과거 웹 사이트를 개발할 때
			1024x768등으로 화면의 크기를 pc에서 1가지 크기로 맞춰서 개발했다. 이런 경우 큰 모니터를
			가진 경우 좌우 여백이 남고 작은 모니터의 경우 스크롤을 이동해서 보면되었다. 현재는 pc, 테블릿,
			스마트폰 등으로 정보화 기기들이 다양해짐에 따라 브라우저를 사용해서 웹 사이트를 보는 화면의 크기도
			다양해졌다. 3.5인치 스마트폰 화면으로 1024x768화면으로 보는것이 과연 적당할까? 스마트폰의
			화면은 4인치, 4.5인치, 5인치, 6인치 등으로 다양해졌고 태블릿도 7인치, 8인치, 9,7인치
			10.1인치 등으로 다양하다. 이런 다양한 화면에서는 1024x768웹 사이트를 보라는 것은 과연
			올바른 것일까? 아니다. 화면의 크기가 다르면 보이는 내용도 화면의 크기에 맞게 보여야 한다.
			PC화면에서 많은 내용을 갖는 웹 사이트를 봐도 괜찮으나 스마트폰에서는 부담스럽다.
		</p>
		<p>그래서 많은 기관과 기업등에서는 PC용 웹 사이트와 스마트폰 웹 사이트를 따로 제공하고
			있다. 스마트폰용 웹 사이트를 따로 만드는것이 가장 좋은 방법이나 비용이 많이 든다.</p>
		<p>웹 사이트를 일반 PC용 웹 사이트를 만들 듯이 1개만 만들면서 화면 크기에 따라 알맞게
			자동으로 배치되거나 글자크기나 콘텐츠의 크기도 자동으로 변환시킬 수 있는 방법이 미디어 쿼리를 사용하는
			것이다. 이렇게 미디어 쿼리를 사용해서 유동형 레이아웃을 구현한 것을 반응형 웹 사이트라고 한다.
			화면의 크기에 반응해서 자동으로 최적의 화면을 표시한다는 의미이다. 이렇게 다양한 화면에 크기에
			대응시켜 설계하는 것을 N스크린 대응이라고 한다.</p>
		<h2>2. 미디어 쿼리 사용방법</h2>
		<p>
			미디어 쿼리를 학습하기 전에 반드시 알고 있어야 하는 것은 첫 번째로 미디어 쿼리는 CSS로 구현되고,
			두 번째 CSS 구문들 간의 순서를 알고 있어야 효율적으로 기술할 수 있다는 점이다. <br>CSS
			구문들 간의 순서는 첫 번째로 가장 기본적인 스타일로, 태그들에 공통적으로 적용할 내용을 기술한다.
			두번째로 특정 태그에만 적용되는 스타일을 기술한다. 마지막으로 미디어 쿼리를 기술한다.
		</p>
		<table>
			<tr>

				<td>/*기본적인 스타일 - 공통 스타일*/<br> html, body, div,
					p{margin : 0;}<br> <br> <br> /*특정 태그에만
					적용되는 스타일*/<br>div ul li{display: inline;}//이건 즉
					div의 하위 태그 ul의 하위태그인 li태그에만 적용됨 <br> <br>/*3.
					미디어 쿼리 - 화면의 크기별로 각각 지정*/
				</td>

			</tr>

		</table>

		<p>미디어 쿼리는 작성위치에 따라 html페이지 &lt;link&gt;태그를 사용해서 기술하는
			방법과 CSS파일에 미디어 쿼리 구문을 추가하는 방법이 있다. 둘 중 하나의 방법을 사용하면 되는데,
			권장은 CSS파일에 미디어 쿼리 구문을 추가하는 방법이다.</p>


		<h3>1. 미디어 쿼리 작성 위치</h3>
		<p>미디어 쿼리는 작성위치에 따라 html페이지에 &lt;link&gt;태그를 사용해서 기술하는
			방법과 CSS파일에 미디어 쿼리 구문을 추가하는 방법이다. 둘 중 하나의 방법을 사용하면 되는데,
			권장은 CSS파일에 미디어 쿼리 구문을 추가하는 방법이다.</p>
		<p class="bold">
			html 페이지 &lt;link&gt;태그를 사용해서 기술하는 방법<br> 이 방법은 화면의
			크기에 따라서 각각 다른 CSS파일을 적용할 때 사용하는 것으로 html 페이지에서
			&lt;link&gt;태그에 media속성을 추가해서 작성한다.<br> 다음은 m.css는
			화면의 크기가 최대 768px(768px이하)에서만 적용되도록 한 예이다.
		</p>
		<table>
			<tr>
				<td>&lt;link rel = "stylesheet" href="m.css"
					media="screen and (max-width: 768px)"&gt;</td>
			</tr>
		</table>
		<p class="bold">
			css 파일에 미디어 쿼리 구문을 추가하는 방법: 권장 방법<br>이 방법은 여러 화면 크기에
			대응하는 미디어 쿼리가 각각 필요해서 여러 개의 미디어 쿼리를 만들 떄 사용한다. CSS파일에 미디어
			쿼리 구문을 추가해서 작성하는 방법으로 @media키워드를 사용해서 작성한다.
		</p>

		<table>
			<tr>

				<td>/*기본적인 스타일 - 공통 스타일*/<br> html, body, div,
					p{margin : 0;}<br> <br> <br> /*특정 태그에만
					적용되는 스타일*/<br>div ul li{display: inline;}//이건 즉
					div의 하위 태그 ul의 하위태그인 li태그에만 적용됨 <br> <br>/*3.
					미디어 쿼리 - 화면의 크기별로 각각 지정*/<br> @media="screen and
					(max-width: 550px) /*화면의 크기가 550px 이하에서만 적용*/<br>
					@media="screen and (max-width: 768px) /*화면의 크기가 768px
					이하에서만 적용*/<br> @media="screen and (max-width:
					960px) /*화면의 크기가 960px 이하에서만 적용*/<br>

				</td>

			</tr>

		</table>
		<h3>2. 미디어 쿼리 구문 작성 방법</h3>
		<p>미디어 쿼리에는 미디어 타입에 따라 all,print,screen,speech 등이 있으나
			반응형 웹을 구현할 때는 screen을 사용한다. 따라서 화면에 적용되는 미디어 쿼리 @media
			screen로 시작한다.</p>
		<table>
			<tr>

				<td>@media screen 으로 시작</td>

			</tr>

		</table>

		<p>여기에 조건을 추가해서 사용한다. 조건을 추가할 때는 and를 사용한다. 화면의 크기와 같이
			화면과 크기라는 두 가지 조건을 만족해야 하기 때문에 and를 사용해서 조건을 중첩한다. and 다음의
			추가라는 조건 ()로 감싸서 표시한다. 조건은 여러 개 추가할 수 있다.</p>

		<table>
			<tr>

				<td>@media screen (조건 추가)....</td>

			</tr>

		</table>

		<p>추가할 조건에는 화면의 너비, 높이, 색, 격자 등의 다양한 형태에 적용하는 것이 있으나
			화면의 크기를 적용할 때는 max-width, min-width를 쓴다. 스마트 기기에서 화면을 구분할
			때 중요한 것은 너비이다. 이때 width: 769px;와 같이 쓰면 딱 768px에서만 적용된다.
			700px; 0~768px까지 적용, min-width:768px; 768px부터 적용을 사용한다.
			또한 여러 화면 크기에 대한 미디어 쿼리를 작성할 때는 작은 화면에서 큰 화면 순으로 한다.</p>

		<table>
			<tr>

				<td>/*화면의 크기가 320px~550px*/<br>@media screen
					and (min-width: 320px) and (max-width: 550px){}<br>
					<br> <br>/*화면의 크기가 768px 이하*/<br>@media
					screen and (max-width: 768px){}<br> <br>/*화면의
					크기가 1000px 이상*/<br>@media screen and (min-width:
					1000px){}
				</td>

			</tr>
		</table>
		<h3>중요!!</h3>
		<p class="bold">css에서 쓸 때 이클립스에서 자동완성이 되지 않는다. 따라서
			해당하는 내용을 코딩해야 할 것이다. 일반적으로 해당 내용을 코딩해야 한다.</p>
		<table>
			<tr>
				<td class="bold">@media screen and (min-width:
					뭐시기~~px;){}<br>여기서 중요한 것은 and 이후로 띄어쓰기 하나 한 뒤에 괄호를
					열고 해당 내용을 써야 한다는 것!!!<br> 또 하나 더 중요한 점은 css는 순서대로
					명령어가 적용되기에 "미디어 가로 720이상(어쩌구 저쩌구) 전체적용{어쩌구 저쩌구}"로
					작성한다면, 무조건 전체로만 적용된다.<br> "전체적용{어쩌구 저쩌구}, 가로
					720이상{어쩌구 저쩌구}"으로 설정해야지만 해당하는 미디어 쿼리에 걸치게 된다.
				</td>
			</tr>
			<tr>
				<td>@media screen/*전체*/ { body { background-color:
					lime; } body p { color: black; } }<br> @media
					screen and (min-width: 350px) { /*320px 이상*/ body {
					background-color: black; } body p { color: white; } } <br>
					@media screen and (min-width: 480px) { /*480px 이상*/
					body { background-color: blue; } body p { color:
					orange; } }<br> @media screen and (min-width:
					720px) { /*720px 이상*/ body { background-color: yellow;
					} body p { color: blue; } }<br> @media screen and
					(min-width: 1000px) { /*1000px 이상*/ body {
					background-color: gray; } body p { color: yellow; } }
				</td>
			</tr>
			<tr>
				<td>@media screen/*전체적용*/) { section { text-align:
					center; } article img { width: 100%; } article
					img:hover { filter: brightness(150%); } article {
					display: inline-block; text-align: center; max-width:
					20%; } p { display: block; } }<br> @media screen
					and (max-width: 720px)/*720px이하*/ { section {
					text-align: center; } article img { width: 100%; }
					article img:hover { filter: brightness(150%); } article
					{ display: inline-block; text-align: center; max-width:
					40%; } p { display: block; } }
				</td>
			</tr>
		</table>

		<h1 class="subject">CSS3의 개요</h1>
		<p>CSS3에 대해 살펴보고 디자인 프로그램을 대체하는 추가기능을 학습한다. CSS3는 스타일
			시트의 최신 표준으로, 초기의 버전들과도 완벽하게 호환된다. 즉, 현재의 CSS는 "기존의 CSS+
			CSS3(추가된 신기능)"인 것이다. 또한 CSS3의 업데이트를 쉽게할 수 있도록 실렉터, 박스모델,
			배경과 테두리, 이미지 관련, 테두리 효과, 2D/3D 트랜스폼, 에니메이션, 폰트, 다단 등의 모듈로
			분리되어 추가 그래픽 기능들이 개발되었다.</p>
		<p>W3C에서 아직 CSS3 모듈 표준 규격을 승인하지 않아서 브라우저 벤더(제공회사)들이
			독자적으로 자신들의 브라우저에 맞게 CSS3기능을 구현했다. 이것은 웹 브라우저에서 CSS3기능을
			사용할 수 있다는 좋은점이 있으나, 브라우저에 상관없이 기능을 실행하기가 번거롭게 되었다. 즉, 1개의
			CSS3 기능을 사용하려면, 벤더 프리픽스(vendor prefix)가 포함된 브라우저별 코드를 모두
			나열해야 한다. 사용자가 어떤 브라우저로 사용할지 모르기 때문에 1개의 CSS3구문을 위해서 주요
			브라우저에서 실행될 수 있는 벤더 프리픽스를 모두 나열해야 한다. 사용자가 어떤 브라우저로 사용할지
			모르기 때문에 1개의 CSS3구문을 위해서 주요 브라우저에서 실행될 수 있는 벤더 프리픽스를 모두
			나열해야 한다. 예를 들어 라운드 사각형을 그리는 표준 CSS3구문은 border-radius:
			5px;이지만, 아직 표준 규격이 승인 되지 않아서 각 브라우저별로 라운드 사각형을 사용할 수 있는
			코드를 나열해야 한다.</p>
		<table>
			<tr>
				<td>#area{<br>-ms-border-radius:5px; //인터넷
					익스프롤러 IE<br> -0-border-radius: 5px; //오페라(Opera)<br>
					-moz-border-radius: 5px; //파이어폭스<br>
					-webkit-border-radius: 5px; //크롬, 사파리<br>
					border-radius: 5px; //W3C - 표준 규약
				</td>
			</tr>
		</table>

		<p>이렇게 나열된 코드들은 사용한 브라우저에 해당하는 1개의 구문만 실행된다. 크롬이나 사파리
			브라우저의 경우 -webkit-border-radius: 5px; 만 실행된다.</p>
		<table>
			<tr>
				<th>벤더 프리픽스</th>
				<th>해당 웹 브라우저</th>
			</tr>
			<tr>
				<td>-ms-</td>
				<td>인터넷 익스플로러</td>
			</tr>
			<tr>
				<td>-o-</td>
				<td>오페라</td>
			</tr>
			<tr>
				<td>-moz-</td>
				<td>파이어폭스</td>
			</tr>
			<tr>
				<td>webkit-</td>
				<td>크롬, 사파리</td>
			</tr>
		</table>
		<p>두 번째는 표준 규약은 브라우저별로 나열한 코드의 마지막에 작성해 주어야 한다는 것이다.
			이것은 자우에 표준 규약이 생기면, 소스코드를 고칠필요없이 마지막에 기술한 표준규약으로 자동 대체되기
			때문이다.</p>
		<p>모든 벤더 프리픽스를 나열해서 프로그래밍 하는 것은 현실적으로 쉽지 않기 때문에 가장 많이
			사용하는 브라우저 위주로 쓰는 것이 좋다.</p>
		<h1 class="subject">CSS The object-fit
			Property(img-채우기)</h1>
		<p>
			The CSS <span class="code">object-fit</span> property is
			used to specify how an &lt;img&gt; or &lt;video&gt;
			should be resized to fit its container.
		</p>
		<h2>Browser Support</h2>
		<p>The numbers in the table specify the first browser
			version that fully supports the property.</p>
		<table>
			<tbody>
				<tr>
					<th style="height: 80px;">Property</th>
					<th style="width: 15%;" class="bsChrome" title="Chrome"></th>
					<th style="width: 15%;" class="bsEdge"
						title="Internet Explorer / Edge"></th>
					<th style="width: 15%;" class="bsFirefox"
						title="Firefox"></th>
					<th style="width: 15%;" class="bsSafari" title="Safari"></th>
					<th style="width: 15%;" class="bsOpera" title="Opera"></th>
				</tr>
				<tr>
					<td style="text-align: left;">object-fit</td>
					<td>31.0</td>
					<td>16.0</td>
					<td>36.0</td>
					<td>7.1</td>
					<td>19.0</td>
				</tr>
			</tbody>
		</table>
		<h2>The CSS object-fit Property</h2>
		<p>
			The CSS <span class="code">object-fit</span> property is
			used to specify how an &lt;img&gt; or &lt;video&gt;
			should be resized to fit its container. <br> <br>
			This property tells the content to fill the container in
			a variety of ways; such as "preserve that aspect ratio"
			or "stretch up and take up as much space as possible". <br>
			<br> Look at the following image from Paris, which
			is 400x300 pixels:
		</p>
		<img alt="풍경화" src="/studyhtml5/images/풍경화.jpg"
			style="width: 400px; height: 300px;">
		<p>However, if we style the image above to be 200x400
			pixels, it will look like this:</p>
		<img alt="풍경화" src="/studyhtml5/images/풍경화.jpg"
			style="width: 200px; height: 400px;">
		<p>We see that the image is being squeezed to fit the
			container of 200x400 pixels, and its original aspect
			ratio is destroyed.</p>
		<p>
			If we use <span class="code">object-fit: cover;</span> it
			will cut off the sides of the image, preserving the
			aspect ratio, and also filling in the space, like this:
		</p>
		<img alt="풍경화" src="/studyhtml5/images/풍경화.jpg"
			style="object-fit: cover; width: 200px; height: 400px;">
		<h2>Another Example</h2>
		<p>
			Here we have two images and we want them to fill the
			width of 50% of the browser window and 100% of the
			height. <br> <br> In the following example we
			do NOT use <span class="code">object-fit</span>, so when
			we resize the browser window, the aspect ratio of the
			images will be destroyed. <br> <br> In the next
			example, we use object-fit: cover;, so when we resize the
			browser window, the aspect ratio of the images is
			preserved.
		</p>
		<a href="/studyhtml5/ch04/practice/css_p63.html"
			class="center">프렉티스 63</a>
		<h2>All Values of The CSS object-fit Property</h2>
		<p>
			The <span class="code">object-fit</span> property can
			have the following values:
		</p>
		<ul>
			<li><span class="code">fill</span> - This is
				default. The replaced content is sized to fill the
				element's content box. If necessary, the object will be
				stretched or squished to fit</li>
			<li><span class="code">contain</span> - The replaced
				content is scaled to maintain its aspect ratio while
				fitting within the element's content box</li>
			<li><span class="code">cover</span> - The replaced
				content is sized to maintain its aspect ratio while
				filling the element's entire content box. The object
				will be clipped to fit</li>
			<li><span class="code">none</span> - The replaced
				content is not resized</li>
			<li><span class="code">scale-down</span> - The
				content is sized as if none or contain were specified
				(would result in a smaller concrete object size)</li>
		</ul>
		<p>
			The following example demonstrates all the possible
			values of the <span class="code">object-fit</span>
			property:
		</p>
		<pre class="code">
.fill {object-fit: fill;}
.contain {object-fit: contain;}
.cover {object-fit: cover;}
.scale-down {object-fit: scale-down;}
.none {object-fit: none;}</pre>
		<a href="/studyhtml5/ch04/practice/css_p64.html"
			class="center">프렉티스 64</a>



		<h1 class="subject">CSS3의 추가기능:테두리와 배경</h1>
		<p>테두리 기능에는 영역을 갖는 특정 태그(div )와 같은 태그에 둥근 모서리를 지정하거나
			그림자 효과 등을 주어 입체감을 줄 수 있다. 또한 이미지 파일을 테두리로 사용할 수 도 있다. 태그가
			영역을 갖도록 하려면 스타일 시트에서 width, height에 값을 지정한다.</p>

		<h2>1. border-radius 속성</h2>
		<p>div와 같은 영역을 갖는 태그에 둥근 모서리(라운드 사각형)을 지정한다.
			border-radius 속성은 대부분의 주요 브라우저에서 지원하므로 벤더 프리픽스별 지정은 생략해도
			된다.</p>

		<table>
			<tr>
				<td>border-radius: 속성 값;</td>
			</tr>
		</table>

		<ul>
			<li>속성 값: px또는 %를 사용해서 지정할 수 있으며, 기본 값은 0이다. 값이 커질수록
				점점 둥글어져서 반원에 가까워진다. 10px보다 20px가 더 반원에 가깝다.</li>
		</ul>

		<table>
			<tr>
				<td>div{<br> width : 150px;<br> height :
					30px;<br> padding: 10px 20px;<br> border: 5px
					double #어쩌구저쩌구<br> border-radius: 10px;<br> }
				</td>
			</tr>
		</table>
		<h2>2. box-shadow 속성</h2>
		<p>div와 같은 영역을 갖는 태그에 그림자 효과를 지정한다. 지정하는 방법은 다음과 같다.
			벤더 프리픽스별 지정은 생략해도 된다.</p>
		<table>
			<tr>
				<td>box-shadow: h-shadow v-shadow blur spread
					color;</td>
			</tr>
		</table>

		<ul>
			<li>h-shadow: 가로 그림자 길이로, 양수 또는 음수 값을 줄 수 있다. 양수로
				지정하면 오른쪽으로 그림자가 생기고 음수이면 왼쪽으로 생긴다.</li>
			<li>v-shawdow: 세로 그림자 길이로, 양수 또는 음수값을 줄 수 있다. 양수로
				지정하면 아래쪽으로 그림자가 생기고 음수이면 위쪽으로 생긴다.</li>
			<li>blur: 그림자의 퍼짐 정도로, 숫자가 클수록 그림자가 더 퍼져 보인다.</li>
			<li>spread: 그림자의 크기로, 숫자가 커질수록 그림자가 커진다.</li>
			<li>color: 그림자의 색</li>
		</ul>

		<table class="shadow">
			<tr>
				<td>div {<br>width: 200px;<br>height:
					100px;<br>background-color: blue;<br>box-shadow:
					10px 10px 5px #어쩌구 저쩌구<br>}
				</td>
			</tr>
		</table>

		<h2>3. CSS3의 색상</h2>
		<p>CSS3에서는 기존의 색상 및 투명도가 추가된 RGBA와 HSLA색상을 사용할 수 있다.
			RGB는 Red(빨강), Green(초록), Blue(파랑)의 3가지 색을 각각
			00~FF(0~255)까지 256가지씩 제공해서 색상을 표현한다. RGB방식으로 색을 지정할 떄는 #을
			붙여서 쓰며, 흰색의 경우 #FFFFFF로 표현하거나 rgb(255,255,255)함수를 사용한다.
			HSL는 Hue(색상),Saturtion(채도), Lightness(밝기)를 hsl(색상, 채도,
			밝기)함수에 사용해서 색을 표시한다. HSL색상은 360도로 구성되며 노랑은 60도 초록은 120도
			파랑은 240도 빨강은 360도 이다. HSL의 채도와 밝기는 %로 표시되며 색상을 화려하고 강렬하게
			표현하려면 채도 값을 높이고 밝니는 검정(0%)과 흰색(100%) 사이의 값을 지정한다.
			hsl(360,100%,50%)은 빨강색을 표현한다.</p>
		<p>RGBA와 HSLA는 기존의 RGB와 HSL에 투명도를 추가한 것이다. Alpha(투명도)는
			0(완전 투명)과 1(완전 불투명) 사이의 값을 지정한다. rgba(255,0,0,0.5)과
			hsla(360,100%,50%,0.5)는 투명도 50%를 갖는 빨강색을 표현한다.</p>
		<p>opcacity 속성을 사용하면 기존의 색에 투명도만을 추가해서 지정할 수 있따.
			opacity속성도 0(완전 투명)과 1(완전 불투명)사이의 값을 지정한다.</p>
		<p>css_p12.html에서 실습한다.</p>
		<h2>4. border-image 속성</h2>
		<p>CSS3에서는 테두리에 이미지를 사용할 수 있는 border-image속성을 제공한다.
			지정하는 방법은 다음과 같다. 벤더 프리픽스는 아직 생략하지 않는다.</p>
		<p>css_p13.html에서 실습을 한다.</p>
		<table>
			<tr>
				<td>box-image : source slice width outset repeat |
					initial | inherit ;</td>
			</tr>
		</table>
		<ul>
			<li>source: 테두디로 사용할 이미지를 경로를 포함해서 예를 들어
				url(../images/b1.png)와 같이 기술한다.</li>
			<li>slice : 테두리 이밎는 4개의 코너와 4개의 엣지(면), 중앙의 총 9개의
				부분으로 자를 수 있다. 자르는 값은 숫자 또는 %와 fill을 줄 수 있으며, 값으로 30을 주면
				이미지가 잘리지 않은 형태가 된다. "중앙"은 완전 투명으로 처리된다.</li>
			<li>width : 테두리 이미지의 두께를 px또는 %단위로 지정한다.</li>
			<li>outset : 박스 영역을 넘어서는 이미지 테두리를 지정할 때 사용하며 px 또는
				%단위로 지정한다.</li>
			<li>repeat : 박스의 영역만큼 이미지를 늘리거나 반복하는 것을 지정하는 것으로
				repeat(반복), round(균형 있게 반복), stretch(늘리기) 중 1개를 지정한다.</li>
		</ul>

		<table>
			<tr>
				<td>border: 10px solid transparent;//테두리 두께 10px,
					실선 투명<br>border-image: url(../images/b1.png) 30
					round;//패턴이 잘리지 않고 균형 있게 반복
				</td>
			</tr>
		</table>

		<table>
			<tr>
				<td>border: 10px solid transparent;//테두리 두께 10px,
					실선 투명<br>border-image: url(../images/b1.png) 30
					repeat;//패턴이 잘리지 않고 반복
				</td>
			</tr>
		</table>

		<table>
			<tr>
				<td>border: 10px solid transparent;//테두리 두께 10px,
					실선 투명<br>border-image: url(../images/b1.png) 30
					stretch;//패턴 늘리기
				</td>
			</tr>
		</table>


		<table>
			<tr>
				<td>border: 10px solid transparent;//테두리 두께 10px,
					실선 투명<br>border-image: url(../images/b1.png) 10
					round;//이미지를 전체의 10정도만 표시
				</td>
			</tr>
		</table>

		<table>
			<tr>
				<td>border: 10px solid transparent;//테두리 두께 10px,
					실선 투명<br>border-image: url(../images/b1.png) 50%
					round;//이미지를 전체의 50%정도만 표시
				</td>
			</tr>
		</table>

		<h1 class="subject">CSS3의 추가기능: 배경- 배경 이미지 중첩 ,
			background-size</h1>
		<h2>배경 이미지 중첩</h2>
		<p>CSS에서는 여러 배경 이미지를 중첩해서 표현할 수 있다. 여러 배경 이미지를 중첩할 때는
			각 속성에 여러 이미지의 값을 나열한다. 이미지를 2개 중첩할 때는 background-image:
			url(어쩌구),url(../images/bluepaper.png);와 같이 나열한다. 이미지의 위치나
			반복 여부도 추가한 이미지 순서대로 속성 값을 주어서 나열한다.</p>
		<p>css_p14.html에서 실습을 한다.</p>

		<h2 id="background-size">background-size 속성</h2>
		<p>CSS3에서는 background-size 속성을 사용해서 배경 이미지의 크기를 조절할 수
			있다.</p>
		<table>
			<tr>
				<td>background-size: 이미지 사이즈;</td>
			</tr>
		</table>

		<ul>
			<li>이미지 사이즈: 이미지 사이즈에는 가로/세로의 px단위 값, contain,
				cover를 지정할 수 있다. contain은 이미지의 가로/세로를 내용 영역에 맞는 크기로
				지정하고, cover는 배경 이미지에 의해 내용 영역이 완전히 덮인다. cover는 배경 이미지가
				내용 영역을 완전히 덮지만 contain은 덮지 않을 수 있다.</li>
		</ul>
		<p>background-size 속성은 다음과 같이 쓸 수 있다.</p>

		<table>
			<tr>
				<td>background-size: 150px 100px;//가로 세로<br>
					background-size: contain; //contain<br>
					background-size: cover; //cover
				</td>
			</tr>
		</table>

		<h2>텍스트 효과: Text-Shadow</h2>
		<p>text-shadow 속성은 글자에 글미자 등의 효과를 주어 이미지를 사용하던 기느응ㄹ
			대체한다. 이 속성을 사용하면 이미지를 로딩하는 것보다 빠른 속도로 웹 피이지를 서비스할 수 있다.
			text-shadow는 box-shadow와 비슷한 효과로, 글자에 그림자 효과를 준다. 벤더
			프리픽스별 지정은 생략해도 된다.</p>

		<table>
			<tr>
				<td>text-shadow: h-shadow v-shadow blur color;</td>
			</tr>
		</table>

		<ul>
			<li>h-shadow: 가로 그림자 길이로 양수 또는 음수 값을 줄 수 있다. 양수로
				지정하면 오른쪽으로 그림자가 생기고 음수이면 왼쪽으로 생긴다.</li>
			<li>v-shadow: 세로 그림자 길이로 양수 또는 음수 값을 줄 수 있다. 양수로
				지정하면 아래쪽으로 그림자가 생기고 음수이면 위쪽으로 생긴다.</li>
			<li>blur: 그림자의 퍼짐 정도로, 숫자가 클수록 그림자가 더 퍼져 보인다.</li>
			<li>color: 그림자의 색</li>
		</ul>
		<table>
			<tr>
				<td>p{<br> text-shadow: 5px 5px 5px #888888;<br>}
				</td>
			</tr>
		</table>

		<h2>그래디언트: linear-gradient, radial-gradient</h2>
		<p>CSS3에서는 그러데이션 효과(둘 이상의 색상간의 변화)를 지원한다. 이 속성을 사용하면
			이미지 사용을 줄일 수 있어서 웹 페이지를 빠르게 서비스할 수 있다. CSS3의 그러데이션은 선형과
			원형, 두개의 타입으로 제공된다. 벤더 프리픽스는 아직 생략하지 않는다.</p>
		<table>
			<tr>
				<td>linear-gradient(direction,color1,color2);
					<ul>
						<li>direction: 그러데이션 방향으로 생략 시 위에서 아래로 변환, 왼쪽에서
							오른쪽, 대각선 방향으로 변환할 수 있다.</li>
						<li>color1: 사각형</li>
						<li>color2: 끝색</li>
					</ul>
				</td>
			</tr>
		</table>

		<p>아래 예는 id속성 값이 g1인 태그의 배경색으로 그러데이션을 지정하는 것으로, 위에서
			아래로 초록색에서 노란색으로 변경된다. IE, 크롬은 표준이 적용된다.</p>
		<p>밑에는 위 아래로 선형 그레디언트 이다.</p>
		<table>
			<tr>
				<td>#g1{<br> width: 250px;<br> height:
					150px;<br> background:
					-webkit-linear-gradient(green,yellow);<br>
					background: -o-linear-gradient(green,yellow);<br>
					background: -moz-linear-gradient(green, yellow);<br>
					background: linear-gradient(green,yellow);//표준<br>}
				</td>
			</tr>
		</table>

		<p>왼쪽에서 오른쪽으로 선형 그레디언트</p>
		<table>
			<tr>
				<td>#g1{<br> width: 250px;<br> height:
					150px;<br> background:
					-webkit-linear-gradient(left,green,yellow);<br>
					background: -o-linear-gradient(right,green,yellow);<br>
					background: -moz-linear-gradient(right,green, yellow);<br>
					background: linear-gradient(to right,green,yellow);<br>}
				</td>
			</tr>
		</table>
		<p>원형 그러데이션</p>
		<table>
			<tr>
				<td>radial-gradient(center,color1,color2);
					<ul>
						<li>center: 중심 색을 지정할 수 있고, 타원모양 또는 원형모양을 선택하고 중심
							색을 지정할 수도 있다. 기본적으로 타원모양으로 그러데이션이 설정됨.</li>
						<li>color1: 시작색</li>
						<li>color2: 끝색</li>
					</ul>
				</td>
			</tr>
		</table>
		<p>아래의 예는 id 속성 값이 g3인 태그의 배경색으로 그러데이션을 지정하는 것으로, 중심에서
			밖으로 타원 모양으로 중심 색 파랑에서 초록색으로 거쳐 노란색으로 변경된다. IE,크롬은표준이
			적용된다.</p>
		<table>
			<tr>
				<td>#g3{<br> width: 250px;<br> height:
					150px;<br> background:
					-webkit-radial-gradient(red,green,yellow);<br>
					background: -o-radial-gradient(red,green,yellow);<br>
					background: -moz-radial-gradient(red,green, yellow);<br>
					background: radial-gradient(red,green,yellow);//표준<br>}
				</td>
			</tr>
		</table>

		<p>아래의 예느 id속성값이 g4인 태그의 배경색으로 그러데이션을 지정하는 것으로, 중심에서
			밖으로 원형 모양으로 중심 색 파랑에서 초록색으로 거쳐 노란색으로 변경된다. IE, 크롬은 표준이
			적용된다.</p>


		<table>
			<tr>
				<td>#g3{<br> width: 250px;<br> height:
					150px;<br> background:
					-webkit-radial-gradient(circle,red,green,yellow);<br>
					background:
					-o-radial-gradient(circle,red,green,yellow);<br>
					background: -moz-radial-gradient(circle,red,green,
					yellow);<br> background:
					radial-gradient(circle,red,green,yellow);//표준<br>}
				</td>
			</tr>
		</table>

		<p>실습 15를 만들어서 해보자.</p>

		<h1 class="subject">CSS3의 추가기능:트랜스폼 - Transform</h1>
		<p>transform 속성은 개체나 이미지 등의 이동, 회전, 확대/축소, 왜곡 등의 효과를
			제공한다. 이들 효과는 translate(), reotate(), scale(), skew() 메소드를
			사용해서 한다. 벤더 프리픽스는 아직 생략하지 않는다.</p>

		<h2>1. translate(): 이동</h2>

		<p>개체(태그)를 지정한 픽셀만큼 가로만, 세로만, 또는 가로세로 모두 이동시킨다.</p>

		<table>
			<tr>
				<td>translateX(x): 가로만 이동시킬 때 사용. x는 가로로 이동할 픽셀 수<br>
					translateY(y): 세로만 이동시킬 때 사용. y는 세로로 이동할 픽셀 수 <br>
					translate(x,y): 가로세로 모두 이동시킬 때 사용. x,y는 이동할 픽셀 수
				</td>
			</tr>
		</table>

		<p>아래의 예는 id 속성 값이 t1인 &gt;div&lt;태그를
			translate(x,y)메소드를 사용해서 지정한 픽셀 수 만큼 이동시킨다. IE,크롬은 표준이
			적용된다.</p>

		<table>
			<tr>
				<td>div{<br> width:100px;<br> height:
					60px;<br> background-color: gray;<br> border:
					1px solid black;<br> }<br> <br> div#t1{<br>
					-webkit-transform: translate(10px,10px);<br>
					transform: translate(10px,10px);
				</td>
			</tr>
		</table>

		<h2>2. rotate(): 회전</h2>
		<p>개체(태그)를 지정한 각도만큼 회전시킨다.</p>
		<table>
			<tr>
				<td>rotate(deg): 주어진 deg만큼 태그를 회전 시킨다. deg는 각도.</td>
			</tr>
		</table>

		<p>아래의 예는 id속성 값이 t2인 &gt;div&lt;태그를 rotate(deg) 메소드를
			사용해서 지정한 각도로 회전시킨다. IE, 크롬은 표준이 적용된다.</p>

		<table>
			<tr>
				<td>div#t2{//45도 회전<br>-webkit-transform:
					rotate(45deg);<br> transform: rotate(45deg);
				</td>
			</tr>
		</table>

		<h2>3. scale(): 학대/축소</h2>
		<p>주어진 값에 따라 개체(태그)를 지정한 크기만큼 확대하고 축소한다.</p>
		<table>
			<tr>
				<td>scale(x,y): 주어진 x,y만큼 개체를 확대/축소한다. x,y값이 1이상이면
					확대, 0~1사이이면 축소된다.</td>
			</tr>
		</table>

		<p>아래의 예는 id속성 값이 t3인 &gt;div&lt;태그를 scale(x,y)메소드를
			사용해서 지정한 크기 만큼 확대 축소한다. IE, 크롬은 표준이 적용된다.</p>
		<table>
			<tr>
				<td>div#t3{//가로 1배, 세로 0.5배 축소<br>-webkit-transform:
					scale(1,0.5);<br>transform: scale(1,0.5);<br>}
				</td>
			</tr>
		</table>

		<h2>4. skew(): 왜곡</h2>
		<p>지정한 각도 값을 가지고 개체를 왜곡한다.</p>
		<table>
			<tr>
				<td>skew(xDeg,yDeg): 주어진 xDeg, yDeg 만큼 개체를 왜곡한다.
					xDeg,yDeg값은 각도.</td>
			</tr>
		</table>
		<p>아래의 예는 id 속성 값이 t4인 &gt;div&lt;태그를
			skew(xDeg,yDeg)메소드를 사용해서 왜곡한다. IE, 크롬은 표준이 적용된다.</p>
		<table>
			<tr>
				<td>div#t4{//x축 20도, y축 10도 왜곡<br>-webkit-transform:
					skew(20deg,10deg);<br>transform:
					skew(20deg,10deg);<br>}
				</td>
			</tr>
		</table>
		<h2>CSS Transform Properties</h2>
		<p>The following table lists all the 2D transform
			properties:</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 23%">Property</th>
					<th>Description</th>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transform.asp">transform</a></td>
					<td>Applies a 2D or 3D transformation to an
						element</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transform-origin.asp">transform-origin</a></td>
					<td>Allows you to change the position on
						transformed elements</td>
				</tr>
			</tbody>
		</table>
		<h2>2D Transform Methods</h2>
		<table>
			<tbody>
				<tr>
					<th style="width: 23%">Function</th>
					<th>Description</th>
				</tr>
				<tr>
					<td>matrix(<i>n,n,n,n,n,n</i>)
					</td>
					<td>Defines a 2D transformation, using a matrix of
						six values</td>
				</tr>
				<tr>
					<td>translate(<i>x,y</i>)
					</td>
					<td>Defines a 2D translation, moving the element
						along the X- and the Y-axis</td>
				</tr>
				<tr>
					<td>translateX(<i>n</i>)
					</td>
					<td>Defines a 2D translation, moving the element
						along the X-axis</td>
				</tr>
				<tr>
					<td>translateY(<i>n</i>)
					</td>
					<td>Defines a 2D translation, moving the element
						along the Y-axis</td>
				</tr>
				<tr>
					<td>scale(<i>x,y</i>)
					</td>
					<td>Defines a 2D scale transformation, changing
						the elements width and height</td>
				</tr>
				<tr>
					<td>scaleX(<i>n</i>)
					</td>
					<td>Defines a 2D scale transformation, changing
						the element's width</td>
				</tr>
				<tr>
					<td>scaleY(<i>n</i>)
					</td>
					<td>Defines a 2D scale transformation, changing
						the element's height</td>
				</tr>
				<tr>
					<td>rotate(<i>angle</i>)
					</td>
					<td>Defines a 2D rotation, the angle is specified
						in the parameter</td>
				</tr>
				<tr>
					<td>skew(<i>x-angle,y-angle</i>)
					</td>
					<td>Defines a 2D skew transformation along the X-
						and the Y-axis</td>
				</tr>
				<tr>
					<td>skewX(<i>angle</i>)
					</td>
					<td>Defines a 2D skew transformation along the
						X-axis</td>
				</tr>
				<tr>
					<td>skewY(<i>angle</i>)
					</td>
					<td>Defines a 2D skew transformation along the
						Y-axis</td>
				</tr>
			</tbody>
		</table>
		<h2>CSS 3D Transforms - CSS Transform Properties</h2>
		<p>The following table lists all the 3D transform
			properties:</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 22%">Property</th>
					<th>Description</th>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transform.asp">transform</a></td>
					<td>Applies a 2D or 3D transformation to an
						element</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transform-origin.asp">transform-origin</a></td>
					<td>Allows you to change the position on
						transformed elements</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transform-style.asp">transform-style</a></td>
					<td>Specifies how nested elements are rendered in
						3D space</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_perspective.asp">perspective</a></td>
					<td>Specifies the perspective on how 3D elements
						are viewed</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_perspective-origin.asp">perspective-origin</a></td>
					<td>Specifies the bottom position of 3D elements</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_backface-visibility.asp">backface-visibility</a></td>
					<td>Defines whether or not an element should be
						visible when not facing the screen</td>
				</tr>
			</tbody>
		</table>
		<h2>3D Transform Methods</h2>
		<table class="w3-table-all notranslate">
			<tbody>
				<tr>
					<th style="width: 22%">Function</th>
					<th>Description</th>
				</tr>
				<tr>
					<td>matrix3d<br> (<i>n,n,n,n,n,n,n,n,n,n,n,n,n,n,n,n</i>)
					</td>
					<td>Defines a 3D transformation, using a 4x4
						matrix of 16 values</td>
				</tr>
				<tr>
					<td>translate3d(<i>x,y,z</i>)
					</td>
					<td>Defines a 3D translation</td>
				</tr>
				<tr>
					<td>translateX(<i>x</i>)
					</td>
					<td>Defines a 3D translation, using only the value
						for the X-axis</td>
				</tr>
				<tr>
					<td>translateY(<i>y</i>)
					</td>
					<td>Defines a 3D translation, using only the value
						for the Y-axis</td>
				</tr>
				<tr>
					<td>translateZ(<i>z</i>)
					</td>
					<td>Defines a 3D translation, using only the value
						for the Z-axis</td>
				</tr>
				<tr>
					<td>scale3d(<i>x,y,z</i>)
					</td>
					<td>Defines a 3D scale transformation</td>
				</tr>
				<tr>
					<td>scaleX(<i>x</i>)
					</td>
					<td>Defines a 3D scale transformation by giving a
						value for the X-axis</td>
				</tr>
				<tr>
					<td>scaleY(<i>y</i>)
					</td>
					<td>Defines a 3D scale transformation by giving a
						value for the Y-axis</td>
				</tr>
				<tr>
					<td>scaleZ(<i>z</i>)
					</td>
					<td>Defines a 3D scale transformation by giving a
						value for the Z-axis</td>
				</tr>
				<tr>
					<td>rotate3d(<i>x,y,z,angle</i>)
					</td>
					<td>Defines a 3D rotation</td>
				</tr>
				<tr>
					<td>rotateX(<i>angle</i>)
					</td>
					<td>Defines a 3D rotation along the X-axis</td>
				</tr>
				<tr>
					<td>rotateY(<i>angle</i>)
					</td>
					<td>Defines a 3D rotation along the Y-axis</td>
				</tr>
				<tr>
					<td>rotateZ(<i>angle</i>)
					</td>
					<td>Defines a 3D rotation along the Z-axis</td>
				</tr>
				<tr>
					<td>perspective(<i>n</i>)
					</td>
					<td>Defines a perspective view for a 3D
						transformed element</td>
				</tr>
			</tbody>
		</table>
		<h1 class="subject">CSS3의 추가기능 :트랜지션 - Transition</h1>
		<p>이 내용의 대강의 실습은 16에서 진행한다. 생각해보니 너무 이상하게 작성해서 다시
			w3s으로 작성한다.</p>
		<h2>CSS Transitions</h2>
		<p>CSS transitions allows you to change property
			values smoothly (from one value to another), over a given
			duration.</p>
		<h2>Browser Support for Transitions</h2>
		<p>
			The numbers in the table specify the first browser
			version that fully supports the property. <br>
			Numbers followed by -webkit-, -moz-, or -o- specify the
			first version that worked with a prefix.
		</p>
		<table>
			<tbody>
				<tr style="height: 80px;">
					<th
						style="width: 25%; font-size: 16px; text-align: left;">Property</th>
					<th style="width: 15%;" class="bsChrome"></th>
					<th style="width: 15%;" class="bsEdge"></th>
					<th style="width: 15%;" class="bsFirefox"></th>
					<th style="width: 15%;" class="bsSafari"></th>
					<th style="width: 15%;" class="bsOpera"></th>
				</tr>
				<tr>
					<td style="text-align: left;">transition</td>
					<td>26.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>4.0&nbsp;-moz-
					</td>
					<td>6.1<br>3.1&nbsp;-webkit-
					</td>
					<td>12.1<br>10.5&nbsp;-o-
					</td>
				</tr>
				<tr>
					<td style="text-align: left;">transition-delay</td>
					<td>26.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>4.0&nbsp;-moz-
					</td>
					<td>6.1<br>3.1&nbsp;-webkit-
					</td>
					<td>12.1<br>10.5&nbsp;-o-
					</td>
				</tr>
				<tr>
					<td style="text-align: left;">transition-duration</td>
					<td>26.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>4.0&nbsp;-moz-
					</td>
					<td>6.1<br>3.1&nbsp;-webkit-
					</td>
					<td>12.1<br>10.5&nbsp;-o-
					</td>
				</tr>
				<tr>
					<td style="text-align: left;">transition-property</td>
					<td>26.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>4.0&nbsp;-moz-
					</td>
					<td>6.1<br>3.1&nbsp;-webkit-
					</td>
					<td>12.1<br>10.5&nbsp;-o-
					</td>
				</tr>
				<tr>
					<td style="text-align: left;">transition-timing-function</td>
					<td>26.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>4.0&nbsp;-moz-
					</td>
					<td>6.1<br>3.1&nbsp;-webkit-
					</td>
					<td>12.1<br>10.5&nbsp;-o-
					</td>
				</tr>
			</tbody>
		</table>
		<h2>How to Use CSS Transitions?</h2>
		<p>To create a transition effect, you must specify two
			things:</p>
		<ul>
			<li>the CSS property you want to add an effect to</li>
			<li>the duration of the effect</li>
		</ul>
		<p class="imp">Note: If the duration part is not
			specified, the transition will have no effect, because
			the default value is 0.</p>
		<p>The following example shows a 100px * 100px red
			&lt;div&gt; element. The &lt;div&gt; element has also
			specified a transition effect for the width property,
			with a duration of 2 seconds:</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    background: red;
    -webkit-transition: width 2s; /* Safari */
    transition: width 2s;
}			</pre>
		<p>
			The transition effect will start when the specified CSS
			property (width) changes value.<br> Now, let us
			specify a new value for the width property when a user
			mouses over the &lt;div&gt; element:
		</p>
		<pre class="code">
div:hover {
    width: 300px;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p44.html"
			class="center">프렉티스 44</a>
		<p class="bookmark">중요-트랜지션 시 div 높이나 넓이 변환</p>
		<p class="imp">트랜지션을 이용하여 후버를 통해서 div같은 어떤 영역의 넓이나 높이를
			변화시키려 한다면 우선 변화하기 전의 픽셀과 변한 후의 픽셀을 정확히 정의해야 한다.</p>
		<p>Notice that when the cursor mouses out of the
			element, it will gradually change back to its original
			style.</p>
		<h2>Change Several Property Values</h2>
		<p>The following example adds a transition effect for
			both the width and height property, with a duration of 2
			seconds for the width and 4 seconds for the height:</p>
		<pre class="code">
div {
    -webkit-transition: width 2s, height 4s; /* Safari */
    transition: width 2s, height 4s;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p45.html"
			class="center">프렉티스 45</a>







		<h1 class="bookmark">Specify the Speed Curve of the
			Transition</h1>
		<p>
			The <span class="imp">transition-timing-function</span>
			property specifies the speed curve of the transition
			effect. <br> <br> The
			transition-timing-function property can have the
			following values:
		</p>
		<ul>
			<li><span class="imp">ease</span> - specifies a
				transition effect with a slow start, then fast, then end
				slowly (this is default)</li>
			<li><span class="imp">linear</span> - specifies a
				transition effect with the same speed from start to end</li>
			<li><span class="imp">ease-in</span> - specifies a
				transition effect with a slow start</li>
			<li><span class="imp">ease-out</span> - specifies a
				transition effect with a slow end</li>
			<li><span class="imp">ease-in-out</span> - specifies
				a transition effect with a slow start and end</li>
			<li><span class="imp">cubic-bezier(n,n,n,n)</span> -
				lets you define your own values in a cubic-bezier
				function</li>
		</ul>
		<pre class="code">
#div1 {transition-timing-function: linear;}
#div2 {transition-timing-function: ease;}
#div3 {transition-timing-function: ease-in;}
#div4 {transition-timing-function: ease-out;}
#div5 {transition-timing-function: ease-in-out;}</pre>
		<a href="/studyhtml5/ch04/practice/css_p46.html"
			class="center">프렉티스 46</a>
		<h2>Delay the Transition Effect</h2>
		<p>
			The <span class="imp">transition-delay</span> property
			specifies a delay (in seconds) for the transition effect.
			<br> <br> The following example has a 1 second
			delay before starting:
		</p>
		<pre class="code">
div {
    -webkit-transition-delay: 1s; /* Safari */
    transition-delay: 1s;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p47.html"
			class='center'>프렉티스 47</a>
		<h2>Transition + Transformation</h2>
		<p>The following example also adds a transformation to
			the transition effect:</p>
		<pre class="code">
div {
    -webkit-transition: width 2s, height 2s, -webkit-transform 2s; /* Safari */
    transition: width 2s, height 2s, transform 2s;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p48.html"
			class="center">프렉티스 48</a>
		<h2>More Transition Examples</h2>
		<p>The CSS transition properties can be specified one
			by one, like this:</p>
		<pre class="code">
div {
    transition-property: width;
    transition-duration: 2s;
    transition-timing-function: linear;
    transition-delay: 1s;
}</pre>
		<p>
			or by using the shorthand property <span class="imp">transition</span>:
		</p>
		<pre class='code'>
div {
    transition: width 2s linear 1s;
}</pre>
		<h2>CSS Transition Properties</h2>
		<p>The following table lists all the CSS transition
			properties:</p>
		<table>
			<tbody>
				<tr>
					<th>Property</th>
					<th>Description</th>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transition.asp">transition</a></td>
					<td>A shorthand property for setting the four
						transition properties into a single property</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transition-delay.asp">transition-delay</a></td>
					<td>Specifies a delay (in seconds) for the
						transition effect</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transition-duration.asp">transition-duration</a></td>
					<td>Specifies how many seconds or milliseconds a
						transition effect takes to complete</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transition-property.asp">transition-property</a></td>
					<td>Specifies the name of the CSS property the
						transition effect is for</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_transition-timing-function.asp">transition-timing-function</a></td>
					<td>Specifies the speed curve of the transition
						effect</td>
				</tr>
			</tbody>
		</table>




		<p class="imp">여기서 중요한점. 트랜지션(transition)도 따지고 보면
			에니메이션이다. 다만, A,B 이 두 코스밖에 적용이 되지 않는다. 바로 그게 단점이라고 할 수 있다.
			보다 복잡한 에니메이션을 사용할려면 다음진행할 animation 명령어를 사용하도록 하자.</p>





		<h1 class="subject">에니메이션: @keyframes, animation</h1>
		<h2>CSS Animations</h2>
		<p>CSS animations allows animation of most HTML
			elements without using JavaScript or Flash!</p>
		<h2>Browser Support for Animations</h2>
		<p>
			The numbers in the table specify the first browser
			version that fully supports the property. <br>
			Numbers followed by -webkit-, -moz-, or -o- specify the
			first version that worked with a prefix.
		</p>
		<table>
			<tbody>
				<tr style="height: 80px">
					<th
						style="width: 25%; font-size: 16px; text-align: left;">Property</th>
					<th style="width: 15%" class="bsChrome" title="Chrome"></th>
					<th style="width: 15%;" class="bsEdge"
						title="Internet Explorer / Edge"></th>
					<th style="width: 15%;" class="bsFirefox"
						title="Firefox"></th>
					<th style="width: 15%;" class="bsSafari" title="Safari"></th>
					<th style="width: 15%;" class="bsOpera" title="Opera"></th>
				</tr>
				<tr>
					<td style="text-align: left;">@keyframes</td>
					<td>43.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>5.0&nbsp;-moz-
					</td>
					<td>9.0<br>4.0&nbsp;-webkit-
					</td>
					<td>30.0<br>15.0&nbsp;-webkit-<br>12.0
						-o-
					</td>
				</tr>
				<tr>
					<td style="text-align: left;">animation</td>
					<td>43.0<br>4.0&nbsp;-webkit-
					</td>
					<td>10.0</td>
					<td>16.0<br>5.0&nbsp;-moz-
					</td>
					<td>9.0<br>4.0&nbsp;-webkit-
					</td>
					<td>30.0<br>15.0&nbsp;-webkit-<br>12.0&nbsp;-o-
					</td>
				</tr>
			</tbody>
		</table>
		<h2>What are CSS Animations?</h2>
		<p>
			An animation lets an element gradually change from one
			style to another. <br> You can change as many CSS
			properties you want, as many times you want. <br> To
			use CSS animation, you must first specify some keyframes
			for the animation. <br> Keyframes hold what styles
			the element will have at certain times.
		</p>
		<h2>The @keyframes Rule</h2>
		<p>
			When you specify CSS styles inside the @keyframes rule,
			the animation will gradually change from the current
			style to the new style at certain times. <br> To get
			an animation to work, you must bind the animation to an
			element. <br> The following example binds the
			"example" animation to the &lt;div&gt; element. The
			animation will last for 4 seconds, and it will gradually
			change the background-color of the &lt;div&gt; element
			from "red" to "yellow":
		</p>
		<pre class="code">
 /* The animation code */
@keyframes example {
    from {background-color: red;}
    to {background-color: yellow;}
}

/* The element to apply the animation to */
div {
    width: 100px;
    height: 100px;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
} </pre>
		<a href="/studyhtml5/ch04/practice/css_p50.html"
			class="center">프렉티스 50</a>
		<p>
			Note: The <span class="code">animation-duration</span>
			property defines how long time an animation should take
			to complete. If the <span class="code">animation-duration</span>
			property is not specified, no animation will occur,
			because the default value is 0s (0 seconds). <br> <br>
			In the example above we have specified when the style
			will change by using the keywords <span class="code">from</span>
			and <span class="code">to</span> (which represents <span
				class="code">0%</span> (start) and <span class="code">100%</span>
			(complete)). <br> <br> It is also possible to
			use percent. By using percent, you can add as many style
			changes as you like. <br> <br> The following
			example will change the <span class="code">background-color</span>
			of the &lt;div&gt; element when the animation is 25%
			complete, 50% complete, and again when the animation is
			100% complete:
		</p>
		<pre class="code">
 /* The animation code */
@keyframes example {
    0%   {background-color: red;}
    25%  {background-color: yellow;}
    50%  {background-color: blue;}
    100% {background-color: green;}
}

/* The element to apply the animation to */
div {
    width: 100px;
    height: 100px;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
} </pre>
		<a href="/studyhtml5/ch04/practice/css_p51.html"
			class='center'>프렉티스 51</a>
		<p>
			The following example will change both the
			background-color and the position of the &lt;div&gt;
			element when the animation is <span class="code">25%</span>
			complete, <span class="code">50%</span> complete, and
			again when the animation is <span class="code">100%</span>
			complete:
		</p>
		<pre class="code">
/* The animation code */
@keyframes example {
    0%   {background-color:red; left:0px; top:0px;}
    25%  {background-color:yellow; left:200px; top:0px;}
    50%  {background-color:blue; left:200px; top:200px;}
    75%  {background-color:green; left:0px; top:200px;}
    100% {background-color:red; left:0px; top:0px;}
}

/* The element to apply the animation to */
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
} </pre>
		<a href="/studyhtml5/ch04/practice/css_p52.html"
			class="center">프렉티스 52</a>
		<h2>Delay an Animation</h2>
		<p>
			The <span class="code">animation-delay</span> property
			specifies a delay for the start of an animation. <br>
			The following example has a 2 seconds delay before
			starting the animation:
		</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-delay: 2s;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p53.html"
			class="center">프렉티스 53</a>
		<p>
			Negative values are also allowed. If using negative
			values, the animation will start as if it had already
			been playing for N seconds. <br> In the following
			example, the animation will start as if it had already
			been playing for 2 seconds:
		</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-delay: -2s;
}</pre>
		<a href='/studyhtml5/ch04/practice/css_p54.html'
			class="center">프렉티스 54</a>
		<h2>Set How Many Times an Animation Should Run</h2>
		<p>
			The <span class="code">animation-iteration-count</span>
			property specifies the number of times an animation
			should run. <br> The following example will run the
			animation 3 times before it stops:
		</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: 3;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p55.html"
			class="center">프렉티스 55</a>
		<p>The following example uses the value "infinite" to
			make the animation continue for ever:</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: infinite;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p56.html"
			class="center">프렉티스 56</a>
		<h2>Run Animation in Reverse Direction or Alternate
			Cycles</h2>
		<p>
			The <span class="code">animation-direction</span>
			property specifies whether an animation should be played
			forwards, backwards or in alternate cycles. <br> The
			animation-direction property can have the following
			values:
		</p>
		<ul>
			<li><span class="code">normal</span> - The animation
				is played as normal (forwards). This is default</li>
			<li><span class="code">reverse</span> - The
				animation is played in reverse direction (backwards)</li>
			<li><span class="code">alternate</span> - The
				animation is played forwards first, then backwards</li>
			<li><span class="code">alternate-reverse</span> -
				The animation is played backwards first, then forwards</li>
		</ul>
		<p>The following example will run the animation in
			reverse direction (backwards):</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-direction: reverse;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p57.html"
			class="center">프렉티스 57</a>
		<p>The following example uses the value "alternate" to
			make the animation run forwards first, then backwards:</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: 2;
    animation-direction: alternate;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p58.html"
			class="center">프렉티스 58</a>
		<p class="imp">
			이걸할라면 <span class="code">animation-iteration-count:
				2</span>가 있어야 한다. 한 번 가고 다시 반대로 돌아가는 것이기 때문에
		</p>
		<p>The following example uses the value
			"alternate-reverse" to make the animation run backwards
			first, then forwards:</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    position: relative;
    background-color: red;
    animation-name: example;
    animation-duration: 4s;
    animation-iteration-count: 2;
    animation-direction: alternate-reverse;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p59.html"
			class="center">프렉티스 59</a>
		<h2>Specify the Speed Curve of the Animation</h2>
		<p>
			The <span class="code">animation-timing-function</span>
			property specifies the speed curve of the animation. <br>
			The animation-timing-function property can have the
			following values:
		</p>
		<ul>
			<li>ease - Specifies an animation with a slow start,
				then fast, then end slowly (this is default)</li>
			<li>linear - Specifies an animation with the same
				speed from start to end</li>
			<li>ease-in - Specifies an animation with a slow
				start</li>
			<li>ease-out - Specifies an animation with a slow
				end</li>
			<li>ease-in-out - Specifies an animation with a slow
				start and end</li>
			<li>cubic-bezier(n,n,n,n) - Lets you define your own
				values in a cubic-bezier function</li>
		</ul>
		<p>The following example shows the some of the
			different speed curves that can be used:</p>
		<pre class="code">
#div1 {animation-timing-function: linear;}
#div2 {animation-timing-function: ease;}
#div3 {animation-timing-function: ease-in;}
#div4 {animation-timing-function: ease-out;}
#div5 {animation-timing-function: ease-in-out;}</pre>
		<a href="/studyhtml5/ch04/practice/css_p60.html"
			class="center">프렉티스 60</a>
		<h2>Specify the fill-mode For an Animation</h2>
		<p>
			CSS animations do not affect an element before the first
			keyframe is played or after the last keyframe is played.
			The animation-fill-mode property can override this
			behavior. <br> The <span class="code">animation-fill-mode</span>
			property specifies a style for the target element when
			the animation is not playing (before it starts, after it
			ends, or both). <br> The animation-fill-mode
			property can have the following values:
		</p>
		<ul>
			<li><span class="code">none</span> - Default value.
				Animation will not apply any styles to the element
				before or after it is executing</li>
			<li><span class="code">forwards</span> - The element
				will retain the style values that is set by the last
				keyframe (depends on animation-direction and
				animation-iteration-count)</li>
			<li><span class="code">backwards</span> - The
				element will get the style values that is set by the
				first keyframe (depends on animation-direction), and
				retain this during the animation-delay period</li>
			<li><span class="code">both</span> - The animation
				will follow the rules for both forwards and backwards,
				extending the animation properties in both directions
		</ul>
		<p>The following example lets the &lt;div&gt; element
			retain the style values from the last keyframe when the
			animation ends:</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: example;
    animation-duration: 3s;
    animation-fill-mode: forwards;
}</pre>
		<p>The following example lets the &lt;div&gt; element
			get the style values set by the first keyframe before the
			animation starts (during the animation-delay period):</p>
		<pre class="code">
div {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: example;
    animation-duration: 3s;
    animation-delay: 2s;
    animation-fill-mode: backwards;
}</pre>
		<p>The following example lets the &lt;div&gt; element
			get the style values set by the first keyframe before the
			animation starts, and retain the style values from the
			last keyframe when the animation ends:</p>
		<pre class='code'>
div {
    width: 100px;
    height: 100px;
    background: red;
    position: relative;
    animation-name: example;
    animation-duration: 3s;
    animation-delay: 2s;
    animation-fill-mode: both;
}</pre>
		<a href='/studyhtml5/ch04/practice/css_p61.html'
			class="center">프렉티스 61</a>
		<h2 class="bookmark">Animation Shorthand Property</h2>
		<p class="imp">animation 기능을 순서를 외우던가 아니면 이곳을 따로 북마크
			해놓을 테니 쓸때마다 한번씩 보던가는 자유다.</p>
		<p>The example below uses six of the animation
			properties:</p>
		<pre class="code">
div {
    animation-name: example;
    animation-duration: 5s;
    animation-timing-function: linear;
    animation-delay: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate;
}</pre>

		<p>
			The same animation effect as above can be achieved by
			using the shorthand <span class="code">animation</span>
			property:
		</p>

		<pre class="code">
div {
    animation: example 5s linear 2s infinite alternate;
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p62.html"
			class="center">프렉티스 62</a>
		<h2>CSS Animation Properties</h2>
		<p>The following table lists the @keyframes rule and
			all the CSS animation properties:</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 28%">Property</th>
					<th>Description</th>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-keyframes.asp">@keyframes</a></td>
					<td>Specifies the animation code</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation.asp">animation</a></td>
					<td>A shorthand property for setting all the
						animation properties</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-delay.asp">animation-delay</a></td>
					<td>Specifies a delay for the start of an
						animation</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-direction.asp">animation-direction</a></td>
					<td>Specifies whether an animation should be
						played forwards, backwards or in alternate cycles</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-duration.asp">animation-duration</a></td>
					<td>Specifies how long time an animation should
						take to complete one cycle</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-fill-mode.asp">animation-fill-mode</a></td>
					<td>Specifies a style for the element when the
						animation is not playing (before it starts, after it
						ends, or both)</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-iteration-count.asp">animation-iteration-count</a></td>
					<td>Specifies the number of times an animation
						should be played</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-name.asp">animation-name</a></td>
					<td>Specifies the name of the @keyframes animation</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-play-state.asp">animation-play-state</a></td>
					<td>Specifies whether the animation is running or
						paused</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/css3_pr_animation-timing-function.asp">animation-timing-function</a></td>
					<td>Specifies the speed curve of the animation</td>
				</tr>
			</tbody>
		</table>











		<h2 class="bookmark">div margin관련</h2>
		<img alt="picture"
			src="/studyhtml5/images/align div middle in div.png">
		<p>
			이렇게 중앙으로 div를 수평 정렬을 하기 위해서는 안에 있는 div를
			display:inline-block;과 margin: 으로 해놓고, 밖에 있는 div에서
			text-align:center; 로 해야 한다.<br> 한 줄에 하나만 표시되지만, 중앙에
			표시되는 display:block은 width를 임의로 조절해주고, margin: 0 auto;를
			입력한다. <a href="practice/css25.html">예보기</a>
		</p>

		<h1 class='subject'>CSS3의 추가기능: 필터 - filter</h1>
		<p>filter 속성은 이미지 등에 사진에서 사용하는 블러, 밝기 조절, 세피아와 같은 필터
			기능을 줄때 사용한다. IE에서는 아직 이 기능을 제공하지 않는다.</p>
		<p>
			참조: <a href="practice/css_p18_filter.html">css18
				filter</a>
		</p>
		<table>
			<tr>
				<td>filter: 필터 값;</td>
			</tr>
		</table>

		<p>필터 값: 필터 값에는 none, blur(), britness(), contrast(),
			drop-shadow(),gray-scale(),hue-rotate(),invert(),opacity(),saturate(),sepia()등이
			올 수 있다.</p>

		<h2>1. blur(px)</h2>
		<p>블러(퍼져보임) 값을 px로 지정한다. px값이 클수록 더 퍼진다.</p>

		<table>
			<tr>
				<td>filter: blur(3px);</td>
			</tr>
		</table>
		<h2>2. brightness(%)</h2>
		<p>밝기 (명도)를 %로 지정한다. 100% 미만이면 원래 이미지 보다 어두워 지며, 0%이면
			이미지가 완전 검정색이 된다. 100%이면 원래의 이미지로 표시되고, 100%이상이면 원래 이미지보다
			밝아진다.</p>
		<table>
			<tr>
				<td>filter: brightness(3px);</td>
			</tr>
		</table>

		<h2>3. contrast(%)</h2>
		<p>대비(콘트라스트)를 %로 지정한다. 100% 미만이면 원래 이미지보다 대비가 커지며,
			0%이면 이미지가 완전 검정색이 된다. 100%이면 원래의 이미지로 표시되고, 100%이상이면 원래
			이미지 보다 대비가 적어진다.</p>
		<table>
			<tr>
				<td>filter: contrast(200%);</td>
			</tr>
		</table>

		<h2>4. drop-shadow(h-shadow v-shadow blur color)</h2>
		<p>그림자를 지정한다. 그림자를 주는 방식은 box-shadow()와 유사하다.
			drop-shadow(가로px 세로px 블러px 색상)로 지정한다.</p>
		<table>
			<tr>
				<td>filter:drop-shadow(5px 5px 5px gray);</td>
			</tr>
		</table>

		<h2>5. grayscale(%)</h2>
		<p>그레이스케일(회색조)을 %로 지정한다. 0%이면 원래 이미지이고, 100%이면 완전 회핵
			이미지로 표시된다.</p>
		<table>
			<tr>
				<td>filter: grayscale(100%);</td>
			</tr>
		</table>
		<h2>6. hue-rotate(deg)</h2>
		<p>색도를 deg로 지정한다. 0/360deg는 원래 이미지, 90deg면 청록색,
			180deg면 보라색, 270deg면 핑크색 계열로 지정된다.</p>
		<table>
			<tr>
				<td>filter: hue-rotate(180deg);</td>
			</tr>
		</table>
		<img alt="ydls" src="./../images/ydlgs.jpg">
		<h2>7. invert(%)</h2>
		<p>전도를 %로 지정한다. 0%이면 원래 이미지이고, 100%이면 완전 전도된다.</p>
		<table>
			<tr>
				<td>filter:invert(100%);</td>
			</tr>
		</table>

		<h2>8. opacity(%)</h2>
		<p>투명도를 %로 지정한다. 0%이면 완전 투명 이미지이고, 100%이면 완전 불투명 이미지
			이다.</p>
		<table>
			<tr>
				<td>filter: opacity(50%)</td>
			</tr>
		</table>

		<h2>9. saturate(%)</h2>
		<p>채도를 %로 지정한다. 100%미만이면 원래 이미지보다 채도가 적어지고, 0%이면 이미지에
			채도가 완전히 없어진다. 100%이면 원래의 이미지로 표시되고, 100%이상이면 원래 이미지 보다
			채도가 커진다.</p>
		<table>
			<tr>
				<td>filter: saturate(300%)</td>
			</tr>
		</table>

		<h2>10. sepia(%)</h2>
		<p>세피아(적갈색)를 %로 지정한다. 0%이면 원래 이미지이고, 100%이면 완전 세피아로
			표시된다.</p>
		<table>
			<tr>
				<td>filter: sepia(100%)</td>
			</tr>
		</table>

		<p>실습 18</p>


		<h1 class="subject">CSS3의 추가기능:이미지 스타일 - 각종 기능을 사용한
			이미지 표현</h1>

		<p>css의 각종 기능들을 사용하면 이미지 편집 프로그램을 사용하지 않고도 이미지를 꾸밀 수
			있다.</p>
		<h2>1.라운드 이미지(round image)</h2>
		<p>border-radius 속성의 값은 px 단위 뿐만 아니라 %로도 지정할 수 있다.
			px값이 커지면 점점 원형이 가까워지는데, 좀더 원형을 지정하려면 50%로 설정한다.</p>
		<h2>2.썸네일 이미지(thumbnail image)</h2>
		<p>모바일 웹 사이트에서는 화면의 크기가 작아서 원본 이미지가 제대로 표현되지 못하는 점을
			보안하기 위해서, 이미지를 클릭하면 원본 이미지가 별도의 창(또는 탭)에 표시되는 것을 종종 볼 수
			있다. 이것을 썸네일 이미지라고 한다. 원래 이미지에 비해 작게 표시되는 이미지를
			엄지손톱(thumnail)만 하다고 해서 썸네일 이미지라고 부른다. 썸네일 이미지는 쇼핑몰 등의 각종
			사이트에서 많이 제공된다.</p>
		<p>썸네일 실습 19</p>
		<h2>3.반응형 이미지(Responsive images)</h2>
		<p>화면의 크기가 작아지면 웹 브라우저에 표시되는 이미지가 잘라져서 표시되는 것은 화면크기가
			다양한 요즘에는 적합하지 않다.</p>
		<p>요즘의 웹 사이트들은 화면의 크기에 따라 자동의 이미지의 크기와 배치를 바꿀 수 있는 반응형
			이미지를 제공한다. 이런 반응형 미지는 화면의 크기에 따라 최적의 이미지 크기를 제공하기 때문에
			이미지가 잘리지 않는다. 반응형 이미지를 구현하려면 이미지의 가로너비를 100%로 지정한다.</p>

		<table>
			<tr>
				<td>max-width: 100%;</td>
			</tr>
		</table>

		<p>이때 가로너비 속성을 max-width를 사용하면, 화면이 작은 경우 이미지가 잘리지 않고,
			화면이 아주 켜져도 원래 이미지 파일의 크기보다 커지는 것을 방지한다. 이미지가 원래의 크기가 커지는
			경우 이미지의 품질이 떨어질 수있고, 화면의 배치등에 좋지 않기 때문이다. 썸네일 실습 19//화면이
			커져도 원래 이미지의 크기보다는 커지지 않는다.</p>
		<p>미디어 쿼리와 반응형 이미지로 갤러리를 만들어보자 실습 20 고티버젼의 게임을 나열해보자.</p>

		<h2>4. 이미지에 텍스트 추가</h2>
		<p>이미지 내에 텍스트를 추가 시켜야 할 때가 있는데, 이때 position 속성과 top,
			bottom, left, right 속성을 결합해서 위치를 지정하고 추가한다.</p>
		<table>
			<tr>
				<td>div{<br> position: relative;<br>}<br>p{<br>
					position: absolute;<br>top:5px; <br>left:5px;<br>}
				</td>
			</tr>
		</table>
		<h2>5. 폴라로이드 이미지</h2>
		<p>box-shadow 속성을 사용해서 폴라로이드 사진과 같은 느낌을 주는 이미지를 만들 수
			있다. 이건 실습 21에서 해보자.</p>
		<h2>6. 이미지 모달(modal)</h2>
		<p>이미지 모달은 이미지를 표시하는데 일종의 대화상자이다. 모달(modal)은 모달 대화상자
			(modal dialog box)를 의미하는데, 화면에 모달 대화상자가 표시된 상태에서는 다른 작업을
			할 수 없다. 주로 스마트 기기와 같은 작은 화면에서선택한 이미지에 대한 정보와 이미지를 좀 더 원본에
			가까운 표시를 할 때 사용한다.</p>
		<p>스마트폰에서 네이버나 구글사이트에서 이미지를 검색하고, 검색한 이미지를 상세히 보기 위해서
			탭(클릭)하면 이미지가 화면 전체에 표시되고, 이미지 모달을 빠져나갈 수 있는 [&lt;]버튼이나
			[x]버튼을 제공한다.</p>
		<p>이미지 모달을 만들려면 CSS뿐만 아니라 자바스크립트도 필요하다. 만드는 순서는 먼저
			CSS에서 이미지 모달 대화상자는 일반적으로 &lt;div&gt;태그로 만들고
			display:none;을 사용해서 화면에 숨긴다. 그리고 자바스크립트에서 객체. display =
			"block";을 사용해서 이미지를 클릭하면 이미지 모달 대화상자를 화면에 표시한다. 모달 대화상자는
			필수적으로 위치를 고정하는 position: fixed;와 화면 전면부에 표시하는 z-index:1;을
			추가해야한다. 화면 저체에 표시하려면 width: 100%;, height: 100%;으로 설정한다.</p>
		<table>
			<tr>
				<td><br>이미지 모달 대화상자 표시<br> div{<br>
					display: none;//이미지 모달 대화상자 화면에서 표시 안함<br>
					position: fixed;//이미지 모달 대화상자 위치 고정<br> z-index:
					1;//이미지 모달 대화상자 화면 전면부에 표시<br> width: 100%;//이미지
					모달 대화상자 크기-화면 전체 크기<br> height: 100%;<br> }<br>
					<br>이미지 클릭시 이미지 모달 대화상자 표시<br>
					$("#img1").click(function(){//이미지를 클릭하면 자동 실행되는 자바스크립트
					함수<br>
					&nbsp;$("#dialog").css("display,"blcok");//이미지 모달 대화상자
					화면에 표시<br> });<br> <br> <br>css
					p22에서 실습 진행. 씨발 이거 안된다. Jquery 입력할 때, 사소한 오타 조심해라.
					document이다. documnet가 아니라.</td>
			</tr>
		</table>

		<h2>웹 폰트: font-face</h2>
		<p>웹 폰트는 css3에서 추가된 것으로, 사용자의 컴퓨터상에 폰트를 다운로드 하지 않아도 해당
			폰트를 사용할 수 있다. 웹 폰트를 사용할 때는 @font-face로 사용할 폰트명과 폰트파일명을
			정의한다. 브라우저마다 지원되는 폰트파일의 형식이 다르다.</p>

		<table class="browserref notranslate">
			<tbody>
				<tr>
					<th>Font format</th>
					<th class="bsChrome" title="Chrome"></th>
					<th class="bsEdge" title="Internet Explorer / Edge"></th>
					<th class="bsFirefox" title="Firefox"></th>
					<th class="bsSafari" title="Safari"></th>
					<th class="bsOpera" title="Opera"></th>
				</tr>
				<tr>
					<td>TTF/OTF</td>
					<td>4.0</td>
					<td>9.0*</td>
					<td>3.5</td>
					<td>3.1</td>
					<td>10.0</td>
				</tr>
				<tr>
					<td>WOFF</td>
					<td>5.0</td>
					<td>9.0</td>
					<td>3.6</td>
					<td>5.1</td>
					<td>11.1</td>
				</tr>
				<tr>
					<td>WOFF2</td>
					<td>36.0</td>
					<td><span class="deprecated">Not supported</span></td>
					<td>35.0*</td>
					<td><span class="deprecated">Not supported</span></td>
					<td>26.0</td>
				</tr>
				<tr>
					<td>SVG</td>
					<td>4.0</td>
					<td><span class="deprecated">Not supported</span></td>
					<td><span class="deprecated">Not supported</span></td>
					<td>3.2</td>
					<td>9.0</td>
				</tr>
				<tr>
					<td>EOT</td>
					<td><span class="deprecated">Not supported</span></td>
					<td>6.0</td>
					<td><span class="deprecated">Not supported</span></td>
					<td><span class="deprecated">Not supported</span></td>
					<td><span class="deprecated">Not supported</span></td>
				</tr>
			</tbody>
		</table>

		<p>폰트 및 웹 폰트를 사용할 때는 저작권 문제가 발생할 수 있기 때문에 무료로 사용을 원할
			경우 반드시 무료로 공개된 것인지를 확인한다.무료로 폰트를 제공하는 사이트에는
			구글폰트(http://www.google.com/get/noto/#/family/noto-sans-kore),
			서울서체(http://www.seoul.go.kr/v2012/seoul/symbol/font.html)가
			있다.</p>

		<p>웹 폰트를 사용하려면 먼저 @font-face를 사용해서 사용할
			폰트명(font-family)과 폰트파일명(src)을 정의한다. 그런 후 정의된 웹 폰트명을 적용할
			태그에 font-family속성을 사용해서 쓴다.</p>

		<table>
			<tr>
				<td>@font-face{ //웹 폰트 정의<br>
					font-family:notoFont; //폰트명 정의<br> src:
					url(../font/NotoSansCJKkr-black.otf); //사용할 폰트 파일명<br>
					}<br> <br> p{ //정의된 웹 폰트 사용<br>
					font-family: notoFont; //사용할 폰트명<br> }
				</td>
			</tr>
		</table>
		<h2>다단: column-count, column-width</h2>
		<p>CSS3의 다단(multiple columns)은 신문과 같은 텍스트의 다단을 쉽게 사용할
			수 있다. 다단을 나누는 방법에는 column-count속성과 column-width 속성을 사용하는
			방법이 있다. column-count 속성은 다단의 수를 고정하기 때문에 화면의 크기에 따라 너비가
			다르고, column-width속성은 너비를 고정하기 때문에 화면의 크기에 따라 다단의 수가 다르다.
			이들 속성을 사용할 때는 벤더 프리픽스는 생략하지 않는다.</p>

		<p>width와 gap을 사용한 다단을 정의하는 예시는 다음과 같다.</p>
		<table>
			<tr>
				<td>div{<br> //다단<br>
					-webkit-column-width:100px; //크롬, 사파리, 오페라<br>
					-moz-column-width 100px;//파이어폭스<br> column-width :
					100px;//표준, IE<br> <br> //단과 단사이의 공간<br>
					-webkit-column-gap: 40px;//크롬, 사파리, 오페라<br>
					-moz-column-gap: 40px;//파이어폭스<br> column-gap:
					40px; //표준, IE<br> <br>
					-webkit-column-rule-style: dotted;<br>
					-moz-column-rule-style: dotted;<br>
					column-rule-style: dotted;<br>}<br>
				</td>
			</tr>
		</table>
		<br>

		<p>column-count속성을 사용해서 다단을 정의하는 예시는 다음과 같다.</p>

		<table>
			<tr>
				<td>div{<br> //다단<br>
					-webkit-column-count:3; //크롬, 사파리, 오페라<br>
					-moz-column-count: 3;//파이어폭스<br> column-count :
					3;//표준, IE<br> <br> //단과 단사이의 공간<br>
					-webkit-column-gap: 40px;//크롬, 사파리, 오페라<br>
					-moz-column-gap: 40px;//파이어폭스<br> column-gap:
					40px; //표준, IE<br> <br> //단과 단사이의 공간<br>
					-webkit-column-gap: 40px;//크롬, 사파리, 오페라<br>
					-moz-column-gap: 40px;//파이어폭스<br> column-gap:
					40px; //표준, IE<br> <br>//단과 단 사이에 구분선 표시<br>
					-webkit-column-rule-style: dotted;// 크롬, 사파리, 오페라<br>
					-moz-column-rule-style: dotted;//파이어폭스<br>
					column-rule-style: dotted;//표준, IE<br>

				</td>
			</tr>
		</table>
		<br> <img style="background: white;" alt="111"
			src="../images/column_gap.png">
		<p>실습을 진행한다. css_p24</p>
		<h1 class="subject">참고!! 5segment.gif</h1>
		<img alt="5segment" src="../images/5segment.gif">
		<p>다양한 html, css를 학습하려면?</p>
		<p>http://developer.mozilla.org/ko/docs/Web/Tutorials
			사이트에는 HTML, CSS, JavaScript를 다양한 예제와 함께 배울 수 있는 학습서를
			제공한다. 실무에서 사용되는 심도있는 주제들도 다루고 있으니 한번 봐두는 것도 좋다.</p>
		<h2 class="bookmark">cursor</h2>
		<p>다음 낱말에 커서를 옮겨 보자. 마우스 커서가 변한다.</p>
		<span style="cursor: auto">auto</span> <br> <span
			style="cursor: crosshair">crosshair</span> <br> <span
			style="cursor: default">default</span> <br> <span
			style="cursor: e-resize">e-resize</span> <br> <span
			style="cursor: grab">grab</span> <br> <span
			style="cursor: help">help</span> <br> <span
			style="cursor: move">move</span> <br> <span
			style="cursor: n-resize">n-resize</span> <br> <span
			style="cursor: ne-resize">ne-resize</span> <br> <span
			style="cursor: nw-resize">nw-resize</span> <br> <span
			style="cursor: pointer">pointer</span> <br> <span
			style="cursor: progress">progress</span> <br> <span
			style="cursor: s-resize">s-resize</span> <br> <span
			style="cursor: se-resize">se-resize</span> <br> <span
			style="cursor: sw-resize">sw-resize</span> <br> <span
			style="cursor: text">text</span> <br> <span
			style="cursor: w-resize">w-resize</span> <br> <span
			style="cursor: wait">wait</span> <br> <span
			style="cursor: not-allowed">not-allowed</span> <br>
		<span style="cursor: no-drop">no-drop</span> <br>
		<table>
			<tr>
				<td>&lt;span style="cursor:
					auto"&gt;auto&lt;/span&gt;<br> &lt;span
					style="cursor: crosshair"&gt;crosshair&lt;/span&gt;<br>
					&lt;span style="cursor:
					default"&gt;default&lt;/span&gt;<br> &lt;span
					style="cursor: e-resize"&gt;e-resize&lt;/span&gt;<br>
					&lt;span style="cursor: grab"&gt;grab&lt;/span&gt;<br>
					&lt;span style="cursor: help"&gt;help&lt;/span&gt;<br>
					&lt;span style="cursor: move"&gt;move&lt;/span&gt;<br>
					&lt;span style="cursor:
					n-resize"&gt;n-resize&lt;/span&gt;<br> &lt;span
					style="cursor: ne-resize"&gt;ne-resize&lt;/span&gt;<br>
					&lt;span style="cursor:
					nw-resize"&gt;nw-resize&lt;/span&gt;<br> &lt;span
					style="cursor: pointer"&gt;pointer&lt;/span&gt;<br>
					&lt;span style="cursor:
					progress"&gt;progress&lt;/span&gt;<br> &lt;span
					style="cursor: s-resize"&gt;s-resize&lt;/span&gt;<br>
					&lt;span style="cursor:
					se-resize"&gt;se-resize&lt;/span&gt;<br> &lt;span
					style="cursor: sw-resize"&gt;sw-resize&lt;/span&gt;<br>
					&lt;span style="cursor: text"&gt;text&lt;/span&gt;<br>
					&lt;span style="cursor:
					w-resize"&gt;w-resize&lt;/span&gt;<br> &lt;span
					style="cursor: wait"&gt;wait&lt;/span&gt;<br>
					&lt;span style="cursor:
					not-allowed"&gt;not-allowed&lt;/span&gt;<br>
					&lt;span style="cursor:
					no-drop"&gt;no-drop&lt;/span&gt;<br>
				</td>
			</tr>
		</table>
		<h1 class="bookmark">폰트 언어별로 따로 적용</h1>
		<p>폰트를 한글과 영어에 각각으로 적용시키도록 css를 작성할 수 있다. 방법은 2가지다.</p>
		<h2>첫 번째 방법: 폰트 나열</h2>
		<div class="code">font-family: 폰트1, 폰트2</div>
		<p>폰트1이 영어 폰트2가 한글일 때, 먼저 영어 폰트가 먼저 적용되고, 그 다음에 한글폰트가
			적용된다. 언제나 이런식으로 적용되는걸 알아둬라. 폰트마다 주된 폰트가 있고, 그것만 적용되고 나머지는
			그냥 비어있고 그냥 비어있는 폰트 즉, 기본값 폰트를 쓴다.</p>

		<h2>두 번째 방법: 폰트 부분 적용</h2>
		<pre class="code">
@font-face {
    font-family: BBCBengali;
    src: url(fonts/폰트1.ttf) format("opentype");
    <span class="imp">unicode-range: U+00-FF, U+980-9FF;</span>
}</pre>
		<p>폰트의 저용범위를 unicode-range를 통해서 해당 폰트를 따로따로 적용을 할 수
			있다.</p>
		<p>
			unicode 코드를 나열하여 볼 수 있는 곳은 다음과 같다. <a
				href="http://www.utf8-chartable.de/unicode-utf8-table.pl">이곳이다.</a>한글은
			AC00부터이다.
		</p>
		<h1 class="bookmark">CSS3 box-sizing Property</h1>
		<h2>Example</h2>
		<p>Specify that &lt;div&gt; elements should have
			padding and border included in the element's total width
			and height:</p>
		<pre class="code">
div {
    width: 300px;
    height: 100px;
    border: 1px solid blue;
    box-sizing: border-box;
}</pre>
		<h2>Definition and Usage</h2>
		<p>
			The box-sizing property is used to tell the browser what
			the sizing properties (width and height) should include.
			<br> <br> Should they include the border-box?
			Or just the content-box (which is the default value of
			the width and height properties)?
		</p>
		<table>
			<tr>
				<th>Default value:</th>
				<td>content-box</td>
			</tr>
			<tr>
				<th>Inherited:</th>
				<td>no</td>
			</tr>
			<tr>
				<th>Animatable:</th>
				<td>no. Read about <em>animatable</em>
				</td>
			</tr>
			<tr>
				<th>Version:</th>
				<td>CSS3</td>
			</tr>
			<tr>
				<th>JavaScript syntax:</th>
				<td><i>object</i>.style.boxSizing="border-box"</td>
			</tr>
		</table>
		<h2>Browser Support</h2>
		<p>
			The numbers in the table specify the first browser
			version that fully supports the property. <br> <br>
			Numbers followed by -webkit- or -moz- specify the first
			version that worked with a prefix.
		</p>
		<h2>CSS Syntax</h2>
		<div class="code">box-sizing:
			content-box|border-box|initial|inherit;</div>
		<h2>Property Values</h2>
		<table>
			<tr>
				<th>Value</th>
				<th>Description</th>
			</tr>
			<tr>
				<td>content-box</td>
				<td>Default. The width and height properties (and
					min/max properties) includes only the content. Border,
					padding, or margin are not included</td>
			</tr>
			<tr>
				<td>border-box</td>
				<td>The width and height properties (and min/max
					properties) includes content, padding and border, but
					not the margin</td>
			</tr>
			<tr>
				<td>initial</td>
				<td>Sets this property to its default value. <a
					href="css_initial.asp">Read about <em>initial</em></a></td>
			</tr>
			<tr>
				<td>inherit</td>
				<td>Inherits this property from its parent element.
					<a href="css_inherit.asp">Read about <em>inherit</em></a>
				</td>
			</tr>
		</table>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p26.html">프렉티스 25</a>
		<h1 class="bookmark">id와 class 갯수</h1>
		<p>id는 한 엘리먼트 당 하나만 가진다. class는 여러개를 가질 수 있다. 그러니까 다음과
			같다.</p>
		<div class="code">&lt;div id="foo" class="bar baz
			bax"&gt;</div>
		<p>id는 한 엘리먼트당 두개를 가질 수 없고, class는 여러개 가져도 된다.</p>
		<h1 class="subject">after Selector</h1>
		<pre class="code">
p::after {
    content: " - Remember this";
}</pre>
		<h2>Definition and Usage</h2>
		<p>
			The ::after selector inserts something after the content
			of each selected element(s). <br> <br> Use the
			<b>content</b> property to specify the content to insert.
			<br> <br> Use the <b>::before</b> selector to
			insert something before the content.
		</p>
		<div class="code">Version: CSS2</div>
		<h2>Browser Support</h2>
		<p>
			The numbers in the table specifies the first browser
			version that fully supports the selector.<br> <br>
			Note: IE8 and Opera 4-6 only support the old,
			single-colon CSS2 syntax (:after). Newer versions support
			the standard, double-colon CSS3 syntax (::after). <br>
			<br> Note: For :after to work in IE8, a
			&lt;!DOCTYPE&gt; must be declared.
		</p>
		<h2>CSS Syntax</h2>
		<div class="code">::after { css declarations; }</div>
		<h2>More Examples</h2>
		<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
p::after { 
    content: " - Remember this";
    background-color: yellow;
    color: red;
    font-weight: bold;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;My name is Donald&lt;/p&gt;
&lt;p&gt;I live in Ducksburg&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; For this selector to work in IE8, a DOCTYPE must be declared,<br> and you must use the old, single-colon CSS2 syntax (:after instead of ::after).&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p27.html">프렉티스 27</a>
		<h1 class="subject">before Selector</h1>
		<pre class="code">
p::before {
    content: "Read this: ";
}</pre>
		<h2>Definition and Usage</h2>
		<p>
			The ::before selector inserts something before the
			content of each selected element(s). <br> <br>
			Use the content property to specify the content to
			insert. <br> <br> Use the ::after selector to
			insert something after the content.
		</p>
		<div class="code">Version: CSS2</div>
		<h2>Browser Support</h2>
		<p>
			The numbers in the table specifies the first browser
			version that fully supports the selector.<br> <br>
			Note: IE8 and Opera 4-6 only support the old,
			single-colon CSS2 syntax (:before). Newer versions
			support the standard, double-colon CSS3 syntax
			(::before). <br> <br> Note: For :before to work
			in IE8, a &lt;!DOCTYPE&gt; must be declared.
		</p>
		<h2>CSS Syntax</h2>
		<pre class="code">
::before {
    css declarations;
} </pre>
		<h2>More Examples</h2>
		<pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
p::before { 
    content: "Read this -";
    background-color: yellow;
    color: red;
    font-weight: bold;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;p&gt;My name is Donald&lt;/p&gt;
&lt;p&gt;I live in Ducksburg&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; For this selector to work in IE8, a DOCTYPE must be declared,<br> and you must use the old, single-colon CSS2 syntax (:before instead of ::before).&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p28.html">프렉티스 28</a>
		<h1 class="subject">Icons Tutorial</h1>
		<h2>How To Add Icons</h2>
		<p>
			To insert an icon, add the name of the icon class to any
			inline HTML element.<br> The &lt;i&gt; and
			&lt;span&gt; elements are widely used to add icons.<br>
			All the icons in the icon libraries below, are scalable
			vector icons that can be customized with CSS (size,
			color, shadow, etc.)
		</p>
		<h2>Font Awesome Icons</h2>
		<p>
			To use the Font Awesome icons, add the following line
			inside the &lt;head&gt; section of your HTML page: <br>
			<br> &lt;link rel="stylesheet"
			href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"&gt;
			<br> <br> Note: No downloading or installation
			is required!
		</p>
		<pre class="code"> &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;i class="fa fa-cloud"&gt;&lt;/i&gt;
&lt;i class="fa fa-heart"&gt;&lt;/i&gt;
&lt;i class="fa fa-car"&gt;&lt;/i&gt;
&lt;i class="fa fa-file"&gt;&lt;/i&gt;
&lt;i class="fa fa-bars"&gt;&lt;/i&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
		<h2>Bootstrap Icons</h2>
		<p>
			To use the Bootstrap glyphicons, add the following line
			inside the &lt;head&gt; section of your HTML page: <br>
			<br> &lt;link rel="stylesheet"
			href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"&gt;
			<br> <br> Note: No downloading or installation
			is required!
		</p>
		<pre class="code"> &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;i class="glyphicon glyphicon-cloud"&gt;&lt;/i&gt;
&lt;i class="glyphicon glyphicon-remove"&gt;&lt;/i&gt;
&lt;i class="glyphicon glyphicon-user"&gt;&lt;/i&gt;
&lt;i class="glyphicon glyphicon-envelope"&gt;&lt;/i&gt;
&lt;i class="glyphicon glyphicon-thumbs-up"&gt;&lt;/i&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
		<h2>Google Icons</h2>
		<p>
			To use the Google icons, add the following line inside
			the &lt;head&gt; section of your HTML page: <br> <br>
			&lt;link rel="stylesheet"
			href="https://fonts.googleapis.com/icon?family=Material+Icons"&gt;
			<br> <br> Note: No downloading or installation
			is required!
		</p>
		<pre class="code">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons"&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;i class="material-icons"&gt;cloud&lt;/i&gt;
&lt;i class="material-icons"&gt;favorite&lt;/i&gt;
&lt;i class="material-icons"&gt;attachment&lt;/i&gt;
&lt;i class="material-icons"&gt;computer&lt;/i&gt;
&lt;i class="material-icons"&gt;traffic&lt;/i&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
		<p>
			아이콘에 대한 내용은 <a
				href="https://www.w3schools.com/icons/icons_reference.asp">여기</a>를
			참조하시라.
		</p>

		<h1 class="subject">Overflow Property</h1>
		<h2>Example</h2>
		<pre class="code">
div {
    width: 150px;
    height: 150px;
    overflow: scroll;
}</pre>
		<h2>Definition and Usage</h2>
		<p>
			The overflow property specifies what happens if content
			overflows an element's box. <br> <br> This
			property specifies whether to clip content or to add
			scrollbars when an element's content is too big to fit in
			a specified area. <br> <br> <span class="imp">Note:
				The overflow property only works for block elements with
				a specified height.</span>
		</p>
		<table class="w3-table-all">
			<tr>
				<th style="width: 25%">Default value:</th>
				<td>visible</td>
			</tr>
			<tr>
				<th>Inherited:</th>
				<td>no</td>
			</tr>
			<tr>
				<th>Animatable:</th>
				<td>no. <a href="css_animatable.asp">Read about
						<em>animatable</em>
				</a>
				</td>
			</tr>
			<tr>
				<th>Version:</th>
				<td>CSS2</td>
			</tr>
			<tr>
				<th>JavaScript syntax:</th>
				<td><i>object</i>.style.overflow="scroll" <a
					target="_blank" class="w3-btn btnsmall"
					href="tryit.asp?filename=trycss_js_overflow">Try it</a></td>
			</tr>
		</table>
		<h2>Browser Support</h2>
		<p>
			The numbers in the table specify the first browser
			version that fully supports the property.<br> <br>Note:
			In OS X Lion (on Mac), scrollbars are hidden by default
			and only shown when being used (even though
			"overflow:scroll" is set).
		</p>
		<h2>CSS Syntax</h2>
		<div class="code">overflow:
			visible|hidden|scroll|auto|initial|inherit;</div>
		<h2>Property Values</h2>
		<table class="w3-table-all notranslate">
			<tr>
				<th style="width: 14%">Value</th>
				<th>Description</th>
			</tr>
			<tr>
				<td>visible</td>
				<td>The overflow is not clipped. It renders outside
					the element's box. This is default</td>
			</tr>
			<tr>
				<td>hidden</td>
				<td>The overflow is clipped, and the rest of the
					content&nbsp;will be invisible</td>
			</tr>
			<tr>
				<td>scroll</td>
				<td>The overflow is clipped, but a scroll-bar is
					added to see the rest of the content</td>
			</tr>
			<tr>
				<td>auto</td>
				<td>If overflow is clipped, a scroll-bar should be
					added to see the rest of the content</td>
			</tr>
			<tr>
				<td>initial</td>
				<td>Sets this property to its default value.</td>
			</tr>
			<tr>
				<td>inherit</td>
				<td>Inherits this property from its parent element.</td>
			</tr>
			<tr>
				<td style="text-align: center;" colspan="2"><a
					target="_blank" class="w3-btn btnplayit"
					href="https://www.w3schools.com/cssref/playit.asp?filename=playcss_overflow&preval=initial">Play
						it »</a></td>
			</tr>
		</table>
		<h2 class="bookmark">링크실렉터</h2>
		<p>예로써 설명하겠다. 각 간단한 주석을 참고하라.</p>
		<pre class="code">
&lt;style&gt;
/* unvisited link */
a:link {
    color: green;
}

/* visited link */
a:visited {
    color: green;
}

/* mouse over link */
a:hover {
    color: red;
}

/* selected link */
a:active {
    color: yellow;
} 
&lt;/style&gt;</pre>
		<h1 class="subject">CSS Outline</h1>
		<p>
			The CSS outline properties specify the style, color, and
			width of an outline. <br> <br> An outline is a
			line that is drawn around elements (outside the borders)
			to make the element "stand out". <br> <br>
			However, the outline property is different from the
			border property - The outline is NOT a part of an
			element's dimensions; the element's total width and
			height is not affected by the width of the outline.
		</p>
		<img width="600" src="/studyhtml5/images/outline.png">
		<a href="/studyhtml5/ch04/practice/css_p29.html"
			class="center">프렉티스29</a>
		<h1 class="subject">:not 실렉터</h1>
		<h2>Definition and Usage</h2>
		<p>
			The :not(selector) selector matches every element that is
			NOT the specified element/selector.<br> :not(실렉터)에서
			해당 <i>실렉터</i>만을 제외한 나머지 실렉터에 모두 다 적용하는 걸 말한다.
		</p>
		<div class="code">Version: css3</div>
		<h2>Browser Support</h2>
		<p>The numbers in the table specifies the first
			browser version that fully supports the selector.</p>
		<h2>CSS Syntax</h2>
		<pre class="code">
:not(selector) {
    css declarations;
} </pre>
		<h2>Example</h2>
		<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
p {
    color: #000000;//검은색
}

:not(p) {
    color: #ff0000;//빨간색
}
//즉, p태그가 아닌 모든 태그에 빨간색이라는 색을 입힌다는 것.
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h1&gt;This is a heading&lt;/h1&gt;

&lt;p&gt;This is a paragraph.&lt;/p&gt;
&lt;p&gt;This is another paragraph.&lt;/p&gt;

&lt;div&gt;This is some text in a div element.&lt;/div&gt;

&lt;a href="https://www.w3schools.com" target="_blank"&gt;Link to W3Schools!&lt;/a&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
		<a href="/studyhtml5/ch04/practice/css_p34.html"
			class="center">프렉티스34</a>
		<h1 class="subject">CSS :first-child Selector</h1>
		<h2>Definition and Usage</h2>
		<p>The :first-child selector is used to select the
			specified selector, only if it is the first child of its
			parent.</p>
		<div class='code'>Version: CSS2</div>
		<h2>Browser Support</h2>
		<p>The numbers in the table specifies the first
			browser version that fully supports the selector.</p>
		<p class="imp">Note: For :first-child to work in IE8
			and earlier, a &lt;!DOCTYPE&gt; must be declared.</p>
		<h2>CSS Syntax</h2>
		<pre class="code">
:first-child {
    css declarations;
} </pre>
		<h2>Example</h2>
		<pre class='code'>
p:first-child i {
    background: yellow;
}</pre>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p35.html">프렉티스35</a>
		<pre class='code'>
li:first-child {
    background: yellow;
}</pre>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p36.html">프렉티스36</a>
		<pre class='code'>
ul > :first-child {
    background: yellow;
}</pre>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p37.html">프렉티스37</a>
		<h2 class="bookmark">css 실렉터(selector)모음</h2>

		<table>
			<tbody>
				<tr>
					<th style="width: 20%">Selector</th>
					<th style="width: 20%">Example</th>
					<th style="width: 52%">Example description</th>
					<th>CSS</th>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_class.asp">.<i>class</i></a></td>
					<td class="notranslate">.intro</td>
					<td>Selects all elements with class="intro"</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_id.asp">#<i>id</i></a></td>
					<td class="notranslate">#firstname</td>
					<td>Selects the element with id="firstname"</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_all.asp">*</a></td>
					<td class="notranslate">*</td>
					<td>Selects all elements</td>
					<td>2</td>
				</tr>
				<tr>
					<td><i><a
							href="https://www.w3schools.com/cssref/sel_element.asp">element</a></i></td>
					<td class="notranslate">p</td>
					<td>Selects all &lt;p&gt; elements</td>
					<td>1</td>
				</tr>
				<tr>
					<td><i><a
							href="https://www.w3schools.com/cssref/sel_element_comma.asp">element,element</a></i></td>
					<td class="notranslate">div, p</td>
					<td>Selects all &lt;div&gt; elements and all
						&lt;p&gt; elements</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_element_element.asp"><i>element</i>
							<i>element</i></a></td>
					<td class="notranslate">div p</td>
					<td>Selects all &lt;p&gt; elements inside
						&lt;div&gt; elements</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_element_gt.asp"><i>element</i>&gt;<i>element</i></a></td>
					<td class="notranslate">div &gt; p</td>
					<td>Selects all &lt;p&gt; elements where the
						parent is a &lt;div&gt; element</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_element_pluss.asp"><i>element</i>+<i>element</i></a></td>
					<td class="notranslate">div + p</td>
					<td>Selects all &lt;p&gt; elements that are placed
						immediately after &lt;div&gt; elements</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_gen_sibling.asp"><i>element1</i>~<i>element2</i></a></td>
					<td>p ~ ul</td>
					<td>Selects every &lt;ul&gt; element that are
						preceded by a &lt;p&gt; element</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attribute.asp">[<i>attribute</i>]
					</a></td>
					<td class="notranslate">[target]</td>
					<td>Selects all elements with a target attribute</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attribute_value.asp">[<i>attribute</i>=<i>value</i>]
					</a></td>
					<td class="notranslate">[target=_blank]</td>
					<td>Selects all elements with target="_blank"</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attribute_value_contains.asp">[<i>attribute</i>~=<i>value</i>]
					</a></td>
					<td class="notranslate">[title~=flower]</td>
					<td>Selects all elements with a title attribute
						containing the word "flower"</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attribute_value_lang.asp">[<i>attribute</i>|=<i>value</i>]
					</a></td>
					<td class="notranslate">[lang|=en]</td>
					<td>Selects all elements with a lang attribute
						value starting with "en"</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attr_begin.asp">[<i>attribute</i>^=<i>value</i>]
					</a></td>
					<td>a[href^="https"]</td>
					<td>Selects every &lt;a&gt; element whose href
						attribute value begins with "https"</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attr_end.asp">[<i>attribute</i>$=<i>value</i>]
					</a></td>
					<td>a[href$=".pdf"]</td>
					<td>Selects every &lt;a&gt; element whose href
						attribute value ends with ".pdf"</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_attr_contain.asp">[<i>attribute</i>*=<i>value</i>]
					</a></td>
					<td>a[href*="w3schools"]</td>
					<td>Selects every &lt;a&gt; element whose href
						attribute value contains the substring "w3schools"</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_active.asp">:active</a></td>
					<td class="notranslate">a:active</td>
					<td>Selects the active link</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_after.asp">::after</a></td>
					<td class="notranslate">p::after</td>
					<td>Insert something after the content of each
						&lt;p&gt; element</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_before.asp">::before</a></td>
					<td class="notranslate">p::before</td>
					<td>Insert something before&nbsp;the content of
						each &lt;p&gt; element</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_checked.asp">:checked</a></td>
					<td>input:checked</td>
					<td>Selects every checked &lt;input&gt; element</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_disabled.asp">:disabled</a></td>
					<td>input:disabled</td>
					<td>Selects every disabled &lt;input&gt; element</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_empty.asp">:empty</a></td>
					<td>p:empty</td>
					<td>Selects every &lt;p&gt; element that has no
						children (including text nodes)</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_enabled.asp">:enabled</a></td>
					<td>input:enabled</td>
					<td>Selects every enabled &lt;input&gt; element</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_firstchild.asp">:first-child</a></td>
					<td class="notranslate">p:first-child</td>
					<td>Selects every &lt;p&gt; element that is the
						first child of its parent</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_firstletter.asp">::first-letter</a></td>
					<td class="notranslate">p::first-letter</td>
					<td>Selects the first letter of every &lt;p&gt;
						element</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_firstline.asp">::first-line</a></td>
					<td class="notranslate">p::first-line</td>
					<td>Selects the first line of every &lt;p&gt;
						element</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_first-of-type.asp">:first-of-type</a></td>
					<td>p:first-of-type</td>
					<td>Selects every &lt;p&gt; element that is the
						first &lt;p&gt; element of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_focus.asp">:focus</a></td>
					<td class="notranslate">input:focus</td>
					<td>Selects the input element which has focus</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_hover.asp">:hover</a></td>
					<td class="notranslate">a:hover</td>
					<td>Selects links on mouse over</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_in-range.asp">:in-range</a></td>
					<td class="notranslate">input:in-range</td>
					<td>Selects input elements with a value within a
						specified range</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_invalid.asp">:invalid</a></td>
					<td class="notranslate">input:invalid</td>
					<td>Selects all input elements with an invalid
						value</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_lang.asp">:lang(<i>language</i>)
					</a></td>
					<td class="notranslate">p:lang(it)</td>
					<td>Selects every &lt;p&gt; element with a lang
						attribute equal to "it" (Italian)</td>
					<td>2</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_last-child.asp">:last-child</a></td>
					<td>p:last-child</td>
					<td>Selects every &lt;p&gt; element that is the
						last child of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_last-of-type.asp">:last-of-type</a></td>
					<td>p:last-of-type</td>
					<td>Selects every &lt;p&gt; element that is the
						last &lt;p&gt; element of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_link.asp">:link</a></td>
					<td class="notranslate">a:link</td>
					<td>Selects all unvisited links</td>
					<td>1</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_not.asp">:not(<i>selector</i>)
					</a></td>
					<td>:not(p)</td>
					<td>Selects every element that is not a &lt;p&gt;
						element</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_nth-child.asp">:nth-child(<i>n</i>)
					</a></td>
					<td>p:nth-child(2)</td>
					<td>Selects every &lt;p&gt; element that is the
						second child of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_nth-last-child.asp">:nth-last-child(<i>n</i>)
					</a></td>
					<td>p:nth-last-child(2)</td>
					<td>Selects every &lt;p&gt; element that is the
						second child of its parent, counting from the last
						child</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_nth-last-of-type.asp">:nth-last-of-type(<i>n</i>)
					</a></td>
					<td>p:nth-last-of-type(2)</td>
					<td>Selects every &lt;p&gt; element that is the
						second &lt;p&gt; element of its parent, counting from
						the last child</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_nth-of-type.asp">:nth-of-type(<i>n</i>)
					</a></td>
					<td>p:nth-of-type(2)</td>
					<td>Selects every &lt;p&gt; element that is the
						second &lt;p&gt; element of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_only-of-type.asp">:only-of-type</a></td>
					<td>p:only-of-type</td>
					<td>Selects every &lt;p&gt; element that is the
						only &lt;p&gt; element of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_only-child.asp">:only-child</a></td>
					<td>p:only-child</td>
					<td>Selects every &lt;p&gt; element that is the
						only child of its parent</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_optional.asp">:optional</a></td>
					<td class="notranslate">input:optional</td>
					<td>Selects input elements with no "required"
						attribute</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_out-of-range.asp">:out-of-range</a></td>
					<td class="notranslate">input:out-of-range</td>
					<td>Selects input elements with a value outside a
						specified range</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_read-only.asp">:read-only</a></td>
					<td class="notranslate">input:read-only</td>
					<td>Selects input elements with the "readonly"
						attribute specified</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_read-write.asp">:read-write</a></td>
					<td class="notranslate">input:read-write</td>
					<td>Selects input elements with the "readonly"
						attribute NOT specified</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_required.asp">:required</a></td>
					<td class="notranslate">input:required</td>
					<td>Selects input elements with the "required"
						attribute specified</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_root.asp">:root</a></td>
					<td>:root</td>
					<td>Selects the document's root element</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_selection.asp">::selection</a></td>
					<td>::selection</td>
					<td>Selects the portion of an element that is
						selected by a user</td>
					<td>&nbsp;</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_target.asp">:target</a></td>
					<td>#news:target</td>
					<td>Selects the current active #news element
						(clicked on a URL containing that anchor name)</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_valid.asp">:valid</a></td>
					<td class="notranslate">input:valid</td>
					<td>Selects all input elements with a valid value</td>
					<td>3</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/sel_visited.asp">:visited</a></td>
					<td class="notranslate">a:visited</td>
					<td>Selects all visited links</td>
					<td>1</td>
				</tr>
			</tbody>
		</table>
		<p class = "bookmark">
		</
		<p>
			여기서 중요하게 봐야 할 게 <span class="imp">element element</span>
			즉 예를 들어보자면<span class="code">div p</span>이라고 할 수 있는데, 의미는
			<span class="imp">div안에 있는 p를 선택하겠다는 의미</span>이다. 이 셀렉터를
			잘 이해하지 못하고 종종 클래스 셀렉터 사용시, 완전 다르게 생각하여 논리적 오류가 발생한다.<br>그리고
			또한 이 셀렉터 파트에서 클래스를 사용한 예를 보여주지 않았기에 정확히 이해하고 넘어가기에 무리가
			있다고 본다. 따라서 지금부터 이 파트를 간단하게 정리하겠다.
		</p>
		<pre class="code">
		.class1.class2    -   ①
		
		.class1 .class2   -   ②
		</pre>
		<p>
			1번과 2번의 차이점이 무엇일까? <br> 1번은 <span class="imp">단일
				항목을 셀렉터</span> 하는 것을 말한다. 즉, <span class="code">&lt;p
				class ="class1 class2"&gt;</span>가 셀렉트 된다는 의미이다. <img
				alt="class 단일항목에 대한 설명"
				src="/studyhtml5/images/class_1.png">
		</p>
		<p>
			2번은 <span class="imp">내부 항목을 셀렉터</span> 하는 것을 말한다. 다시
			말해서, <span class="imp">class1안에 있는 class2를 셀렉터</span>하겠다는
			의미이다.<br>즉, <span class="code">&lt;div class
				="class1"&gt;<b>&lt;p class = "class2"&gt;</b>
			</span> 여기서 후자가 선택된다는 의미이다.
		</p>
		<img alt="class 내부항목에 대한 설명"
			src="/studyhtml5/images/class_2.png"> <br> <br>
		<p>
			문제는 1번과 2번을 헷갈린다는 것이다. 그러니까 다시 말해서 <span class="code">.class1.class2</span>와
			<span class="code">.class1 .class2</span>이 두가지 코드의 차이점이라곤
			띄어쓰기 밖에 없는데 비해 매우 다른 항목을 셀렉트 한다는 것이다. <br> <br>따라서
			이러한 형식의 셀렉트는 잘 사용하지 않는듯 하다. 하지만 확실히 알고가야지만 문제를 피할 수 있다.
		</p>

		<h1 class="subject">CSS Counters</h1>
		<p>CSS counters are "variables" maintained by CSS
			whose values can be incremented by CSS rules (to track
			how many times they are used). Counters let you adjust
			the appearance of content based on its placement in the
			document.</p>
		<h2>Automatic Numbering With Counters</h2>
		<p>
			CSS counters are like "variables". The variable values
			can be incremented by CSS rules (which will track how
			many times they are used). <br> <br> To work
			with CSS counters we will use the following properties:
		</p>
		<ul>
			<li><span class="imp">counter-reset</span> - Creates
				or resets a counter</li>
			<li><span class="imp">counter-increment</span> -
				Increments a counter value</li>
			<li><span class="imp">content</span> - Inserts
				generated content</li>
			<li><span class="imp">counter() or counters()
					function</span> - Adds the value of a counter to an element</li>
		</ul>
		<p>
			To use a CSS counter, it must first be created with <span
				class="imp">counter-reset</span>.
		</p>
		<p>The following example creates a counter for the
			page (in the body selector), then increments the counter
			value for each &lt;h2&gt; element and adds "Section
			&lt;value of the counter&gt;:" to the beginning of each
			&lt;h2&gt; element:</p>
		<pre class="code">
body {
    counter-reset: section;
}

h2::before {
    counter-increment: section;
    content: "Section " counter(section) ": ";
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p38.html"
			class="center">프렉티스 38</a>
		<h2>Nesting Counters</h2>
		<p>The following example creates one counter for the
			page (section) and one counter for each &lt;h1&gt;
			element (subsection). The "section" counter will be
			counted for each &lt;h1&gt; element with "Section
			&lt;value of the section counter&gt;.", and the
			"subsection" counter will be counted for each &lt;h2&gt;
			element with "&lt;value of the section
			counter&gt;.&lt;value of the subsection counter&gt;":</p>
		<pre class="code">
body {
    counter-reset: section;
}

h1 {
    counter-reset: subsection;
}

h1::before {
    counter-increment: section;
    content: "Section " counter(section) ". ";
}

h2::before {
    counter-increment: subsection;
    content: counter(section) "." counter(subsection) " ";
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p39.html"
			class="center">프렉티스 39</a>
		<p>
			A counter can also be useful to make outlined lists
			because a new instance of a counter is automatically
			created in child elements. Here we use the <span
				class="imp">counters()</span> function to insert a
			string between different levels of nested counters:
		</p>
		<pre class='code'>
ol {
    counter-reset: section;
    list-style-type: none;
}

li::before {
    counter-increment: section;
    content: counters(section,".") " ";
}</pre>
		<a class="center"
			href="/studyhtml5/ch04/practice/css_p40.html">프렉티스 40</a>
		<h2>CSS Counter Properties</h2>
		<table>
			<tbody>
				<tr>
					<th style="width: 20%">Property</th>
					<th>Description</th>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/pr_gen_content.asp">content</a></td>
					<td>Used with the ::before and ::after
						pseudo-elements, to insert generated content</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/pr_gen_counter-increment.asp">counter-increment</a></td>
					<td>Increments one or more counter values</td>
				</tr>
				<tr>
					<td><a
						href="https://www.w3schools.com/cssref/pr_gen_counter-reset.asp">counter-reset</a></td>
					<td>Creates or resets one or more counters</td>
				</tr>
			</tbody>
		</table>
		<h1 class="subject">CSS content Property</h1>
		<pre class='code'>
a:after {
    content: " (" attr(href) ")";
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p41.html"
			class='center'>프렉티스41</a>
		<h2>Definition and Usage</h2>
		<p>The content property is used with the :before and
			:after pseudo-elements, to insert generated content.</p>
		<table>
			<tbody>
				<tr>
					<th style="width: 25%">Default value:</th>
					<td>normal</td>
				</tr>
				<tr>
					<th>Inherited:</th>
					<td>no</td>
				</tr>
				<tr>
					<th>Animatable:</th>
					<td>no. <a
						href="https://www.w3schools.com/cssref/css_animatable.asp">Read
							about <em>animatable</em>
					</a>
					</td>
				</tr>
				<tr>
					<th>Version:</th>
					<td>CSS2</td>
				</tr>
				<tr>
					<th>JavaScript syntax:</th>
					<td>You can't give an element a pseudo-class by
						using JavaScript,<br>but there are other ways to
						get the same result: <a target="_blank"
						class="w3-btn btnsmall"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_js_content">Try
							it</a>
					</td>
				</tr>
			</tbody>
		</table>
		<h2>Browser Support</h2>
		<p>The numbers in the table specify the first browser
			version that fully supports the property.</p>
		<p>Note: IE8 only supports the content property if a
			!DOCTYPE is specified.</p>
		<h2>CSS Syntax</h2>
		<div class="code">content:
			normal|none|counter|attr|string|open-quote|close-quote|no-open-quote|no-close-quote|url|initial|inherit;</div>
		<h2>Property Values</h2>
		<table class="w3-table-all notranslate">
			<tbody>
				<tr>
					<th style="width: 110px;">Value</th>
					<th>Description</th>
					<th>Example</th>
				</tr>
				<tr>
					<td>normal</td>
					<td>Default value. Sets the content, if specified,
						to normal, which default is "none" (which is nothing)</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_normal">Try
							it »</a></td>
				</tr>
				<tr>
					<td>none</td>
					<td>Sets the content, if specified, to nothing</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_none">Try
							it »</a></td>
				</tr>
				<tr>
					<td>counter</td>
					<td>Sets the content as a counter</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_counter">Try
							it »</a></td>
				</tr>
				<tr>
					<td>attr<i>(attribute)</i></td>
					<td>Sets the content as one of the selector's
						attribute</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_attr">Try
							it »</a></td>
				</tr>
				<tr>
					<td><i>string</i></td>
					<td>Sets the content to the text you specify</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_string">Try
							it »</a></td>
				</tr>
				<tr>
					<td>open-quote</td>
					<td>Sets the content to be an opening quote</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_quote">Try
							it »</a></td>
				</tr>
				<tr>
					<td>close-quote</td>
					<td>Sets the content to be a closing quote</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_quote">Try
							it »</a></td>
				</tr>
				<tr>
					<td>no-open-quote</td>
					<td>Removes the opening quote from the content, if
						specified</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_noquote">Try
							it »</a></td>
				</tr>
				<tr>
					<td>no-close-quote</td>
					<td>Removes the closing quote from the content, if
						specified</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_noquote">Try
							it »</a></td>
				</tr>
				<tr>
					<td>url(<i>url</i>)
					</td>
					<td>Sets the content to be some kind of media (an
						image, a sound, a video, etc.)</td>
					<td><a target="_blank" class="w3-btn"
						style="padding-top: 0px; padding-bottom: 1px"
						href="https://www.w3schools.com/cssref/tryit.asp?filename=trycss_content_url">Try
							it »</a></td>
				</tr>
				<tr>
					<td>initial</td>
					<td>Sets this property to its default value. <a
						href="https://www.w3schools.com/cssref/css_initial.asp">Read
							about <em>initial</em>
					</a></td>
					<td></td>
				</tr>
				<tr>
					<td>inherit</td>
					<td>Inherits this property from its parent
						element. <a
						href="https://www.w3schools.com/cssref/css_inherit.asp">Read
							about <em>inherit</em>
					</a>
					</td>
					<td></td>
				</tr>
			</tbody>
		</table>
		<h2>More Examples</h2>
		<p>How to add bullet colors for &lt;ul&gt; or
			&lt;ol&gt; by removing their default bullets and adding a
			HTML entity that looks like bullets (&bull;):</p>
		<pre class="code">
ul {
    list-style: none; /* Remove list bullets */
    padding: 0;
    margin: 0;
}

li {
    padding-left: 16px;
}

li:before {
    content: "•"; /* Insert content that looks like bullets */
    padding-right: 8px;
    color: blue; /* Or a color you prefer */
}</pre>
		<a href="/studyhtml5/ch04/practice/css_p42.html"
			class="center">프렉티스42</a>
	</div>




	<div class="fixed">
		<a href="#index_subject">위로</a>
	</div>
</body>
</html>