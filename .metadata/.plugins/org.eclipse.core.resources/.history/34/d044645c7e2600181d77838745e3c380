<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport"
	content="width=device-width,initial-scale = 1.0" />
<link rel="stylesheet" href="/studyhtml5/ch05/style.css">
<script src="/studyhtml5/js/jquery-3.1.1.min.js"></script>
<script src="/studyhtml5/ch05/jquery_index.js"></script>
<title>자바스크립트_DOM</title>
</head>
<body>
	<header>JAVASCRIPT HTML DOM</header>
	<section>
		<article>
			<!-- <p id = "test"></p> -->
			<h1 id="index_subject">목차</h1>
			<div id="list"></div>
			<h1 id="bookmark_subject">부록</h1>
			<div id="bookmark_list"></div>
			<p class="subject_fix" id="subject_line"></p>
			<h1 class="subject">이 페이지는 뭐냐?</h1>
			<p>자바스크립트의 DOM에 대한 내용만 정리할 것이다. 이제 자바스크립트의 꽃이라고 할 수
				있다.</p>
			<h1 class="subject">JavaScript HTML DOM</h1>
			<p>With the HTML DOM, JavaScript can access and
				change all the elements of an HTML document.</p>
			<h1>The HTML DOM (Document Object Model)</h1>
			<p>
				When a web page is loaded, the browser creates a
				Document Object Model of the page. <br> <br>
				The HTML DOM model is constructed as a tree of Objects:
			</p>
			<h2>The HTML DOM Tree of Objects</h2>
			<img alt="Dom_tree" src="/studyhtml5/images/dom_tree.gif">
			<p>With the object model, JavaScript gets all the
				power it needs to create dynamic HTML:</p>
			<ul>
				<li>JavaScript can change all the HTML elements in
					the page</li>
				<li>JavaScript can change all the HTML attributes
					in the page</li>
				<li>JavaScript can change all the CSS styles in the
					page</li>
				<li>JavaScript can remove existing HTML elements
					and attributes</li>
				<li>JavaScript can add new HTML elements and
					attributes</li>
				<li>JavaScript can react to all existing HTML
					events in the page</li>
				<li>JavaScript can create new HTML events in the
					page</li>
			</ul>
			<h1>What You Will Learn</h1>
			<p>In the next chapters of this tutorial you will
				learn:</p>
			<ul>
				<li>How to change the content of HTML elements</li>
				<li>How to change the style (CSS) of HTML elements
				</li>
				<li>How to react to HTML DOM events</li>
				<li>How to add and delete HTML elements</li>
			</ul>

			<h1>What is the DOM?</h1>
			<p>
				The DOM is a W3C (World Wide Web Consortium) standard. <br>
				<br> The DOM defines a standard for accessing
				documents: <br> <br> "The W3C Document Object
				Model (DOM) is a platform and language-neutral interface
				that allows programs and scripts to dynamically access
				and update the content, structure, and style of a
				document." <br> <br> The W3C DOM standard is
				separated into 3 different parts:
			</p>
			<ul>
				<li>Core DOM - standard model for all document
					types</li>
				<li>XML DOM - standard model for XML documents</li>
				<li>HTML DOM - standard model for HTML documents</li>
			</ul>
			<h1>What is the HTML DOM?</h1>
			<p>The HTML DOM is a standard object model and
				programming interface for HTML. It defines:</p>
			<ul>
				<li>The HTML elements as objects</li>
				<li>The properties of all HTML elements</li>
				<li>The methods to access all HTML elements</li>
				<li>The events for all HTML elements</li>
			</ul>
			<p>In other words: The HTML DOM is a standard for how
				to get, change, add, or delete HTML elements.</p>
			<h1 class="subject">JavaScript - HTML DOM Methods</h1>
			<p>
				HTML DOM methods are actions you can perform (on HTML
				Elements). <br> <br> HTML DOM properties are
				values (of HTML Elements) that you can set or change.
			</p>
			<h1>The DOM Programming Interface</h1>
			<p>
				The HTML DOM can be accessed with JavaScript (and with
				other programming languages). <br> <br> In the
				DOM, all HTML elements are defined as <span class="code">objects.</span>
				<br> <br> The programming interface is the
				properties and methods of each object. <br> <br>
				A <span class="code">property</span> is a value that you
				can get or set (like changing the content of an HTML
				element). <br> <br> A <span class="code">method</span>
				is an action you can do (like add or deleting an HTML
				element).
			</p>
			<h2>Example</h2>
			<p>The following example changes the content (the
				innerHTML) of the &lt;p&gt; element with id="demo":</p>
			<pre class="code">
&lt;html&gt;
&lt;body&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML = "Hello World!";
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<p class="center">이건 씨발 너무 많이 해서 프렉티스로 안친다.</p>

			<p>
				In the example above, getElementById is a <span
					class="code">method</span>, while innerHTML is a <span
					class="code">property</span>.
			</p>
			<h1>The getElementById Method</h1>

			<p>
				The most common way to access an HTML element is to use
				the id of the element. <br> <br> In the
				example above the getElementById method used id="demo"
				to find the element.
			</p>
			<h1>The innerHTML Property</h1>
			<p>
				The easiest way to get the content of an element is by
				using the innerHTML property. <br> <br> The
				innerHTML property is useful for getting or replacing
				the content of HTML elements.
			</p>
			<p class="imp">The innerHTML property can be used to
				get or change any HTML element, including &lt;html&gt;
				and &lt;body&gt;.</p>
			<h1 class="subject">JavaScript HTML DOM Document</h1>
			<p>The HTML DOM document object is the owner of all
				other objects in your web page.</p>
			<h1>The HTML DOM Document Object</h1>
			<p>
				The document object represents your web page. <br>
				<br> If you want to access any element in an HTML
				page, you always start with accessing the document
				object. <br> <br> Below are some examples of
				how you can use the document object to access and
				manipulate HTML.
			</p>
			<h1>Finding HTML Elements</h1>

			<table>
				<tbody>
					<tr>
						<th style="width: 50%">Method</th>
						<th>Description</th>
					</tr>
					<tr>
						<td>document.getElementById(<em>id</em>)
						</td>
						<td>Find an element by element id</td>
					</tr>
					<tr>
						<td>document.getElementsByTagName(<em>name</em>)
						</td>
						<td>Find elements by tag name</td>
					</tr>
					<tr>
						<td>document.getElementsByClassName(<em>name</em>)
						</td>
						<td>Find elements by class name</td>
					</tr>
				</tbody>
			</table>
			<h1>Changing HTML Elements</h1>
			<table>
				<tbody>
					<tr>
						<th style="width: 50%">Method</th>
						<th>Description</th>
					</tr>
					<tr>
						<td><em>element</em>.innerHTML =&nbsp; <em>new
								html content</em></td>
						<td>Change the inner HTML of an element</td>
					</tr>
					<tr>
						<td><em>element</em>.<em>attribute = new
								value</em></td>
						<td>Change the attribute value of an HTML element</td>
					</tr>
					<tr>
						<td><em>element</em>.setAttribute<em>(attribute,
								value)</em></td>
						<td>Change the attribute value of an HTML element</td>
					</tr>
					<tr>
						<td><em>element</em>.style.<em>property =
								new style</em></td>
						<td>Change the style of an HTML element</td>
					</tr>
				</tbody>
			</table>
			<h1>Adding and Deleting Elements</h1>
			<table>
				<tbody>
					<tr>
						<th style="width: 50%">Method</th>
						<th>Description</th>
					</tr>
					<tr>
						<td>document.createElement(<em>element</em>)
						</td>
						<td>Create an HTML element</td>
					</tr>
					<tr>
						<td>document.removeChild(<em>element</em>)
						</td>
						<td>Remove an HTML element</td>
					</tr>
					<tr>
						<td>document.appendChild(<em>element</em>)
						</td>
						<td>Add an HTML element</td>
					</tr>
					<tr>
						<td>document.replaceChild(<em>element</em>)
						</td>
						<td>Replace an HTML element</td>
					</tr>
					<tr>
						<td>document.write(<em>text</em>)
						</td>
						<td>Write into the HTML output stream</td>
					</tr>
				</tbody>
			</table>
			<h1>Adding Events Handlers</h1>
			<table>
				<tbody>
					<tr>
						<th style="width: 50%">Method</th>
						<th>Description</th>
					</tr>
					<tr>
						<td>document.getElementById(<em>id</em>).onclick
							= function(){<em>code</em>}
						</td>
						<td>Adding event handler code to an onclick event</td>
					</tr>
				</tbody>
			</table>
			<h1>Finding HTML Objects</h1>
			<p>
				The first HTML DOM Level 1 (1998), defined 11 HTML
				objects, object collections, and properties. These are
				still valid in HTML5. <br> <br> Later, in HTML
				DOM Level 3, more objects, collections, and properties
				were added.
			</p>
			<table>
				<tbody>
					<tr>
						<th>Property</th>
						<th>Description</th>
						<th>DOM</th>
					</tr>
					<tr>
						<td>document.anchors</td>
						<td>Returns all &lt;a&gt; elements that have a
							name attribute</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.applets</td>
						<td>Returns all &lt;applet&gt; elements <span
							class="imp">(Deprecated in HTML5)</span></td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.baseURI</td>
						<td>Returns the absolute base URI of the document</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.body</td>
						<td>Returns the &lt;body&gt; element</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.cookie</td>
						<td>Returns the document's cookie</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.doctype</td>
						<td>Returns the document's doctype</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.documentElement</td>
						<td>Returns the &lt;html&gt; element</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.documentMode</td>
						<td>Returns the mode used by the browser</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.documentURI</td>
						<td>Returns the URI of the document</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.domain</td>
						<td>Returns the domain name of the document
							server</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.domConfig</td>
						<td><span class="imp">Obsolete.</span> Returns
							the DOM configuration</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.embeds</td>
						<td>Returns all &lt;embed&gt; elements</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.forms</td>
						<td>Returns all &lt;form&gt; elements</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.head</td>
						<td>Returns the &lt;head&gt; element</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.images</td>
						<td>Returns all &lt;img&gt; elements</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.implementation</td>
						<td>Returns the DOM implementation</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.inputEncoding</td>
						<td>Returns the document's encoding (character
							set)</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.lastModified</td>
						<td>Returns the date and time the document was
							updated</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.links</td>
						<td>Returns all &lt;area&gt; and &lt;a&gt;
							elements that have a href attribute</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.readyState</td>
						<td>Returns the (loading) status of the document</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.referrer</td>
						<td>Returns the URI of the referrer (the linking
							document)</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.scripts</td>
						<td>Returns all &lt;script&gt; elements</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.strictErrorChecking</td>
						<td>Returns if error checking is enforced</td>
						<td>3</td>
					</tr>
					<tr>
						<td>document.title</td>
						<td>Returns the &lt;title&gt; element</td>
						<td>1</td>
					</tr>
					<tr>
						<td>document.URL</td>
						<td>Returns the complete URL of the document</td>
						<td>1</td>
					</tr>
				</tbody>
			</table>
			<h1 class="subject">JavaScript HTML DOM Elements</h1>
			<p>This page teaches you how to find and access HTML
				elements in an HTML page.</p>
			<h1>Finding HTML Elements</h1>
			<p>
				Often, with JavaScript, you want to manipulate HTML
				elements. <br> <br> To do so, you have to find
				the elements first. There are a couple of ways to do
				this:
			</p>
			<ul>
				<li>Finding HTML elements by id</li>
				<li>Finding HTML elements by tag name</li>
				<li>Finding HTML elements by class name</li>
				<li>Finding HTML elements by CSS selectors</li>
				<li>Finding HTML elements by HTML object
					collections</li>
			</ul>
			<h1>Finding HTML Element by Id</h1>
			<p>
				The easiest way to find an HTML element in the DOM, is
				by using the element id. <br> <br> This
				example finds the element with id="intro":
			</p>
			<pre class='code'>
&lt;p id="intro"&gt;Hello World!&lt;/p&gt;

&lt;p&gt;This example demonstrates the &lt;b&gt;getElementById&lt;/b&gt; method!&lt;/p&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
var myElement = document.getElementById("intro");
document.getElementById("demo").innerHTML = 
"The text from the intro paragraph is " + myElement.innerHTML;
&lt;/script&gt;
</pre>


			<a href="/studyhtml5/ch05/practice_dom/practice_01.html"
				class="center">프렉티스 01</a>
			<p>
				If the element is found, the method will return the
				element as an object (in myElement). <br> <br>
				If the element is not found, myElement will contain
				null.
			</p>
			<h1>Finding HTML Elements by Tag Name</h1>
			<p>This example finds all &lt;p&gt; elements:</p>
			<pre class="code">
&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p&gt;The DOM is very useful.&lt;/p&gt;
&lt;p&gt;This example demonstrates the &lt;b&gt;getElementsByTagName&lt;/b&gt; method&lt;/p&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
var x = document.getElementsByTagName("p");
document.getElementById("demo").innerHTML = 
'The first paragraph (index 0) is: ' + x[0].innerHTML;
&lt;/script&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_02.html"
				class='center'>프렉티스 02</a>
			<p>This example finds the element with id="main", and
				then finds all &lt;p&gt; elements inside "main":</p>
			<pre class="code">
&lt;p&gt;Hello World!&lt;/p&gt;

&lt;div id="main"&gt;
&lt;p&gt;The DOM is very useful.&lt;/p&gt;
&lt;p&gt;This example demonstrates the &lt;b&gt;getElementsByTagName&lt;/b&gt; method&lt;/p&gt;
&lt;/div&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
var x = document.getElementById("main");
var y = x.getElementsByTagName("p");
document.getElementById("demo").innerHTML = 
'The first paragraph (index 0) inside "main" is: ' + y[0].innerHTML;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_03.html"
				class="center">프렉티스 03</a>
			<h1>Finding HTML Elements by Class Name</h1>
			<p>
				If you want to find all HTML elements with the same
				class name, use getElementsByClassName(). <br> <br>
				This example returns a list of all elements with
				class="intro".
			</p>
			<pre class="code">
&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p class="intro"&gt;The DOM is very useful.&lt;/p&gt;
&lt;p class="intro"&gt;This example demonstrates the &lt;b&gt;getElementsByClassName&lt;/b&gt; method.&lt;/p&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
var x = document.getElementsByClassName("intro");
document.getElementById("demo").innerHTML = 
'The first paragraph (index 0) with class="intro": ' + x[0].innerHTML;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_04.html"
				class="center">프렉티스04</a>
			<p class="imp">Finding elements by class name does
				not work in Internet Explorer 8 and earlier versions.</p>
			<h1>Finding HTML Elements by CSS Selectors</h1>
			<p>
				If you want to find all HTML elements that matches a
				specified CSS selector (id, class names, types,
				attributes, values of attributes, etc), use the
				querySelectorAll() method. <br> <br> This
				example returns a list of all &lt;p&gt; elements with
				class="intro".
			</p>
			<pre class="code">&lt;p&gt;Hello World!&lt;/p&gt;

&lt;p class="intro"&gt;The DOM is very useful.&lt;/p&gt;
&lt;p class="intro"&gt;This example demonstrates the &lt;b&gt;querySelectorAll&lt;/b&gt; method.&lt;/p&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
var x = document.querySelectorAll("p.intro");
document.getElementById("demo").innerHTML = 
'The first paragraph (index 0) with class="intro": ' + x[0].innerHTML;
&lt;/script&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_05.html"
				class="center">프렉티스 05</a>
			<p class="imp">The querySelectorAll() method does not
				work in Internet Explorer 8 and earlier versions.</p>
			<h1>Finding HTML Elements by HTML Object Collections</h1>
			<p>This example finds the form element with
				id="frm1", in the forms collection, and displays all
				element values:</p>

			<pre class="code">
&lt;form id="frm1" action="/action_page.php"&gt;
  First name: &lt;input type="text" name="fname" value="Donald"&gt;&lt;br&gt;
  Last name: &lt;input type="text" name="lname" value="Duck"&gt;&lt;br&gt;&lt;br&gt;
  &lt;input type="submit" value="Submit"&gt;
&lt;/form&gt; 

&lt;p&gt;Click "Try it" to display the value of each element in the form.&lt;/p&gt;

&lt;button onclick="myFunction()"&gt;Try it&lt;/button&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
function myFunction() {
    var x = document.forms["frm1"];
    var text = "";
    var i;
    for (i = 0; i &lt; x.length ;i++) {
        text += x.elements[i].value + "&lt;br&gt;";
    }
    document.getElementById("demo").innerHTML = text;
}
&lt;/script&gt;</pre>
			<a href='/studyhtml5/ch05/practice_dom/practice_06.html'
				class="center">프렉티스 06</a>
			<p>The following HTML objects (and object
				collections) are also accessible:</p>

			<h1 class="subject sub">document.anchors</h1>
			<pre class="code">
&lt;a name="html"&gt;HTML Tutorial&lt;/a&gt;&lt;br&gt;
&lt;a name="css"&gt;CSS Tutorial&lt;/a&gt;&lt;br&gt;
&lt;a name="xml"&gt;XML Tutorial&lt;/a&gt;&lt;br&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"Number of anchors are: " + document.anchors.length;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_07.html"
				class="center">프렉티스 07</a>

			<h1 class="subject sub">document.body</h1>
			<pre class='code'>
&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
alert(document.body.innerHTML);
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_08.html"
				class="center">프렉티스 08</a>
			<h1 class="subject sub">document.documentElement</h1>
			<pre class="code">
&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
alert(document.documentElement.innerHTML);
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_09.html"
				class="center">프렉티스 09</a>

			<h1 class="subject sub">document.embeds</h1>
			<pre class="code">
&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"Number of embeds: " + document.embeds.length;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_10.html"
				class="center">프렉티스 10</a>
			<h1 class="subject sub">document.forms</h1>
			<pre class="code">
&lt;form action=""&gt;
First name: &lt;input type="text" name="fname" value="Donald"&gt;
&lt;input type="submit" value="Submit"&gt;
&lt;/form&gt; 

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"Number of forms: " + document.forms.length;
&lt;/script&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_11.html"
				class="center">프렉티스 11</a>
			<h1 class="subject sub">document.head</h1>
			<pre class="code">
&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
document.head;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_12.html"
				class="center">프렉티스 12</a>
			<h1 class="subject sub">document.images</h1>

			<pre class="code">
&lt;img src="pic_htmltree.gif"&gt;
&lt;img src="pic_navigate.gif"&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"Number of images: " + document.images.length;
&lt;/script&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_13.html"
				class="center">프렉티스 13</a>
			<h1 class="subject sub">document.links</h1>
			<pre class="code">
&lt;p&gt;
&lt;a href="/html/default.asp"&gt;HTML&lt;/a&gt;
&lt;br&gt;
&lt;a href="/css/default.asp"&gt;CSS&lt;/a&gt;
&lt;/p&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"Number of links: " + document.links.length;
&lt;/script&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_14.html"
				class="center">프렉티스 14</a>


			<h1 class="subject sub">document.scripts</h1>
			<pre class="code">
&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"Number of scripts: " + document.scripts.length;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_15.html"
				class="center">프렉티스 15</a>

			<h1 class="subject sub">document.title</h1>
			<pre class="code">
&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("demo").innerHTML =
"The title of this document is: " + document.title;
&lt;/script&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_16.html"
				class='center'>프렉티스 16</a>

			<h1 class="subject">JavaScript HTML DOM - Changing
				HTML</h1>
			<p>The HTML DOM allows JavaScript to change the
				content of HTML elements.</p>
			<h1>Changing the HTML Output Stream</h1>
			<p>JavaScript can create dynamic HTML content:</p>
			<p>In JavaScript, document.write() can be used to
				write directly to the HTML output stream:</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;script&gt;
document.write(Date());
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_17.html"
				class="center">프렉티스 17</a>
			<p class="imp">Never use document.write() after the
				document is loaded. It will overwrite the document.</p>




			<h1>Changing HTML Content</h1>
			<p>
				The easiest way to modify the content of an HTML element
				is by using the <b>innerHTML</b> property. <br> <br>
				To change the content of an HTML element, use this
				syntax:
			</p>
			<pre class="code">
document.getElementById(id).innerHTML = new HTML</pre>
			<p>This example changes the content of a &lt;p&gt;
				element:</p>

			<pre class="code">
&lt;html&gt;
&lt;body&gt;

&lt;p id="p1"&gt;Hello World!&lt;/p&gt;

&lt;script&gt;
document.getElementById("p1").innerHTML = "New text!";
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_18.html"
				class="center">프렉티스 18</a>
			<p>Example explained:</p>
			<ul>
				<li>The HTML document above contains a
					&lt;p&gt;element with id="p1"</li>
				<li>We use the HTML DOM to get the element with
					id="p1"</li>
				<li>A JavaScript changes the content (innerHTML) of
					that element to "New text!"</li>
			</ul>
			<p>This example changes the content of an &lt;h1&gt;
				element:</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;h1 id="id01"&gt;Old Heading&lt;/h1&gt;

&lt;script&gt;
var element = document.getElementById("id01");
element.innerHTML = "New Heading";
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_19.html"
				class="center">프렉티스 19</a>
			<p>Example explained:</p>
			<ul>
				<li>The HTML document above contains an &lt;h1&gt;
					element with id="id01"</li>
				<li>We use the HTML DOM to get the element with
					id="id01"</li>
				<li>A JavaScript changes the content (innerHTML) of
					that element to "New Heading"</li>
			</ul>

			<h1>Changing the Value of an Attribute</h1>
			<p>To change the value of an HTML attribute, use this
				syntax:</p>
			<pre class="code">
document.getElementById(id).attribute = new value</pre>
			<p>This example changes the value of the src
				attribute of an &lt;img&gt; element:</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;img id="myImage" src="smiley.gif"&gt;

&lt;script&gt;
document.getElementById("myImage").src = "landscape.jpg";
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_20.html"
				class="center">프렉티스 20</a>

			<p>Example explained:</p>

			<ul>
				<li>The HTML document above contains an &lt;img&gt;
					element with id="myImage"</li>
				<li>We use the HTML DOM to get the element with
					id="myImage"</li>
				<li>A JavaScript changes the src attribute of that
					element from "smiley.gif" to "landscape.jpg"</li>
			</ul>

			<h1 class="subject">JavaScript HTML DOM - Changing
				CSS</h1>
			<p>The HTML DOM allows JavaScript to change the style
				of HTML elements.</p>
			<h1>Changing HTML Style</h1>
			<p>To change the style of an HTML element, use this
				syntax:</p>
			<pre class="code">
document.getElementById(id).style.property = new style</pre>
			<p>The following example changes the style of a
				&lt;p&gt; element:</p>
			<pre class="code">
&lt;html&gt;
&lt;body&gt;

&lt;p id="p2"&gt;Hello World!&lt;/p&gt;

&lt;script&gt;
document.getElementById("p2").style.color = "blue";
&lt;/script&gt;

&lt;p&gt;The paragraph above was changed by a script.&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_21.html"
				class="center">프렉티스 21</a>
			<h1>Using Events</h1>
			<p>
				The HTML DOM allows you to execute code when an event
				occurs. <br> <br> Events are generated by the
				browser when "things happen" to HTML elements:
			</p>
			<ul>
				<li>An element is clicked on</li>
				<li>The page has loaded</li>
				<li>Input fields are changed</li>
			</ul>
			<p>
				You will learn more about events in the next chapter of
				this tutorial. <br> <br> This example changes
				the style of the HTML element with id="id1", when the
				user clicks a button:
			</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;h1 id="id1"&gt;My Heading 1&lt;/h1&gt;

&lt;button type="button"
onclick="document.getElementById('id1').style.color = 'red'"&gt;
Click Me!&lt;/button&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_22.html"
				class="center">프렉티스 22</a>
			<h1>More Examples</h1>
			<p>Visibility How to make an element invisible. Do
				you want to show the element or not?</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;p id="p1"&gt;
This is a text.
This is a text.
This is a text.
This is a text.
&lt;/p&gt;

&lt;input type="button" value="Hide text" onclick="document.getElementById('p1').style.visibility='hidden'"&gt;
&lt;input type="button" value="Show text" onclick="document.getElementById('p1').style.visibility='visible'"&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_23.html"
				class="center">프렉티스 23</a>


			<h1>HTML DOM Style Object Reference</h1>
			<p>
				For all HTML DOM style properties, look at our complete
				<span class="code">HTML DOM Style Object
					Reference.</span><span class="imp">나중에 한다.</span>
			</p>
			<h1 class="subject">JavaScript HTML DOM Animation</h1>
			<p>Learn to create HTML animations using JavaScript.</p>
			<h1>A Basic Web Page</h1>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;h1&gt;My First JavaScript Animation&lt;/h1&gt;

&lt;div id="animation"&gt;My animation will go here&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</pre>
			<h1>Create an Animation Container</h1>
			<p>All animations should be relative to a container
				element.</p>
			<pre class="code">
&lt;div id ="container"&gt;
    &lt;div id ="animate"&gt;My animation will go here&lt;/div&gt;
&lt;/div&gt; </pre>
			<h1>Style the Elements</h1>
			<p>
				The container element should be created with style =
				"position: relative". <br> <br> The animation
				element should be created with style = "position:
				absolute".
			</p>
			<pre class="code">
#container {
    width: 400px;
    height: 400px;
    position: relative;
    background: yellow;
}
#animate {
    width: 50px;
    height: 50px;
    position: absolute;
    background: red;
}</pre>
			<h1>Animation Code</h1>
			<p>
				JavaScript animations are done by programming gradual
				changes in an element's style. <br> <br> The
				changes are called by a timer. When the timer interval
				is small, the animation looks continuous. <br> <br>
				The basic code is:
			</p>
			<pre class="code">
var id = setInterval(frame, 5);

function frame() {
    if (/* test for finished */) {
        clearInterval(id);
    } else {
        /* code to change the element style */ 
    }
}</pre>
			<h1>Create the Animation Using JavaScript</h1>
			<pre class="code">
function myMove() {
    var elem = document.getElementById("animate");
    var pos = 0;
    var id = setInterval(frame, 5);
    function frame() {
        if (pos == 350) {
            clearInterval(id);
        } else {
            pos++;
            elem.style.top = pos + 'px';
            elem.style.left = pos + 'px';
        }
    }
} </pre>



			<h1>ALL code</h1>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;style&gt;
#container {
  width: 400px;
  height: 400px;
  position: relative;
  background: yellow;
}
#animate {
  width: 50px;
  height: 50px;
  position: absolute;
  background-color: red;
}
&lt;/style&gt;
&lt;body&gt;

&lt;p&gt;
&lt;button onclick="myMove()"&gt;Click Me&lt;/button&gt;
&lt;/p&gt; 

&lt;div id ="container"&gt;
&lt;div id ="animate"&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
function myMove() {
  var elem = document.getElementById("animate");   
  var pos = 0;
  var id = setInterval(frame, 5);
  function frame() {
    if (pos == 350) {
      clearInterval(id);
    } else {
      pos++; 
      elem.style.top = pos + 'px'; 
      elem.style.left = pos + 'px'; 
    }
  }
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_24.html"
				class="center">프렉티스 24</a>
			<p class="imp">해당 프렉티스는 한번 더 돌아오게 만들었음을 참조하라.</p>
			<h1 class="subject">JavaScript HTML DOM Events</h1>
			<p>HTML DOM allows JavaScript to react to HTML
				events:</p>
			<h1>Reacting to Events</h1>
			<p>
				A JavaScript can be executed when an event occurs, like
				when a user clicks on an HTML element. <br> <br>
				To execute code when a user clicks on an element, add
				JavaScript code to an HTML event attribute:
			</p>
			<pre class="code">
onclick=JavaScript</pre>
			<p>Examples of HTML events:</p>
			<ul>
				<li>When a user clicks the mouse</li>
				<li>When a web page has loaded</li>
				<li>When an image has been loaded</li>
				<li>When the mouse moves over an element</li>
				<li>When an input field is changed</li>
				<li>When an HTML form is submitted</li>
				<li>When a user strokes a key</li>
			</ul>
			<p>In this example, the content of the &lt;h1&gt;
				element is changed when a user clicks on it:</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;h1 onclick="this.innerHTML = 'Ooops!'"&gt;Click on this text!&lt;/h1&gt;

&lt;/body&gt;
&lt;/html&gt; 
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_25.html"
				class="center">프렉티스 25</a>
			<p>In this example, a function is called from the
				event handler:</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;h1 onclick="changeText(this)"&gt;Click on this text!&lt;/h1&gt;

&lt;script&gt;
function changeText(id) {
    id.innerHTML = "Ooops!";
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; </pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_26.html"
				class="center">프렉티스 26</a>
			<h1>HTML Event Attributes</h1>
			<p>To assign events to HTML elements you can use
				event attributes.</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;p&gt;Click the button to display the date.&lt;/p&gt;

&lt;button onclick="displayDate()"&gt;The time is?&lt;/button&gt;

&lt;script&gt;
function displayDate() {
    document.getElementById("demo").innerHTML = Date();
}
&lt;/script&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt; 
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_27.html"
				class="center">프렉티스27</a>
			<p>In the example above, a function named displayDate
				will be executed when the button is clicked.</p>
			<h1>Assign Events Using the HTML DOM</h1>
			<p>The HTML DOM allows you to assign events to HTML
				elements using JavaScript:</p>
			<pre class="code">
&lt;p&gt;Click "Try it" to execute the displayDate() function.&lt;/p&gt;

&lt;button id="myBtn"&gt;Try it&lt;/button&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
document.getElementById("myBtn").onclick = displayDate;

function displayDate() {
    document.getElementById("demo").innerHTML = Date();
}
&lt;/script&gt;</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_28.html"
				class="center">프렉티스 28</a>
			<p>
				In the example above, a function named displayDate is
				assigned to an HTML element with the id="myBtn". <br>
				<br> The function will be executed when the button
				is clicked.
			</p>

			<h1>The onload and onunload Events</h1>
			<p>
				The onload and onunload events are triggered when the
				user enters or leaves the page. <br> <br> The
				onload event can be used to check the visitor's browser
				type and browser version, and load the proper version of
				the web page based on the information. <br> <br>
				The onload and onunload events can be used to deal with
				cookies.
			</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body onload="checkCookies()"&gt;

&lt;p id="demo"&gt;&lt;/p&gt;

&lt;script&gt;
function checkCookies() {
    var text = "";
    if (navigator.cookieEnabled == true) {
        text = "Cookies are enabled.";
    } else {
        text = "Cookies are not enabled.";
    }
    document.getElementById("demo").innerHTML = text;
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; 
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_29.html"
				class="center">프렉티스 29</a>
			<h1>The onchange Event</h1>
			<p>
				The onchange event is often used in combination with
				validation of input fields. <br> <br> Below is
				an example of how to use the onchange. The upperCase()
				function will be called when a user changes the content
				of an input field.
			</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
function myFunction() {
    var x = document.getElementById("fname");
    x.value = x.value.toUpperCase();
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

Enter your name: &lt;input type="text" id="fname" onchange="myFunction()"&gt;
&lt;p&gt;When you leave the input field, a function is triggered which transforms the input text to upper case.&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_30.html"
				class='center'>프렉티스 30</a>

			<h1>The onmouseover and onmouseout Events</h1>
			<p>The onmouseover and onmouseout events can be used
				to trigger a function when the user mouses over, or out
				of, an HTML element:</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;div onmouseover="mOver(this)" onmouseout="mOut(this)" 
style="background-color:#D94A38;width:120px;height:20px;padding:40px;"&gt;
Mouse Over Me&lt;/div&gt;

&lt;script&gt;
function mOver(obj) {
    obj.innerHTML = "Thank You"
}

function mOut(obj) {
    obj.innerHTML = "Mouse Over Me"
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; 
				</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_31.html"
				class="center">프렉티스 31</a>
			<h1>The onmousedown, onmouseup and onclick Events</h1>
			<p>The onmousedown, onmouseup, and onclick events are
				all parts of a mouse-click. First when a mouse-button is
				clicked, the onmousedown event is triggered, then, when
				the mouse-button is released, the onmouseup event is
				triggered, finally, when the mouse-click is completed,
				the onclick event is triggered.</p>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;div onmousedown="mDown(this)" onmouseup="mUp(this)"
style="background-color:#D94A38;width:90px;height:20px;padding:40px;"&gt;
Click Me&lt;/div&gt;

&lt;script&gt;
function mDown(obj) {
    obj.style.backgroundColor = "#1ec5e5";
    obj.innerHTML = "Release Me";
}

function mUp(obj) {
    obj.style.backgroundColor="#D94A38";
    obj.innerHTML="Thank You";
}
&lt;/script&gt;

&lt;/body&gt;
&lt;/html&gt; 
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_32.html"
				class="center">프렉티스 32</a>
			<h1>HTML DOM Event Object Reference</h1>
			<p>
				For a list of all HTML DOM events, look at our complete
				<a
					href="https://www.w3schools.com/jsref/dom_obj_event.asp">HTML
					DOM Event Object Reference</a>.
			</p>
			<h1>More Examples</h1>
			<pre>
onmousedown and onmouseup
Change an image when a user holds down the mouse button.

onload
Display an alert box when the page has finished loading.

onfocus
Change the background-color of an input field when it gets focus.

Mouse Events
Change the color of an element when the cursor moves over it.</pre>
			<h1 class="subject sub">onmousedown and onmouseup</h1>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
function lighton() {
    document.getElementById('myimage').src = "bulbon.gif";
}
function lightoff() {
    document.getElementById('myimage').src = "bulboff.gif";
}
&lt;/script&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;img id="myimage" onmousedown="lighton()" onmouseup="lightoff()" src="bulboff.gif" width="100" height="180" /&gt;

&lt;p&gt;Click mouse and hold down!&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_33.html"
				class="center">프렉티스 33</a>

			<h1 class="subject sub">onload</h1>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;

&lt;script&gt;
function mymessage() {
    alert("This message was triggered from the onload event");
}
&lt;/script&gt;
&lt;/head&gt;

&lt;body onload="mymessage()"&gt;
&lt;/body&gt;

&lt;/html&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_34.html"
				class="center">프렉티스 34</a>
			<h1 class="subject sub">onfocus</h1>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
&lt;script&gt;
function myFunction(x) {
    x.style.background = "yellow";
}
&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

Enter your name: &lt;input type="text" onfocus="myFunction(this)"&gt;

&lt;p&gt;When the input field gets focus, a function is triggered which changes the background-color.&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_35.html"
				class="center">프렉티스 35</a>
			<h1 class="subject sub">Mouse Events</h1>
			<pre class="code">
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;body&gt;

&lt;h1 onmouseover="style.color='red'"
onmouseout="style.color='black'"&gt;
Mouse over this text&lt;/h1&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
			<a href="/studyhtml5/ch05/practice_dom/practice_36.html"
				class="center">프렉티스 36</a>

			<h1 class="bookmark">HTML DOM Events Reference</h1>
			<h2>HTML DOM Events</h2>
			<p>
				HTML DOM events allow JavaScript to register different
				event handlers on elements in an HTML document. <br>
				<br> Events are normally used in combination with
				functions, and the function will not be executed before
				the event occurs (such as when a user clicks a button).
				<br> <br> Tip: The event model was
				standardized by the W3C in DOM Level 2.
			</p>
			<h2>HTML DOM Events</h2>
			<p class="imp">DOM: Indicates in which DOM Level the
				property was introduced.</p>
			<h2>Mouse Events</h2>
			<table>
				<tbody>
					<tr>
						<th style="width: 20%">Event</th>
						<th>Description</th>
						<th style="width: 6%">DOM</th>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onclick.asp">onclick</a></td>
						<td>The event occurs when the user clicks on an
							element</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_oncontextmenu.asp">oncontextmenu</a></td>
						<td>The event occurs when the user right-clicks
							on an element to open a context menu</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondblclick.asp">ondblclick</a></td>
						<td>The event occurs when the user double-clicks
							on an element</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmousedown.asp">onmousedown</a></td>
						<td>The event occurs when the user presses a
							mouse button over an element</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmouseenter.asp">onmouseenter</a></td>
						<td>The event occurs when the pointer is moved
							onto an element</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmouseleave.asp">onmouseleave</a></td>
						<td>The event occurs when the pointer is moved
							out of an element</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmousemove.asp">onmousemove</a></td>
						<td>The event occurs when the pointer is moving
							while it is over an element</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmouseover.asp">onmouseover</a></td>
						<td>The event occurs when the pointer is moved
							onto an element, or onto one of its children</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmouseout.asp">onmouseout</a></td>
						<td>The event occurs when a user moves the mouse
							pointer out of an element, or out of one of its
							children</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onmouseup.asp">onmouseup</a></td>
						<td>The event occurs when a user releases a mouse
							button over an element</td>
						<td>2</td>
					</tr>
				</tbody>
			</table>
			<h2>Keyboard Events</h2>
			<table id="table2">
				<tbody>
					<tr>
						<th style="width: 20%">Event</th>
						<th>Description</th>
						<th style="width: 6%">DOM</th>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onkeydown.asp">onkeydown</a></td>
						<td>The event occurs when the user is pressing a
							key</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onkeypress.asp">onkeypress</a></td>
						<td>The event occurs when the user presses a key</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onkeyup.asp">onkeyup</a></td>
						<td>The event occurs when the user releases a key</td>
						<td>2</td>
					</tr>
				</tbody>
			</table>
			<h2>Frame/Object Events</h2>
			<table>
				<tbody>
					<tr>
						<th style="width: 20%">Event</th>
						<th>Description</th>
						<th style="width: 6%">DOM</th>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onabort.asp">onabort</a></td>
						<td>The event occurs when the loading of a
							resource has been aborted</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onbeforeunload.asp">onbeforeunload</a></td>
						<td>The event occurs before the document is about
							to be unloaded</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onerror.asp">onerror</a></td>
						<td>The event occurs when an error occurs while
							loading an external file</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onhashchange.asp">onhashchange</a></td>
						<td>The event occurs when there has been changes
							to the anchor part of a URL</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onload.asp">onload</a></td>
						<td>The event occurs when an object has loaded</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onpageshow.asp">onpageshow</a></td>
						<td>The event occurs when the user navigates to a
							webpage</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onpagehide.asp">onpagehide</a></td>
						<td>The event occurs when the user navigates away
							from a webpage</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onresize.asp">onresize</a></td>
						<td>The event occurs when the document view is
							resized</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onscroll.asp">onscroll</a></td>
						<td>The event occurs when an element's scrollbar
							is being scrolled</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onunload.asp">onunload</a></td>
						<td>The event occurs once a page has unloaded
							(for &lt;body&gt;)</td>
						<td>2</td>
					</tr>
				</tbody>
			</table>
			<h2>Form Events</h2>
			<table>
				<tbody>
					<tr>
						<th style="width: 20%">Event</th>
						<th>Description</th>
						<th style="width: 6%">DOM</th>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onblur.asp">onblur</a></td>
						<td>The event occurs when an element loses focus</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onchange.asp">onchange</a></td>
						<td>The event occurs when the content of a form
							element, the selection, or the checked state have
							changed (for &lt;input&gt;, &lt;select&gt;, and
							&lt;textarea&gt;)</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onfocus.asp">onfocus</a></td>
						<td>The event occurs when an element gets focus</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onfocusin.asp">onfocusin</a></td>
						<td>The event occurs when an element is about to
							get focus</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onfocusout.asp">onfocusout</a></td>
						<td>The event occurs when an element is about to
							lose focus</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_oninput.asp">oninput</a></td>
						<td>The event occurs when an element gets user
							input</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_oninvalid.asp">oninvalid</a></td>
						<td>The event occurs when an element is invalid</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onreset.asp">onreset</a></td>
						<td>The event occurs when a form is reset</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onsearch.asp">onsearch</a></td>
						<td>The event occurs when the user writes
							something in a search field (for
							&lt;input="search"&gt;)</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onselect.asp">onselect</a></td>
						<td>The event occurs after the user selects
							some&nbsp;text (for &lt;input&gt; and
							&lt;textarea&gt;)</td>
						<td>2</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_onsubmit.asp">onsubmit</a></td>
						<td>The event occurs when a form is submitted</td>
						<td>2</td>
					</tr>
				</tbody>
			</table>
			<h2>Drag Events</h2>
			<table>
				<tbody>
					<tr>
						<th style="width: 20%">Event</th>
						<th>Description</th>
						<th style="width: 6%">DOM</th>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondrag.asp">ondrag</a></td>
						<td>The event occurs when an element is being
							dragged</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondragend.asp">ondragend</a></td>
						<td>The event occurs when the user has finished
							dragging an element</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondragenter.asp">ondragenter</a></td>
						<td>The event occurs when the dragged element
							enters the drop target</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondragleave.asp">ondragleave</a></td>
						<td>The event occurs when the dragged element
							leaves the drop target</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondragover.asp">ondragover</a></td>
						<td>The event occurs when the dragged element is
							over the drop target</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondragstart.asp">ondragstart</a></td>
						<td>The event occurs when the user starts to drag
							an element</td>
						<td>3</td>
					</tr>
					<tr>
						<td><a
							href="https://www.w3schools.com/jsref/event_ondrop.asp">ondrop</a></td>
						<td>The event occurs when the dragged element is
							dropped on the drop target</td>
						<td>3</td>
					</tr>
				</tbody>
			</table>
			<h2>Clipboard Events</h2>
			<table>
  <tbody><tr>
    <th style="width:20%">Event</th>
    <th>Description</th>
    <th style="width:6%">DOM</th>
  </tr>
  <tr>
  <td><a href="https://www.w3schools.com/jsref/event_oncopy.asp">oncopy</a></td>
  <td>The event occurs when the user copies the content of an element</td>
    <td>&nbsp;</td>
  </tr>
  <tr>
  <td><a href="https://www.w3schools.com/jsref/event_oncut.asp">oncut</a></td>
  <td>The event occurs when the user cuts the content of an element</td>
    <td>&nbsp;</td>
  </tr>
   <tr>
  <td><a href="https://www.w3schools.com/jsref/event_onpaste.asp">onpaste</a></td>
  <td>The event occurs when the user pastes some content in an element</td>
    <td>&nbsp;</td>
  </tr>
</tbody></table>
		</article>
	</section>

	<!-- 이거 연습 까지 하자. -->



	<!-- 여기가 끝이다. -->
	<div class="fixed">
		<a href="#index_subject">▲</a>
	</div>
	<footer>자바스크립트 DOM 끝</footer>
</body>
</html>